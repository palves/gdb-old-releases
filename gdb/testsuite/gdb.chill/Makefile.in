# Makefile for regression testing Chill support for the GNU debugger.
#   Copyright (C) 1992, 1993, 1994, 1995 Free Software Foundation, Inc.

# This file is part of GDB.

# GDB is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# GDB is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

srcdir = .
prefix = /usr/local
program_transform_name =

exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
tooldir = $(libdir)/$(target_alias)

datadir = $(exec_prefix)/lib/dejagnu
mandir = $(prefix)/man
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = $(prefix)/info
includedir = $(prefix)/include
gxx_includedir = $(tooldir)/g++-include
docdir = $(datadir)/doc
targetdir = $(datadir)/$(target_alias)

SHELL = /bin/sh

INSTALL = install -c
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL)

RUNTEST = runtest

RUNTESTFLAGS = 

EXPECT = `if [ -f $${rootme}../../../expect/expect ] ; then \
          echo $${rootme}../../../expect/expect ; \
          else echo expect ; fi`

RUNTEST_FOR_TARGET = ` \
  if [ -f $${rootme}../../../dejagnu/site.exp ] ; then \
    echo $${rootme}../../../dejagnu/runtest ; \
  else \
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
      echo $(RUNTEST); \
    else \
      t='$(program_transform_name)'; echo runtest | sed -e '' $$t; \
    fi; \
  fi`

CFLAGS = -g
CHILLFLAGS = $(CFLAGS)

CHILL_FOR_TARGET = ` \
  if [ -f $${rootme}../../../gcc/Makefile ] ; then \
    echo $${rootme}../../../gcc/xgcc -B$${rootme}../../../gcc/; \
  else \
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
      echo gcc; \
    else \
      t='$(program_transform_name)'; echo gcc | sed -e '' $$t; \
    fi; \
  fi`

CHILL = $(CHILL_FOR_TARGET)

CHILL_LIB = ` \
  if [ -f $${rootme}../../../gcc/ch/runtime/libchill.a ] ; then \
    echo $${rootme}../../../gcc/ch/runtime/chillrt0.o \
      $${rootme}../../../gcc/ch/runtime/libchill.a; \
  else \
      echo -lchill; \
  fi`

#### host, target, and site specific Makefile frags come in here.

EXECUTABLES = callch.exe chillvars.exe misc.exe \
  result.exe string.exe tuples.exe \
  pr-4975.exe pr-5016.exe pr-5020.exe pr-5022.exe pr-5646.exe pr-5984.exe \
  pr-6292.exe pr-6632.exe

all:	$(EXECUTABLES)

# To force pr-4975-grt to be compiled before pr-4975, so the
# latter can use the former's grant file.
pr-4975.o: pr-4975-grt.o
pr-5646.o: pr-5646-grt.o
pr-6632.o: pr-6632-grt.o

.SUFFIXES: .ch .exe .check

pr-6632.exe:  pr-6632.o pr-6632-grt.o
	$(CHILL_FOR_TARGET) $(CHILLFLAGS) $(LDFLAGS) -o pr-6632.exe \
	  pr-6632.o pr-6632-grt.o $(CHILL_LIB) $(LIBS)

.o.exe:
	$(CHILL_FOR_TARGET) $(CHILLFLAGS) $(LDFLAGS) -o $*.exe $*.o $(CHILL_LIB) $(LIBS)

.ch.o:
	$(CHILL_FOR_TARGET) $(CHILLFLAGS) -c $<

# Do 'make chillvars.check' to run just the chillvars.{ch,exp} test.

.exe.check:
	rootme=`pwd`/; export rootme; \
	cd .. ; \
	$(MAKE) just-check RUNTESTFLAGS="${RUNTESTFLAGS} $*.exp" \
	  EXPECT=${EXPECT}

.NOEXPORT:
INFODIRS=doc
info:
install-info:
dvi:

install:

uninstall: force

site.exp: ./config.status Makefile
	@echo "Making a new config file..."
	-@rm -f ./tmp?
	@touch site.exp
	-@mv site.exp site.bak
	@echo "## these variables are automatically generated by make ##" > ./tmp0
	@echo "# Do not edit here. If you wish to override these values" >> ./tmp0
	@echo "# add them to the last section" >> ./tmp0
	@echo "set host_os ${host_os}" >> ./tmp0
	@echo "set host_alias ${host_alias}" >> ./tmp0
	@echo "set host_cpu ${host_cpu}" >> ./tmp0
	@echo "set host_vendor ${host_vendor}" >> ./tmp0
	@echo "set target_os ${target_os}" >> ./tmp0
	@echo "set target_alias ${target_alias}" >> ./tmp0
	@echo "set target_cpu ${target_cpu}" >> ./tmp0
	@echo "set target_vendor ${target_vendor}" >> ./tmp0
	@echo "set host_triplet ${host_canonical}" >> ./tmp0
	@echo "set target_triplet ${target_canonical}" >> ./tmp0
	@echo "set srcdir ${srcdir}" >> ./tmp0
		@echo "set objdir `pwd`" >> ./tmp0
	@echo "set tool gdb" >> ./tmp0
	@echo "## All variables above are generated by configure. Do Not Edit ##" >> ./tmp0
		@cat ./tmp0 > site.exp
	@cat site.bak | sed \
			-e '1,/^## All variables above are.*##/ d' >> site.exp
	-@rm -f ./tmp?

installcheck:
check: site.exp all just-check
just-check:
	tests=`cd ${srcdir}; echo *.exp` ; \
	rootme=`pwd`/; export rootme; \
	cd .. ; \
	$(MAKE) just-check RUNTESTFLAGS="${RUNTESTFLAGS} $${tests}" \
	  EXPECT=${EXPECT}

clean mostlyclean:
	-rm -f *~ core *.o a.out xgdb *.x $(EXECUTABLES)

distclean realclean: clean
	-rm -f *~ core *.log *.plog *.sum *.psum site.*
	-rm -f Makefile config.status *-init.exp
	-rm -fr *.log summary detail *.plog *.sum *.psum site.*

Makefile : $(srcdir)/Makefile.in $(srcdir)/configure.in $(host_makefile_frag) $(target_makefile_frag)
	$(SHELL) ./config.status

