# Makefile for regression testing the GNU debugger.
#   Copyright (C) 1992, 1993, 1994 Free Software Foundation, Inc.

# This file is part of GDB.

# GDB is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# GDB is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

srcdir = .
prefix = /usr/local
program_transform_name =

exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
tooldir = $(libdir)/$(target_alias)

datadir = $(exec_prefix)/lib/dejagnu
mandir = $(prefix)/man
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = $(prefix)/info
includedir = $(prefix)/include
gxx_includedir = $(tooldir)/g++-include
docdir = $(datadir)/doc
targetdir = $(datadir)/$(target_alias)

SHELL = /bin/sh

INSTALL = install -c
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL)

CXXFLAGS = -g -O

RUNTESTFLAGS = 

LINK = ln -s

EXPECT = ` \
  if [ -f $${rootme}/../../../expect/expect ] ; then \
    echo $${rootme}/../../../expect/expect ; \
  else \
    echo expect ; \
  fi`

RUNTEST = ` \
  if [ -f $${rootme}/../../../dejagnu/site.exp ] ; then \
    echo $${rootme}/../../../dejagnu/runtest ; \
  else \
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
      echo runtest; \
    else \
      t='$(program_transform_name)'; echo runtest | sed -e '' $$t; \
    fi; \
  fi`

CXX = ` \
  if [ -f $${rootme}/../../../gcc/xgcc ] ; then \
    echo $${rootme}/../../../gcc/xgcc -B$${rootme}/../../../gcc/; \
  else \
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
      echo gcc; \
    else \
      t='$(program_transform_name)'; echo gcc | sed -e '' $$t; \
    fi; \
  fi`

GDB = ` \
  if [ -f $${rootme}/../gdb ] ; \
    then echo $${rootme}|sed -e 's@/[^/]*$$@@'|sed -e 's@$$@/gdb@' ; \
    else echo gdb; \
  fi`

GDBFLAGS = -nx

#### host, target, and site specific Makefile frags come in here.

EXECUTABLES = misc cplusfuncs virtfunc templates templ-info.exp

all:	$(EXECUTABLES)

misc: misc.o
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o misc misc.o $(LIBS)

misc.o: misc.cc
	$(CXX) $(CXXFLAGS) -c $(srcdir)/misc.cc

cplusfuncs: cplusfuncs.o
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o cplusfuncs cplusfuncs.o $(LIBS)

cplusfuncs.o: cplusfuncs.cc
	$(CXX) $(CXXFLAGS) -c $(srcdir)/cplusfuncs.cc

virtfunc: virtfunc.o
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o virtfunc virtfunc.o $(LIBS)

virtfunc.o: virtfunc.cc
	$(CXX) $(CXXFLAGS) -c $(srcdir)/virtfunc.cc

# We want to make sure templ-info.exp reflects the way that templates was
# compiled; that's why this isn't a separate rule.

templates templ-info.exp: templates.o
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o templates.tmp templates.o $(LIBS)
	$(CXX) $(CXXFLAGS) -E $(srcdir)/templ-info.cc >templ-info.tmp
	mv templ-info.tmp templ-info.exp
	mv templates.tmp templates

templates.o: templates.cc
	$(CXX) $(CXXFLAGS) -c $(srcdir)/templates.cc

.NOEXPORT:

INFODIRS=doc

info:

install-info:

dvi:

install:

uninstall: force

site.exp: ./config.status Makefile
	@echo "Making a new config file..."
	-@rm -f ./tmp?
	@touch site.exp
	-@mv site.exp site.bak
	@echo "## these variables are automatically generated by make ##" > ./tmp0
	@echo "# Do not edit here. If you wish to override these values" >> ./tmp0
	@echo "# add them to the last section" >> ./tmp0
	@echo "set GDBFLAGS \"${GDBFLAGS}\"" >> ./tmp0
	@echo "set host_os ${host_os}" >> ./tmp0
	@echo "set host_alias ${host_alias}" >> ./tmp0
	@echo "set host_cpu ${host_cpu}" >> ./tmp0
	@echo "set host_vendor ${host_vendor}" >> ./tmp0
	@echo "set target_os ${target_os}" >> ./tmp0
	@echo "set target_alias ${target_alias}" >> ./tmp0
	@echo "set target_cpu ${target_cpu}" >> ./tmp0
	@echo "set target_vendor ${target_vendor}" >> ./tmp0
	@echo "set host_triplet ${host_canonical}" >> ./tmp0
	@echo "set target_triplet ${target_canonical}" >> ./tmp0
	@echo "set srcdir ${srcdir}" >> ./tmp0
		@echo "set objdir `pwd`" >> ./tmp0
	@echo "set tool gdb" >> ./tmp0
	@echo "## All variables above are generated by configure. Do Not Edit ##" >> ./tmp0
		@cat ./tmp0 > site.exp
	@cat site.bak | sed \
			-e '1,/^## All variables above are.*##/ d' >> site.exp
	-@rm -f ./tmp?

installcheck:

check: site.exp all just-check

just-check:
	rootme=`pwd`; export rootme; \
	srcdir=${srcdir} ; export srcdir ; \
	EXPECT=${EXPECT} ; export EXPECT ; \
	if [ -f $${rootme}/../../expect/expect ] ; then  \
	  TCL_LIBRARY=$${srcdir}/../../tcl/library ; \
	  export TCL_LIBRARY ; fi ; \
	$(RUNTEST) $(RUNTESTFLAGS) --tool gdb GDB=$(GDB) --srcdir $(srcdir)

clean mostlyclean:
	-rm -f *~ core *.o a.out xgdb *.x $(EXECUTABLES)

distclean realclean: clean
	-rm -f *~ core *.log *.plog *.sum *.psum site.*
	-rm -f Makefile config.status *-init.exp
	-rm -fr *.log summary detail *.plog *.sum *.psum site.*

Makefile : $(srcdir)/Makefile.in $(srcdir)/configure.in $(host_makefile_frag) $(target_makefile_frag)
	$(SHELL) ./config.status

