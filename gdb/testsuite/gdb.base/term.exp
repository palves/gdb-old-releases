#   Copyright (C) 1988, 1990, 1991, 1992 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@cygnus.com)

if $tracelevel then {
    strace $tracelevel
}

# This only works for native, I think.
if ![isnative] then {
    warning "Term test case can't run on a target system."
    continue
}

#
# test running programs
#
set prms_id 0
set bug_id 0

set binfile "run"

if ![file exists $objdir/$subdir/$binfile] then {
    perror "$objdir/$subdir/$binfile does not exist."
    return 0
}

delete_breakpoints
gdb_reinitialize_dir $srcdir/$subdir
gdb_load $objdir/$subdir/$binfile

# Test that GDB correctly identifies that it does not control a terminal.
send "info terminal\n"
expect {
    -re "No saved terminal information..*$prompt $"\
	{ send "run 5\n"
	    expect {
		-re "Starting program.*$binfile.*120.*Program exited normally..*$prompt $"\
		    { send "info terminal\n"
			expect {
			    -re "No saved terminal information..*$prompt $"\
				{ pass "info terminal" }
			    -re ".*$prompt $"	{ fail "info terminal" }
			    timeout		{ fail "(timeout) info terminal" }
			}
		    }
		-re ".*$prompt $"	{ fail "info terminal" }
		timeout		{ fail "(timeout) info terminal" }
	    }
	}
    -re ".*$prompt $"	{ fail "info terminal" }
    timeout		{ fail "(timeout) info terminal" }
}


# In mid-execution
send "break main\n"
expect {
    -re "Breakpoint.*at.* file .*, line.*$prompt $"\
	{ send "run 5\n"
	    expect {
		-re "Starting program.*Breakpoint \[0-9\]+,.*main.*if .argc != 2.*$prompt $"\
		    { send "info terminal\n"
			expect {
			    -re "Inferior's terminal status .currently saved by GDB.:.*$prompt $"\
				{ pass "info terminal at breakpoint" }
			    -re ".*$prompt $"	{ fail "info terminal at breakpoint" }
			    timeout			{ fail "(timeout) info terminal at breakpoint" }
			}
		    }
		-re ".*$prompt $"	{ fail "info terminal at breakpoint" }
		timeout			{ fail "(timeout) info terminal at breakpoint" }
	    }
	}
    -re ".*$prompt $"	{ fail "info terminal at breakpoint" }
    timeout		{ fail "(timeout) info terminal at breakpoint" }
}


