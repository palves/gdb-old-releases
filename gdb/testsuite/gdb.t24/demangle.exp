# Copyright (C) 1992 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@prep.ai.mit.edu

# This file was written by Fred Fish. (fnf@cygnus.com)

if $tracelevel then {
	strace $tracelevel
}

# Variables to keep track of number of passes, number of failures, and
# a limit on the number of failures.  We periodically test to see how
# many failures have occurred, and abandon a particular test if the
# maximum has been exceeded.  Note that exactly how many failures are
# allowed depends on the setting of max_dem_failcount, how often we
# test it, and exactly where the errors occur with respect to the tests.

set dem_passcount 0
set dem_failcount 0
set max_dem_failcount 20

#
#  Demangle the first arg and check to ensure that it matches the second arg.
#  Increment the passcount for success and the failcount for failure.
#  Also log failing demanglings.
#

proc demangle { mangled demangled } {
    global prompt
    global dem_passcount
    global dem_failcount
    global xfail_flag

    send "maint demangle $mangled\n"
    expect {
	"$demangled\r\n" {
	    expect {
		-re "$prompt $" {
		    incr dem_passcount
		}
		-re ".*$prompt $" {
		    if $xfail_flag==0 then {
			incr dem_failcount
		    }
		    fail "trash after demangling \"$mangled\""
		}
		timeout {
		    if $xfail_flag==0 then {
			incr dem_failcount
		    }
		    fail "demangling failed for \"$mangled\" (timeout)"
		}
	    }
	}
	-re ".*$prompt $" {
	    if $xfail_flag==0 then {
		incr dem_failcount
	    }
	    fail "demangling failed for \"$mangled\""
	}
	timeout {
	    if $xfail_flag==0 then {
		incr dem_failcount
	    }
	    fail "demangling failed for \"$mangled\" (timeout)"
	}
    }
}

#
#  Test gnu style name demangling
#

proc test_gnu_style_demangling {} {
    global prompt
    global dem_passcount
    global dem_failcount
    global max_dem_failcount

    set dem_passcount 0
    set dem_failcount 0

    # Set the demangling style to "gnu" and then check to make sure
    # it really got set.  Return if the style failed to get set for
    # some reason.

    send "set demangle-style gnu\n"
    expect {
	-re "set demangle-style gnu\r\n$prompt $" {}
	-re ".*$prompt $" { fail "set demangle-style gnu failed" ; return }
	timeout { fail "set demangle-style gnu failed (timeout)" ; return }
    }

    send "show demangle-style\n"
    expect {
	-re "The current C\+\+ demangling style is \"gnu\".\r\n$prompt $" {}
	-re ".*$prompt $" { fail "demangling style not set to gnu" }
	timeout { fail "show demangle-style timed out" }
    }

    demangle "Abort__FP6EditoriPCc" "Abort(Editor *, int, const char *)"
    demangle "AddAlignment__9ivTSolverUiP12ivInteractorP7ivTGlue" "ivTSolver::AddAlignment(unsigned int, ivInteractor *, ivTGlue *)"
    demangle "Append__15NameChooserViewPCc" "NameChooserView::Append(const char *)"
    demangle "Append__17NameChooserDialogPCc" "NameChooserDialog::Append(const char *)"
    demangle "ArrowheadIntersects__9ArrowLineP9ArrowheadR6BoxObjP7Graphic" "ArrowLine::ArrowheadIntersects(Arrowhead *, BoxObj &, Graphic *)"
    demangle "AtEnd__13ivRubberGroup" "ivRubberGroup::AtEnd(void)"
    demangle "BgFilter__9ivTSolverP12ivInteractor" "ivTSolver::BgFilter(ivInteractor *)"
    demangle "BitPatterntoa__FRC10BitPatternccc" "BitPatterntoa(const BitPattern &, char, char, char)"
    demangle "Check__6UArrayi" "UArray::Check(int)"
    demangle "Checked__14ConflictDialogPCc" "ConflictDialog::Checked(const char *)"
    demangle "CoreConstDecls__8TextCodeR7ostream" "TextCode::CoreConstDecls(ostream &)"
    demangle "CoreConstInits__9GroupCodeR7ostream" "GroupCode::CoreConstInits(ostream &)"
    demangle "DeleteViews__15PostScriptViews" "PostScriptViews::DeleteViews(void)"
    demangle "DeleteViews__8CodeView" "CodeView::DeleteViews(void)"
    demangle "DependsOn__6EditorP9Component" "Editor::DependsOn(Component *)"
    demangle "DestroyCnxns__7CSolver" "CSolver::DestroyCnxns(void)"
    demangle "Detach__8StateVarP12StateVarView" "StateVar::Detach(StateVarView *)"
    demangle "Detach__9ComponentP13ComponentView" "Component::Detach(ComponentView *)"
    demangle "Done__9ComponentG8Iterator" "Component::Done(Iterator)"
    demangle "Done__9SelectionG8Iterator" "Selection::Done(Iterator)"
    demangle "DrawAMPM__5DFaceP9ivPainter" "DFace::DrawAMPM(ivPainter *)"
    demangle "DrawAdditions__6Damage" "Damage::DrawAdditions(void)"
    demangle "DrawDate__5DFace" "DFace::DrawDate(void)"
    demangle "DrawDestinationTransformedImage__FP7_XImageiiT0iiUlUiiiUiUlUlP4_XGCRC13ivTransformeriiii" "DrawDestinationTransformedImage(_XImage *, int, int, _XImage *, int, int, unsigned long, unsigned int, int, int, unsigned int, unsigned long, unsigned long, _XGC *, const ivTransformer &, int, int, int, int)"
    demangle "Edit__12StringEditor" "StringEditor::Edit(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "Edit__12StringEditorPCcii" "StringEditor::Edit(const char *, int, int)"
    demangle "Effect__11RelateManipR7ivEvent" "RelateManip::Effect(ivEvent &)"
    demangle "Effect__9DragManipR7ivEvent" "DragManip::Effect(ivEvent &)"
    demangle "Elem__12GraphicViewsG8Iterator" "GraphicViews::Elem(Iterator)"
    demangle "Elem__15PostScriptViewsG8Iterator" "PostScriptViews::Elem(Iterator)"
    demangle "EmitSlider__8CodeViewR7ostream" "CodeView::EmitSlider(ostream &)"
    demangle "Emit__10ExternViewR7ostream" "ExternView::Emit(ostream &)"
    demangle "EndOfLine__12ivTextBufferi" "ivTextBuffer::EndOfLine(int)"
    demangle "EndOfLine__12ivTextEditor" "ivTextEditor::EndOfLine(void)"
    demangle "EndOfSelection__9TextManip" "TextManip::EndOfSelection(void)"
    demangle "EndOfText__12ivTextEditor" "ivTextEditor::EndOfText(void)"
    demangle "FilterName__FPCc" "FilterName(const char *)"
    demangle "Filter__6PSTextPCci" "PSText::Filter(const char *, int)"
    demangle "FindColor__7CatalogPCciii" "Catalog::FindColor(const char *, int, int, int)"
    demangle "FindControl__9ToolPanelPCc" "ToolPanel::FindControl(const char *)"
    demangle "FindFixed__FRP4CNetP4CNet" "FindFixed(CNet *&, CNet *)"
    demangle "FindFont__7CatalogPCcN21" "Catalog::FindFont(const char *, const char *, const char *)"
    demangle "FindParallelPeer__8ConnInfo" "ConnInfo::FindParallelPeer(void)"
    demangle "Fix48_abort__FR8twolongs" "Fix48_abort(twolongs &)"
    demangle "GetArrowSplineComp__15ArrowSplineView" "ArrowSplineView::GetArrowSplineComp(void)"
    demangle "GetAttribute__7CatalogPCc" "Catalog::GetAttribute(const char *)"
    demangle "GetBarInfo__15iv2_6_VScrollerP13ivPerspectiveRiT2" "iv2_6_VScroller::GetBarInfo(ivPerspective *, int &, int &)"
    demangle "GetBaseClass__15SubclassNameVar" "SubclassNameVar::GetBaseClass(void)"
    demangle "GetBgColor__8ColorVar" "ColorVar::GetBgColor(void)"
    demangle "GetBgColor__C9ivPainter" "ivPainter::GetBgColor(void) const"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "GetClassId__10BorderView" "BorderView::GetClassId(void)"
    demangle "GetClassId__10ButtonCode" "ButtonCode::GetClassId(void)"
    demangle "GetClassId__10EditorView" "EditorView::GetClassId(void)"
    demangle "GetClassId__10ExternView" "ExternView::GetClassId(void)"
    demangle "GetClassId__10NewViewCmd" "NewViewCmd::GetClassId(void)"
    demangle "GetClassId__12FrameGraphic" "FrameGraphic::GetClassId(void)"
    demangle "GetClassId__12GraphicComps" "GraphicComps::GetClassId(void)"
    demangle "GetClassId__12IPolygonComp" "IPolygonComp::GetClassId(void)"
    demangle "GetClassId__12IStencilComp" "IStencilComp::GetClassId(void)"
    demangle "GetClassId__12PreorderView" "PreorderView::GetClassId(void)"
    demangle "GetClassId__12PullMenuCode" "PullMenuCode::GetClassId(void)"
    demangle "GetClassId__15CommandCtrlCode" "CommandCtrlCode::GetClassId(void)"
    demangle "GetClassId__15CommandCtrlComp" "CommandCtrlComp::GetClassId(void)"
    demangle "GetClassId__15IBViewerGraphic" "IBViewerGraphic::GetClassId(void)"
    demangle "GetClassId__15IGridSpacingCmd" "IGridSpacingCmd::GetClassId(void)"
    demangle "GetClassId__15PreciseScaleCmd" "PreciseScaleCmd::GetClassId(void)"
    demangle "GetClassId__15SubclassNameVar" "SubclassNameVar::GetClassId(void)"
    demangle "GetClassId__8DeckCode" "DeckCode::GetClassId(void)"
    demangle "GetClassId__8DeckComp" "DeckComp::GetClassId(void)"
    demangle "GetClassId__8GlueView" "GlueView::GetClassId(void)"
    demangle "GetClassId__8GroupCmd" "GroupCmd::GetClassId(void)"
    demangle "GetClassId__8LinkComp" "LinkComp::GetClassId(void)"
    demangle "GetClassId__8LinkView" "LinkView::GetClassId(void)"
    demangle "GetClassName__15EnlargerGraphic" "EnlargerGraphic::GetClassName(void)"
    demangle "GetClassName__15MenuItemGraphic" "MenuItemGraphic::GetClassName(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "GetClassName__7ScanCmd" "ScanCmd::GetClassName(void)"
    demangle "GetClassName__C12ivInteractor" "ivInteractor::GetClassName(void) const"
    demangle "GetClosedSplineComp__16ClosedSplineView" "ClosedSplineView::GetClosedSplineComp(void)"
    demangle "GetClosedSpline__16ClosedSplineComp" "ClosedSplineComp::GetClosedSpline(void)"
    demangle "GetComp__11GraphicCompG8Iterator" "GraphicComp::GetComp(Iterator)"
    demangle "GetInfoDialog__5IView" "IView::GetInfoDialog(void)"
    demangle "GetInput__8TF_2Porti" "TF_2Port::GetInput(int)"
    demangle "GetInput__9TF_Directi" "TF_Direct::GetInput(int)"
    demangle "GetInteractorComp__10RelateMenu" "RelateMenu::GetInteractorComp(void)"
    demangle "GetInteractorComp__14InteractorView" "InteractorView::GetInteractorComp(void)"
    demangle "GetKeyMap__11IdrawEditor" "IdrawEditor::GetKeyMap(void)"
    demangle "GetKeyMap__6Editor" "Editor::GetKeyMap(void)"
    demangle "GetState__12IBViewerCompPCc" "IBViewerComp::GetState(const char *)"
    demangle "GetState__12MenuItemCompPCc" "MenuItemComp::GetState(const char *)"
    demangle "GetState__15MarginFrameCompPCc" "MarginFrameComp::GetState(const char *)"
    demangle "GetState__5ICompPCc" "IComp::GetState(const char *)"
    demangle "GetStencilComp__11StencilView" "StencilView::GetStencilComp(void)"
    demangle "GetStencil__11StencilComp" "StencilComp::GetStencil(void)"
    demangle "Iisdouble__FPC6IntRep" "Iisdouble(const IntRep *)"
    demangle "Include__10InfoDialogP9IBVarView" "InfoDialog::Include(IBVarView *)"
    demangle "Include__10RelateMenuP9ivControl" "RelateMenu::Include(ivControl *)"
    demangle "Include__15H_PullrightMenuP9ivControl" "H_PullrightMenu::Include(ivControl *)"
    demangle "Include__7ClassesP9ClassInfo" "Classes::Include(ClassInfo *)"
    demangle "InsertBody__15H_PullrightMenuii" "H_PullrightMenu::InsertBody(int, int)"
    demangle "InsertCharacter__9TextManipc" "TextManip::InsertCharacter(char)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "InsertLinesBefore__13ivTextDisplayii" "ivTextDisplay::InsertLinesBefore(int, int)"
    demangle "InsertPopup__7ivWorldP12ivInteractor" "ivWorld::InsertPopup(ivInteractor *)"
    demangle "InsertToplevel__7ivWorldP12ivInteractorT1" "ivWorld::InsertToplevel(ivInteractor *, ivInteractor *)"
    demangle "InsertToplevel__7ivWorldP12ivInteractorT1iiUi" "ivWorld::InsertToplevel(ivInteractor *, ivInteractor *, int, int, unsigned int)"
    demangle "IsADirectory__FPCcR4stat" "IsADirectory(const char *, stat &)"
    demangle "IsAGroup__FP11GraphicViewP11GraphicComp" "IsAGroup(GraphicView *, GraphicComp *)"
    demangle "IsAScene__14InteractorComp" "InteractorComp::IsAScene(void)"
    demangle "IsAScene__9SceneComp" "SceneComp::IsAScene(void)"
    demangle "IsA__10ButtonCodeUl" "ButtonCode::IsA(unsigned long)"
    demangle "IsA__10ButtonCompUl" "ButtonComp::IsA(unsigned long)"
    demangle "IsA__7NameVarUl" "NameVar::IsA(unsigned long)"
    demangle "IsA__7OpenCmdUl" "OpenCmd::IsA(unsigned long)"
    demangle "IsA__7QuitCmdUl" "QuitCmd::IsA(unsigned long)"
    demangle "IsA__7RedoCmdUl" "RedoCmd::IsA(unsigned long)"
    demangle "IsA__8AlignCmdUl" "AlignCmd::IsA(unsigned long)"
    demangle "IsA__8ArrowCmdUl" "ArrowCmd::IsA(unsigned long)"
    demangle "Normalize__11FBDirectoryPCc" "FBDirectory::Normalize(const char *)"
    demangle "NorthWest__13ConstrainRectii" "ConstrainRect::NorthWest(int, int)"
    demangle "Note__13StringBrowserR7ivEvent" "StringBrowser::Note(ivEvent &)"
    demangle "Notify__7PrintBS" "PrintBS::Notify(void)"
    demangle "Notify__8StateVar" "StateVar::Notify(void)"
    demangle "OK__7Obstack" "Obstack::OK(void)"
    demangle "OK__C10BitPattern" "BitPattern::OK(void) const"
    demangle "ReadFont__7CatalogR7istream" "Catalog::ReadFont(istream &)"
    demangle "ReadGS__9IBGraphicR7istream" "IBGraphic::ReadGS(istream &)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "ReadMultiLine__12IdrawCatalogR7istream" "IdrawCatalog::ReadMultiLine(istream &)"
    demangle "ReadName__FR7istreamPc" "ReadName(istream &, char *)"
    demangle "ReadPolygon__12IdrawCatalogR7istream" "IdrawCatalog::ReadPolygon(istream &)"
    demangle "ReadPostScript__12IdrawCatalogR7istream" "IdrawCatalog::ReadPostScript(istream &)"
    demangle "Redraw__13StringBrowseriiii" "StringBrowser::Redraw(int, int, int, int)"
    demangle "Redraw__13ivBorderFrameiiii" "ivBorderFrame::Redraw(int, int, int, int)"
    demangle "Redraw__14iv2_6_Adjusteriiii" "iv2_6_Adjuster::Redraw(int, int, int, int)"
    demangle "Redraw__15ArrowInteractoriiii" "ArrowInteractor::Redraw(int, int, int, int)"
    demangle "Redraw__4Logoiiii" "Logo::Redraw(int, int, int, int)"
    demangle "Redraw__5DFaceiiii" "DFace::Redraw(int, int, int, int)"
    demangle "Right__C8ivBitmap" "ivBitmap::Right(void) const"
    demangle "Rigid__5CGlue" "CGlue::Rigid(void)"
    demangle "Rotate90__8ivBitmap" "ivBitmap::Rotate90(void)"
    demangle "Rotate__13ivTransformerf" "ivTransformer::Rotate(float)"
    demangle "Rotated__C13ivTransformerf" "ivTransformer::Rotated(float) const"
    demangle "Round__Ff" "Round(float)"
    demangle "SetDirectory__13ivFileBrowserPCc" "ivFileBrowser::SetDirectory(const char *)"
    demangle "SetEditorInfo__7CatalogP10EditorInfo" "Catalog::SetEditorInfo(EditorInfo *)"
    demangle "SetExport__16MemberSharedNameUi" "MemberSharedName::SetExport(unsigned int)"
    demangle "SetFeedback__7ivWorldii" "ivWorld::SetFeedback(int, int)"
    demangle "SetFont__7FontVarP8ivPSFont" "FontVar::SetFont(ivPSFont *)"
    demangle "SetFont__7GraphicP8ivPSFont" "Graphic::SetFont(ivPSFont *)"
    demangle "Set__14ivControlState13ControlStatusUi" "ivControlState::Set(ControlStatus, unsigned int)"
    demangle "Set__5DFacePcii" "DFace::Set(char *, int, int)"
    demangle "Set__5Digiti" "Digit::Set(int)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "Update__9GVUpdater" "GVUpdater::Update(void)"
    demangle "VConvert__9ivTSolverP12ivInteractorRP8TElementT2" "ivTSolver::VConvert(ivInteractor *, TElement *&, TElement *&)"
    demangle "VConvert__9ivTSolverP7ivTGlueRP8TElement" "ivTSolver::VConvert(ivTGlue *, TElement *&)"
    demangle "VOrder__9ivTSolverUiRP12ivInteractorT2" "ivTSolver::VOrder(unsigned int, ivInteractor *&, ivInteractor *&)"
    demangle "Valid__7CatalogPCcRP4Tool" "Catalog::Valid(const char *, Tool *&)"
    demangle "Valid__7CatalogPCcRP7Command" "Catalog::Valid(const char *, Command *&)"
    demangle "_10PageButton\$__both" "PageButton::__both"
    demangle "_10PageButton\$__chosen" "PageButton::__chosen"
    demangle "_10PageButton\$__fade" "PageButton::__fade"
    demangle "_10PageButton\$__hit" "PageButton::__hit"
    demangle "_10PageButton\$__plain" "PageButton::__plain"
    demangle "_3RNG\$singleMantissa" "RNG::singleMantissa"
    demangle "_3ios\$floatfield" "ios::floatfield"
    demangle "_5IComp\$_release" "IComp::_release"
    demangle "_6GetOpt\$nextchar" "GetOpt::nextchar"
    demangle "_6GetOpt\$ordering" "GetOpt::ordering"
    demangle "_\$_10BitmapComp" "BitmapComp::~BitmapComp(void)"
    demangle "_\$_10BitmapView" "BitmapView::~BitmapView(void)"
    demangle "_\$_10ButtonView" "ButtonView::~ButtonView(void)"
    demangle "_\$_10ConnectCmd" "ConnectCmd::~ConnectCmd(void)"
    demangle "_\$_10ReplaceCmd" "ReplaceCmd::~ReplaceCmd(void)"
    demangle "_\$_11InorderView" "InorderView::~InorderView(void)"
    demangle "_\$_11StencilView" "StencilView::~StencilView(void)"
    demangle "_\$_11StrEditCode" "StrEditCode::~StrEditCode(void)"
    demangle "_\$_11StretchTool" "StretchTool::~StretchTool(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "_\$_11StyleToFont" "StyleToFont::~StyleToFont(void)"
    demangle "_\$_11TextGraphic" "TextGraphic::~TextGraphic(void)"
    demangle "_\$_12ivRubberAxis" "ivRubberAxis::~ivRubberAxis(void)"
    demangle "_\$_12ivRubberLine" "ivRubberLine::~ivRubberLine(void)"
    demangle "_\$_13ivRubberGroup" "ivRubberGroup::~ivRubberGroup(void)"
    demangle "_\$_13ivScalingLine" "ivScalingLine::~ivScalingLine(void)"
    demangle "_\$_13ivScalingRect" "ivScalingRect::~ivScalingRect(void)"
    demangle "_\$_14ivRubberSpline" "ivRubberSpline::~ivRubberSpline(void)"
    demangle "_\$_14ivRubberSquare" "ivRubberSquare::~ivRubberSquare(void)"
    demangle "_\$_17HitTargetAreaList" "HitTargetAreaList::~HitTargetAreaList(void)"
    demangle "_\$_17IBGraphicCompTool" "IBGraphicCompTool::~IBGraphicCompTool(void)"
    demangle "_\$_17PushButtonGraphic" "PushButtonGraphic::~PushButtonGraphic(void)"
    demangle "_\$_17ReporterInfo_List" "ReporterInfo_List::~ReporterInfo_List(void)"
    demangle "_\$_17SFH_ClosedBSpline" "SFH_ClosedBSpline::~SFH_ClosedBSpline(void)"
    demangle "_\$_3foo" "foo::~foo(void)"
    demangle "_\$_5Fix32" "Fix32::~Fix32(void)"
    demangle "_\$_5Fix48" "Fix48::~Fix48(void)"
    demangle "_\$_5PSPad" "PSPad::~PSPad(void)"
    demangle "_\$_5Point" "Point::~Point(void)"
    demangle "_\$_5Props" "Props::~Props(void)"
    demangle "_\$_7PSBrush" "PSBrush::~PSBrush(void)"
    demangle "_\$_7UndoCmd" "UndoCmd::~UndoCmd(void)"
    demangle "_\$_8FrontCmd" "FrontCmd::~FrontCmd(void)"
    demangle "_\$_8GlueCode" "GlueCode::~GlueCode(void)"
    demangle "_\$_8IBEditor" "IBEditor::~IBEditor(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "_\$_8IdrawCmd" "IdrawCmd::~IdrawCmd(void)"
    demangle "_\$_8VoidData" "VoidData::~VoidData(void)"
    demangle "_\$_8ivAction" "ivAction::~ivAction(void)"
    demangle "_\$_8ivBanner" "ivBanner::~ivBanner(void)"
    demangle "_\$_8ivCursor" "ivCursor::~ivCursor(void)"
    demangle "_\$_9PSPattern" "PSPattern::~PSPattern(void)"
    demangle "_\$_9__io_defs" "__io_defs::~__io_defs(void)"
    demangle "_\$_Q23foo3bar" "foo::bar::~bar(void)"
    demangle "_\$_Q33foo3bar4bell" "foo::bar::bell::~bell(void)"
    demangle "__10ivTelltaleiP7ivGlyph" "ivTelltale::ivTelltale(int, ivGlyph *)"
    demangle "__10ivViewportiP12ivInteractorUi" "ivViewport::ivViewport(int, ivInteractor *, unsigned int)"
    demangle "__10ostrstream" "ostrstream::ostrstream(void)"
    demangle "__10ostrstreamPcii" "ostrstream::ostrstream(char *, int, int)"
    demangle "__11BasicDialogiPCcP13ivButtonStateN22Ui" "BasicDialog::BasicDialog(int, const char *, ivButtonState *, const char *, const char *, unsigned int)"
    demangle "__11BitmapTablei" "BitmapTable::BitmapTable(int)"
    demangle "__12ViewportCodeP12ViewportComp" "ViewportCode::ViewportCode(ViewportComp *)"
    demangle "__12ViewportCompP15ViewportGraphic" "ViewportComp::ViewportComp(ViewportGraphic *)"
    demangle "__12iv2_6_BorderiPCci" "iv2_6_Border::iv2_6_Border(int, const char *, int)"
    demangle "__12iv2_6_Borderii" "iv2_6_Border::iv2_6_Border(int, int)"
    demangle "__12ivBackgroundiP7ivGlyphPC7ivColor" "ivBackground::ivBackground(int, ivGlyph *, const ivColor *)"
    demangle "__12ivBreak_Listl" "ivBreak_List::ivBreak_List(long)"
    demangle "__14TextInteractoriPCcUi" "TextInteractor::TextInteractor(int, const char *, unsigned int)"
    demangle "__14edit_streambufP11edit_stringi" "edit_streambuf::edit_streambuf(edit_string *, int)"
    demangle "__14iv2_6_MenuItemiP12ivInteractor" "iv2_6_MenuItem::iv2_6_MenuItem(int, ivInteractor *)"
    demangle "__14iv2_6_MenuItemiPCcP12ivInteractor" "iv2_6_MenuItem::iv2_6_MenuItem(int, const char *, ivInteractor *)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__14ivMenuItemListl" "ivMenuItemList::ivMenuItemList(long)"
    demangle "__14ivPulldownMenuiP12ivInteractor" "ivPulldownMenu::ivPulldownMenu(int, ivInteractor *)"
    demangle "__20DisplayList_IteratorR11DisplayList" "DisplayList_Iterator::DisplayList_Iterator(DisplayList &)"
    demangle "__20FontRepList_IteratorR11FontRepList" "FontRepList_Iterator::FontRepList_Iterator(FontRepList &)"
    demangle "__20ViewerFloatInfo_Listl" "ViewerFloatInfo_List::ViewerFloatInfo_List(long)"
    demangle "__20ivAggregateInfo_Listl" "ivAggregateInfo_List::ivAggregateInfo_List(long)"
    demangle "__21BrushRepList_IteratorR12BrushRepList" "BrushRepList_Iterator::BrushRepList_Iterator(BrushRepList &)"
    demangle "__21ColorRepList_IteratorR12ColorRepList" "ColorRepList_Iterator::ColorRepList_Iterator(ColorRepList &)"
    demangle "__3fooRT0" "foo::foo(foo &)"
    demangle "__3fooi" "foo::foo(int)"
    demangle "__3fooiN31" "foo::foo(int, int, int, int)"
    demangle "__3fooiPCc" "foo::foo(int, const char *)"
    demangle "__3fooiRT0iT2iT2" "foo::foo(int, foo &, int, foo &, int, foo &)"
    demangle "__6ExeCmdP11ControlInfo" "ExeCmd::ExeCmd(ControlInfo *)"
    demangle "__6ExeCmdP6Editor" "ExeCmd::ExeCmd(Editor *)"
    demangle "__6GetOptiPPcPCc" "GetOpt::GetOpt(int, char **, const char *)"
    demangle "__6KeyMapP8UControl" "KeyMap::KeyMap(UControl *)"
    demangle "__6KeyMapPT0" "KeyMap::KeyMap(KeyMap *)"
    demangle "__6PSLineP8LineComp" "PSLine::PSLine(LineComp *)"
    demangle "__7ivWorldPCcRiPPcPC12ivOptionDescPC14ivPropertyData" "ivWorld::ivWorld(const char *, int &, char **, const ivOptionDesc *, const ivPropertyData *)"
    demangle "__7procbufPCci" "procbuf::procbuf(const char *, int)"
    demangle "__8AboutCmdP11ControlInfo" "AboutCmd::AboutCmd(ControlInfo *)"
    demangle "__8ArrowCmdP11ControlInfoUiUi" "ArrowCmd::ArrowCmd(ControlInfo *, unsigned int, unsigned int)"
    demangle "__8ArrowCmdP6EditorUiUi" "ArrowCmd::ArrowCmd(Editor *, unsigned int, unsigned int)"
    demangle "__8BrushCmdP11ControlInfoP7PSBrush" "BrushCmd::BrushCmd(ControlInfo *, PSBrush *)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__8BrushCmdP6EditorP7PSBrush" "BrushCmd::BrushCmd(Editor *, PSBrush *)"
    demangle "__9ExeDialogiPCc" "ExeDialog::ExeDialog(int, const char *)"
    demangle "__9F_EllipseiiiiP7Graphic" "F_Ellipse::F_Ellipse(int, int, int, int, Graphic *)"
    demangle "__9FrameDataP9FrameCompi" "FrameData::FrameData(FrameComp *, int)"
    demangle "__9FrameViewP9FrameComp" "FrameView::FrameView(FrameComp *)"
    demangle "__9HSlotViewP9HSlotComp" "HSlotView::HSlotView(HSlotComp *)"
    demangle "__9HVGraphicP9CanvasVarP7Graphic" "HVGraphic::HVGraphic(CanvasVar *, Graphic *)"
    demangle "__Q23foo3bar" "foo::bar::bar(void)"
    demangle "__Q33foo3bar4bell" "foo::bar::bell::bell(void)"
    demangle "__aa__3fooRT0" "foo::operator&&(foo &)"
    demangle "__aad__3fooRT0" "foo::operator&=(foo &)"
    demangle "__ad__3fooRT0" "foo::operator&(foo &)"
    demangle "__adv__3fooRT0" "foo::operator/=(foo &)"
    demangle "__aer__3fooRT0" "foo::operator^=(foo &)"
    demangle "__als__3fooRT0" "foo::operator<<=(foo &)"
    demangle "__amd__3fooRT0" "foo::operator%=(foo &)"
    demangle "__ami__3fooRT0" "foo::operator-=(foo &)"
    demangle "__aml__3FixRT0" "Fix::operator*=(Fix &)"
    demangle "__aml__3fooRT0" "foo::operator*=(foo &)"
    demangle "__aml__5Fix16i" "Fix16::operator*=(int)"
    demangle "__aml__5Fix32RT0" "Fix32::operator*=(Fix32 &)"
    demangle "__aml__5Fix32i" "Fix32::operator*=(int)"
    demangle "__aor__3fooRT0" "foo::operator|=(foo &)"
    demangle "__apl__3fooRT0" "foo::operator+=(foo &)"
    demangle "__ars__3fooRT0" "foo::operator>>=(foo &)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__as__3fooRT0" "foo::operator=(foo &)"
    demangle "__cl__3fooRT0" "foo::operator()(foo &)"
    demangle "__cl__6Normal" "Normal::operator()(void)"
    demangle "__cl__6Stringii" "String::operator()(int, int)"
    demangle "__cl__7Weibull" "Weibull::operator()(void)"
    demangle "__cl__9LogNormal" "LogNormal::operator()(void)"
    demangle "__cm__3fooRT0" "foo::operator, (foo &)"
    demangle "__co__3foo" "foo::operator~(void)"
    demangle "__dl__3fooPv" "foo::operator delete(void *)"
    demangle "__dv__3fooRT0" "foo::operator/(foo &)"
    demangle "__eq__3fooRT0" "foo::operator==(foo &)"
    demangle "__er__3fooRT0" "foo::operator^(foo &)"
    demangle "__ge__3fooRT0" "foo::operator>=(foo &)"
    demangle "__gt__3fooRT0" "foo::operator>(foo &)"
    demangle "__le__3fooRT0" "foo::operator<=(foo &)"
    demangle "__ls__3fooRT0" "foo::operator<<(foo &)"
    demangle "__ls__FR7ostreamPFR3ios_R3ios" "operator<<(ostream &, ios &(*)(ios &))"
    demangle "__ls__FR7ostreamR3Fix" "operator<<(ostream &, Fix &)"
    demangle "__ls__FR7ostreamR5Fix16" "operator<<(ostream &, Fix16 &)"
    demangle "__ls__FR7ostreamR5Fix48" "operator<<(ostream &, Fix48 &)"
    demangle "__lt__3fooRT0" "foo::operator<(foo &)"
    demangle "__md__3fooRT0" "foo::operator%(foo &)"
    demangle "__mi__3fooRT0" "foo::operator-(foo &)"
    demangle "__ml__3fooRT0" "foo::operator*(foo &)"
    demangle "__mm__3fooi" "foo::operator--(int)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__ne__3fooRT0" "foo::operator!=(foo &)"
    demangle "__ne__FRC7ComplexT0" "operator!=(const Complex &, const Complex &)"
    demangle "__ne__FRC7Complexd" "operator!=(const Complex &, double)"
    demangle "__ne__FRC8RationalT0" "operator!=(const Rational &, const Rational &)"
    demangle "__ne__FRC9SubStringRC6String" "operator!=(const SubString &, const String &)"
    demangle "__ne__FRC9SubStringT0" "operator!=(const SubString &, const SubString &)"
    demangle "__nt__3foo" "foo::operator!(void)"
    demangle "__nw__3fooi" "foo::operator new(int)"
    demangle "__oo__3fooRT0" "foo::operator||(foo &)"
    demangle "__opPc__3foo" "foo::operator char *(void)"
    demangle "__opi__3foo" "foo::operator int(void)"
    demangle "__or__3fooRT0" "foo::operator|(foo &)"
    demangle "__pl__3fooRT0" "foo::operator+(foo &)"
    demangle "__pp__3fooi" "foo::operator++(int)"
    demangle "__rf__3foo" "foo::operator->(void)"
    demangle "__rm__3fooRT0" "foo::operator->*(foo &)"
    demangle "__rs__3fooRT0" "foo::operator>>(foo &)"
    demangle "__vc__3fooRT0" "foo::operator\\\[\\\](foo &)"
    demangle "_gsub__6StringRC5RegexPCci" "String::_gsub(const Regex &, const char *, int)"
    demangle "_new_Fix__FUs" "_new_Fix(unsigned short)"
    demangle "_vt.foo" "foo virtual table"
    demangle "_vt.foo.bar" "foo::bar virtual table"
    demangle "_vt\$BrushVarView\$ivResource" "BrushVarView::ivResource virtual table"
    demangle "_vt\$ButtonStateVarView" "ButtonStateVarView virtual table"
    demangle "_vt\$ButtonStateVarView\$ivResource" "ButtonStateVarView::ivResource virtual table"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "_vt\$CS_HashTable" "CS_HashTable virtual table"
    demangle "_vt\$CU_HashElem" "CU_HashElem virtual table"
    demangle "_vt\$CenterCmd" "CenterCmd virtual table"
    demangle "_vt\$ConnectTool" "ConnectTool virtual table"
    demangle "_vt\$Connector" "Connector virtual table"
    demangle "_vt\$ConnectorView" "ConnectorView virtual table"
    demangle "_vt\$FillPolygonObj" "FillPolygonObj virtual table"
    demangle "_vt\$FixedPin" "FixedPin virtual table"
    demangle "_vt\$FloatView" "FloatView virtual table"
    demangle "_vt\$FloatView\$ivResource" "FloatView::ivResource virtual table"
    demangle "_vt\$FontCmd" "FontCmd virtual table"
    demangle "_vt\$InorderView" "InorderView virtual table"
    demangle "_vt\$MonoKitInverter\$ivResource" "MonoKitInverter::ivResource virtual table"
    demangle "_vt\$MonoSceneClass" "MonoSceneClass virtual table"
    demangle "_vt\$MonoSceneData" "MonoSceneData virtual table"
    demangle "_vt\$MonoSceneView" "MonoSceneView virtual table"
    demangle "_vt\$MoveCmd" "MoveCmd virtual table"
    demangle "_vt\$PSBrush\$ivResource" "PSBrush::ivResource virtual table"
    demangle "_vt\$PSStencil" "PSStencil virtual table"
    demangle "_vt\$PSText" "PSText virtual table"
    demangle "_vt\$PSVertices" "PSVertices virtual table"
    demangle "_vt\$PostorderView" "PostorderView virtual table"
    demangle "_vt\$PreciseRotateCmd" "PreciseRotateCmd virtual table"
    demangle "_vt\$PreciseScaleCmd" "PreciseScaleCmd virtual table"
    demangle "_vt\$RedoCmd" "RedoCmd virtual table"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "_vt\$RefItem\$ivResource" "RefItem::ivResource virtual table"
    demangle "_vt\$RefView" "RefView virtual table"
    demangle "_vt\$RelateMenu" "RelateMenu virtual table"
    demangle "_vt\$RelateMenu\$ivResource" "RelateMenu::ivResource virtual table"
    demangle "_vt\$SaveCompCmd" "SaveCompCmd virtual table"
    demangle "_vt\$ScaleCmd" "ScaleCmd virtual table"
    demangle "_vt\$UControlInteractor" "UControlInteractor virtual table"
    demangle "_vt\$UControl\$ivResource" "UControl::ivResource virtual table"
    demangle "_vt\$UMapElem" "UMapElem virtual table"
    demangle "_vt\$UMoverGraphic" "UMoverGraphic virtual table"
    demangle "_vt\$UndoCmd" "UndoCmd virtual table"
    demangle "_vt\$foo" "foo virtual table"
    demangle "_vt\$foo\$bar" "foo::bar virtual table"
    demangle "_vt\$ivBevel" "ivBevel virtual table"
    demangle "_vt\$ivBevel\$ivResource" "ivBevel::ivResource virtual table"
    demangle "_vt\$ivBorderFrame\$ivResource" "ivBorderFrame::ivResource virtual table"
    demangle "_vt\$ivBox" "ivBox virtual table"
    demangle "_vt\$ivBrush" "ivBrush virtual table"
    demangle "_vt\$ivMonoKit" "ivMonoKit virtual table"
    demangle "_vt\$ivMonoScene" "ivMonoScene virtual table"
    demangle "_vt\$ivMoverActionBackward" "ivMoverActionBackward virtual table"
    demangle "_vt\$ivMoverActionBackward\$ivResource" "ivMoverActionBackward::ivResource virtual table"
    demangle "_vt\$ivOL_AnchorGlyph" "ivOL_AnchorGlyph virtual table"
    demangle "_vt\$ivOL_AnchorGlyph\$ivResource" "ivOL_AnchorGlyph::ivResource virtual table"
    demangle "_vt\$ivRubberVertex" "ivRubberVertex virtual table"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "_vt\$ivScalingLine" "ivScalingLine virtual table"
    demangle "_vt\$ivScalingLineList" "ivScalingLineList virtual table"
    demangle "_vt\$ivScalingRect" "ivScalingRect virtual table"
    demangle "_vt\$ivViewport" "ivViewport virtual table"
    demangle "_vt\$ivZoomer" "ivZoomer virtual table"
    demangle "_vt\$ivZoomer\$ivResource" "ivZoomer::ivResource virtual table"
    demangle "_vt\$osNullTerminatedString" "osNullTerminatedString virtual table"
    demangle "_vt\$osOutputFile" "osOutputFile virtual table"
    demangle "_vt\$osString" "osString virtual table"
    demangle "append__11ivAggregateP7ivGlyph" "ivAggregate::append(ivGlyph *)"
    demangle "append__11ivMonoGlyphP7ivGlyph" "ivMonoGlyph::append(ivGlyph *)"
    demangle "append__7ivGlyphPT0" "ivGlyph::append(ivGlyph *)"
    demangle "append__7ivMacroP8ivAction" "ivMacro::append(ivAction *)"
    demangle "arg__FRC7Complex" "arg(const Complex &)"
    demangle "blank__7Obstacki" "Obstack::blank(int)"
    demangle "blank_fast__7Obstacki" "Obstack::blank_fast(int)"
    demangle "body__8Document" "Document::body(void)"
    demangle "body__C11ivMonoGlyph" "ivMonoGlyph::body(void) const"
    demangle "bottom__C5ivHit" "ivHit::bottom(void) const"
    demangle "bottom__C6ivPage" "ivPage::bottom(void) const"
    demangle "clearok__FP7_win_sti" "clearok(_win_st *, int)"
    demangle "clip__8ivCanvas" "ivCanvas::clip(void)"
    demangle "close__11osDirectory" "osDirectory::close(void)"
    demangle "close__3ios" "ios::close(void)"
    demangle "close__7fstream" "fstream::close(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "close__7procbuf" "procbuf::close(void)"
    demangle "complexfunc1__Fi" "complexfunc1(int)"
    demangle "complexfunc2__FPFPc_i" "complexfunc2(int (*)(char *))"
    demangle "complexfunc3__FPFPFPl_s_i" "complexfunc3(int (*)(short (*)(long *)))"
    demangle "complexfunc4__FPFPFPc_s_i" "complexfunc4(int (*)(short (*)(char *)))"
    demangle "complexfunc5__FPFPc_PFl_i" "complexfunc5(int (*(*)(char *))(long))"
    demangle "complexfunc6__FPFPi_PFl_i" "complexfunc6(int (*(*)(int *))(long))"
    demangle "complexfunc7__FPFPFPc_i_PFl_i" "complexfunc7(int (*(*)(int (*)(char *)))(long))"
    demangle "contains__C9BitStringRC10BitPattern" "BitString::contains(const BitPattern &) const"
    demangle "contains__C9BitStringRC12BitSubStringi" "BitString::contains(const BitSubString &, int) const"
    demangle "contains__C9BitStringRT0" "BitString::contains(const BitString &) const"
    demangle "contains__C9SubStringRC5Regex" "SubString::contains(const Regex &) const"
    demangle "div__FPC6IntRepT0P6IntRep" "div(const IntRep *, const IntRep *, IntRep *)"
    demangle "div__FPC6IntReplP6IntRep" "div(const IntRep *, long, IntRep *)"
    demangle "div__FRC8RationalT0R8Rational" "div(const Rational &, const Rational &, Rational &)"
    demangle "divide__FRC7IntegerT0R7IntegerT2" "divide(const Integer &, const Integer &, Integer &, Integer &)"
    demangle "divide__FRC7IntegerlR7IntegerRl" "divide(const Integer &, long, Integer &, long &)"
    demangle "enable__12ivChoiceItemUi" "ivChoiceItem::enable(unsigned int)"
    demangle "enable__14DocumentViewerPCcUi" "DocumentViewer::enable(const char *, unsigned int)"
    demangle "end__5ivHit" "ivHit::end(void)"
    demangle "end__C11ivAllotment" "ivAllotment::end(void) const"
    demangle "ends__FR7ostream" "ends(ostream &)"
    demangle "float_inserted__14DocumentViewerP4Item" "DocumentViewer::float_inserted(Item *)"
    demangle "flush__11ivBitmapRep" "ivBitmapRep::flush(void)"
    demangle "flush__11ivCanvasRep" "ivCanvasRep::flush(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "flush__9ivDisplay" "ivDisplay::flush(void)"
    demangle "flush__9ivPrinter" "ivPrinter::flush(void)"
    demangle "flush_all__9streambuf" "streambuf::flush_all(void)"
    demangle "flush_all_linebuffered__9streambuf" "streambuf::flush_all_linebuffered(void)"
    demangle "foo__FiN30" "foo(int, int, int, int)"
    demangle "foo__FiR3fooiT1iT1" "foo(int, foo &, int, foo &, int, foo &)"
    demangle "foo___3barl" "bar::foo_(long)"
    demangle "graphic_changed__9PSFigView" "PSFigView::graphic_changed(void)"
    demangle "gray_in__C10ivOL_Style" "ivOL_Style::gray_in(void) const"
    demangle "group_leader__C16ivTopLevelWindow" "ivTopLevelWindow::group_leader(void) const"
    demangle "grow__7ObstackPCc" "Obstack::grow(const char *)"
    demangle "grow__7Obstackc" "Obstack::grow(char)"
    demangle "insert__15ivClippingStacklRP8_XRegion" "ivClippingStack::insert(long, _XRegion *&)"
    demangle "insert__16ChooserInfo_ListlR11ChooserInfo" "ChooserInfo_List::insert(long, ChooserInfo &)"
    demangle "insert__17FontFamilyRepListlRP15ivFontFamilyRep" "FontFamilyRepList::insert(long, ivFontFamilyRep *&)"
    demangle "insert__17HitTargetAreaListlR13HitTargetArea" "HitTargetAreaList::insert(long, HitTargetArea &)"
    demangle "insert__18LabelViewInfo_ListlR13LabelViewInfo" "LabelViewInfo_List::insert(long, LabelViewInfo &)"
    demangle "insert__18PSFigViewInfo_ListlR13PSFigViewInfo" "PSFigViewInfo_List::insert(long, PSFigViewInfo &)"
    demangle "leaveok__FP7_win_stc" "leaveok(_win_st *, char)"
    demangle "leaveok__FP7_win_sti" "leaveok(_win_st *, int)"
    demangle "left__C6ivPage" "ivPage::left(void) const"
    demangle "left__C8ivWindow" "ivWindow::left(void) const"
    demangle "left_is_down__C7ivEvent" "ivEvent::left_is_down(void) const"
    demangle "left_mover__C7ivMFKitP12ivAdjustableP7ivStyle" "ivMFKit::left_mover(ivAdjustable *, ivStyle *) const"
    demangle "matches__C9BitStringRC10BitPatterni" "BitString::matches(const BitPattern &, int) const"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "matches__C9SubStringRC5Regex" "SubString::matches(const Regex &) const"
    demangle "matrix__C11ivCanvasRep" "ivCanvasRep::matrix(void) const"
    demangle "maxx__12CursesWindow" "CursesWindow::maxx(void)"
    demangle "maxy__12CursesWindow" "CursesWindow::maxy(void)"
    demangle "next_free__7Obstack" "Obstack::next_free(void)"
    demangle "nocrmode__Fv" "nocrmode(void)"
    demangle "noecho__Fv" "noecho(void)"
    demangle "norm__FRC7Complex" "norm(const Complex &)"
    demangle "notify__11TabularItem" "TabularItem::notify(void)"
    demangle "overload1arg__FSc" "overload1arg(signed char)"
    demangle "overload1arg__FUc" "overload1arg(unsigned char)"
    demangle "overload1arg__FUi" "overload1arg(unsigned int)"
    demangle "overload1arg__FUl" "overload1arg(unsigned long)"
    demangle "overload1arg__FUs" "overload1arg(unsigned short)"
    demangle "overload1arg__Fc" "overload1arg(char)"
    demangle "overload1arg__Fd" "overload1arg(double)"
    demangle "overload1arg__Ff" "overload1arg(float)"
    demangle "overload1arg__Fi" "overload1arg(int)"
    demangle "overload1arg__Fl" "overload1arg(long)"
    demangle "overload1arg__Fs" "overload1arg(short)"
    demangle "overload1arg__Fv" "overload1arg(void)"
    demangle "overloadargs__Fi" "overloadargs(int)"
    demangle "overloadargs__Fii" "overloadargs(int, int)"
    demangle "overloadargs__Fiii" "overloadargs(int, int, int)"
    demangle "overloadargs__Fiiii" "overloadargs(int, int, int, int)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "overloadargs__Fiiiii" "overloadargs(int, int, int, int, int)"
    demangle "overloadargs__Fiiiiii" "overloadargs(int, int, int, int, int, int)"
    demangle "overloadargs__Fiiiiiii" "overloadargs(int, int, int, int, int, int, int)"
    demangle "overloadargs__Fiiiiiiii" "overloadargs(int, int, int, int, int, int, int, int)"
    demangle "overloadargs__Fiiiiiiiii" "overloadargs(int, int, int, int, int, int, int, int, int)"
    demangle "overloadargs__Fiiiiiiiiii" "overloadargs(int, int, int, int, int, int, int, int, int, int)"
    demangle "overloadargs__Fiiiiiiiiiii" "overloadargs(int, int, int, int, int, int, int, int, int, int, int)"
    demangle "pick__13ivCompositionP8ivCanvasRC12ivAllocationiR5ivHit" "ivComposition::pick(ivCanvas *, const ivAllocation &, int, ivHit &)"
    demangle "pick__7ivLabelP8ivCanvasRC12ivAllocationiR5ivHit" "ivLabel::pick(ivCanvas *, const ivAllocation &, int, ivHit &)"
    demangle "pick__7ivSpaceP8ivCanvasRC12ivAllocationiR5ivHit" "ivSpace::pick(ivCanvas *, const ivAllocation &, int, ivHit &)"
    demangle "pointer__C11ivHScrollerRC7ivEventRC12ivAllocation" "ivHScroller::pointer(const ivEvent &, const ivAllocation &) const"
    demangle "pointer__C11ivVScrollerRC7ivEventRC12ivAllocation" "ivVScroller::pointer(const ivEvent &, const ivAllocation &) const"
    demangle "poke__8ivRasterUlUlffff" "ivRaster::poke(unsigned long, unsigned long, float, float, float, float)"
    demangle "polar__Fdd" "polar(double, double)"
    demangle "read__10osStdInputRPCc" "osStdInput::read(const char *&)"
    demangle "read__11ApplicationPCc" "Application::read(const char *)"
    demangle "remove_all__14LabelInfo_List" "LabelInfo_List::remove_all(void)"
    demangle "remove_all__14MacroInfo_List" "MacroInfo_List::remove_all(void)"
    demangle "remove_all__15ivClippingStack" "ivClippingStack::remove_all(void)"
    demangle "remove_all__16ChooserInfo_List" "ChooserInfo_List::remove_all(void)"
    demangle "remove_all__17HitTargetAreaList" "HitTargetAreaList::remove_all(void)"
    demangle "remove_all__17ReporterInfo_List" "ReporterInfo_List::remove_all(void)"
    demangle "save_contents__8ivWindowUi" "ivWindow::save_contents(unsigned int)"
    demangle "save_contents__C8ivWindow" "ivWindow::save_contents(void) const"
    demangle "sbumpc__9streambuf" "streambuf::sbumpc(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "scale__13ivTransformerff" "ivTransformer::scale(float, float)"
    demangle "scanw__12CursesWindowPCce" "CursesWindow::scanw(const char *,...)"
    demangle "scmp__FPCcT0" "scmp(const char *, const char *)"
    demangle "sgetn__7filebufPci" "filebuf::sgetn(char *, int)"
    demangle "sgetn__9streambufPci" "streambuf::sgetn(char *, int)"
    demangle "shaped_windows__C7ivWorld" "ivWorld::shaped_windows(void) const"
    demangle "shift__FP5_FrepiT0" "shift(_Frep *, int, _Frep *)"
    demangle "shorttoBitSet__FUs" "shorttoBitSet(unsigned short)"
    demangle "test__C6BitSeti" "BitSet::test(int) const"
    demangle "test__C6BitSetii" "BitSet::test(int, int) const"
    demangle "testbit__FRC7Integerl" "testbit(const Integer &, long)"
    demangle "text_source__8Documentl" "Document::text_source(long)"
    demangle "variance__6Erlangd" "Erlang::variance(double)"
    demangle "variance__9LogNormal" "LogNormal::variance(void)"
    demangle "variance__9LogNormald" "LogNormal::variance(double)"
    demangle "vform__8iostreamPCcPc" "iostream::vform(const char *, char *)"
    demangle "vform__9streambufPCcPc" "streambuf::vform(const char *, char *)"
    demangle "view__14DocumentViewerP8ItemViewP11TabularItem" "DocumentViewer::view(ItemView *, TabularItem *)"
    demangle "xput_char__9streambufc" "streambuf::xput_char(char)"
    demangle "xy_extents__11ivExtensionffff" "ivExtension::xy_extents(float, float, float, float)"
    demangle "y__9Arrowheadii" "Arrowhead::y(int, int)"
    demangle "zero__8dpFdMask" "dpFdMask::zero(void)"
    demangle "zero__8osMemoryPvUi" "osMemory::zero(void *, unsigned int)"
    demangle "_2T4\$N" "T4::N"
    demangle "_Q22T42t1\$N" "T4::t1::N"
    demangle "get__2T1" "T1::get(void)"
    demangle "get__Q22T11a" "T1::a::get(void)"
    demangle "get__Q32T11a1b" "T1::a::b::get(void)"
    demangle "get__Q42T11a1b1c" "T1::a::b::c::get(void)"
    demangle "get__Q52T11a1b1c1d" "T1::a::b::c::d::get(void)"
    demangle "put__2T1i" "T1::put(int)"
    demangle "put__Q22T11ai" "T1::a::put(int)"
    demangle "put__Q32T11a1bi" "T1::a::b::put(int)"
    demangle "put__Q42T11a1b1ci" "T1::a::b::c::put(int)"
    demangle "put__Q52T11a1b1c1di" "T1::a::b::c::d::put(int)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "bar__3fooPv"       "foo::bar(void*)"
    demangle "bar__3fooPCv"      "foo::bar(const void*)"
    demangle "bar__C3fooPv"      "foo::bar(void*) const"
    demangle "bar__C3fooPCv"     "foo::bar(const void*) const"
    demangle "__eq__3fooRT0"     "foo::operator==(foo &)"
    demangle "__eq__3fooRC3foo"  "foo::operator==(const foo &)"
    demangle "__eq__C3fooR3foo"  "foo::operator==(foo &) const"
    demangle "__eq__C3fooRT0"    "foo::operator==(const foo &) const"

    demangle "elem__t6vector1Zdi" "vector<double>::elem(int)"
    demangle "elem__t6vector1Zii" "vector<int>::elem(int)"
    demangle "__t6vector1Zdi"     "vector<double>::vector<double>(int)"
    demangle "__t6vector1Zii"     "vector<int>::vector<int>(int)"
    demangle "_\$_t6vector1Zdi"    "vector<double>::~vector<double>(int)"
    demangle "_\$_t6vector1Zii"    "vector<int>::~vector<int>(int)"

    demangle "__nw__t2T11ZcUi" "T1<char>::operator new(unsigned int)"
    demangle "__nw__t2T11Z1tUi" "T1<t>::operator new(unsigned int)"
    demangle "__dl__t2T11ZcPv" "T1<char>::operator delete(void*)"
    demangle "__dl__t2T11Z1tPv" "T1<t>::operator delete(void*)"
    demangle "__t2T11Zci" "T1<char>::T1<char>(int)"
    demangle "__t2T11Zc" "T1<char>::T1<char>(void)"
    demangle "__t2T11Z1ti" "T1<t>::T1<t>(int)"
    demangle "__t2T11Z1t" "T1<t>::T1<t>(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z10VHDLEntity3Pix" \
	"List<VHDLEntity>::Pix::Pix(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z10VHDLEntity3PixPQ2t4List1Z10VHDLEntity7element" \
	"List<VHDLEntity>::Pix(List<VHDLEntity>::element *)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z10VHDLEntity3PixRCQ2t4List1Z10VHDLEntity3Pix" \
	"List<VHDLEntity>::Pix(const List<VHDLEntity>::Pix&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z10VHDLEntity7elementRC10VHDLEntityPT0" \
	"List<VHDLEntity>::element(const VHDLEntity&, List<VHDLEntity>::element *)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z10VHDLEntity7elementRCQ2t4List1Z10VHDLEntity7element" \
	"List<VHDLEntity>::element(const List<VHDLEntity>::element&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z11VHDLPackage3Pix" \
	"List<VHDLPackage>::Pix::Pix(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z11VHDLPackage3PixPQ2t4List1Z11VHDLPackage7element" \
	"List<VHDLPackage>::Pix(List<VHDLPackage>::element*)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z11VHDLPackage3PixRCQ2t4List1Z11VHDLPackage3Pix" \
	"List<VHDLPackage>::Pix(const List<VHDLPackage>::Pix&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z11VHDLPackage7elementRC11VHDLPackagePT0" \
	"List<VHDLPackage>::element(const VHDLPackage&, List<VHDLPackage>::element *)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z11VHDLPackage7elementRCQ2t4List1Z11VHDLPackage7element" \
	"List<VHDLPackage>::element(const List<VHDLPackage>::element&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z17VHDLConfiguration3Pix" \
	"List<VHDLConfiguration>::Pix::Pix(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z17VHDLConfiguration3PixPQ2t4List1Z17VHDLConfiguration7element" \
	"List<VHDLConfiguration>::Pix(List<VHDLConfiguration>::element *)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z17VHDLConfiguration3PixRCQ2t4List1Z17VHDLConfiguration3Pix" \
	"List<VHDLConfiguration>::Pix(const List<VHDLConfiguration>::Pix&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z17VHDLConfiguration7elementRC17VHDLConfigurationPT0" \
	"List<VHDLConfiguration>::element(const VHDLConfiguration&, List<VHDLConfiguration>::element *)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__Q2t4List1Z17VHDLConfiguration7elementRCQ2t4List1Z17VHDLConfiguration7element" \
	"List<VHDLConfiguration>::element(const List<VHDLConfiguration>::element&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__cl__C11VHDLLibraryGt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity" \
	"VHDLLibrary::operator()(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__cl__C11VHDLLibraryGt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z11VHDLPackage" \
	"VHDLLibrary::operator()(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLPackage> >) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__cl__C11VHDLLibraryGt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z17VHDLConfiguration" \
	"VHDLLibrary::operator()(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLConfiguration> >) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__cl__Ct4List1Z10VHDLEntityRCQ2t4List1Z10VHDLEntity3Pix" \
	"List<VHDLEntity>::operator()(const List<VHDLEntity>::Pix&) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__cl__Ct4List1Z11VHDLPackageRCQ2t4List1Z11VHDLPackage3Pix" \
	"List<VHDLPackage>::operator()(const List<VHDLPackage>::Pix&) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__cl__Ct4List1Z17VHDLConfigurationRCQ2t4List1Z17VHDLConfiguration3Pix" \
	"List<VHDLConfiguration>::operator()(const List<VHDLConfiguration>::Pix&) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__ne__FPvRCQ2t4List1Z10VHDLEntity3Pix" \
	"operator!=(void *, const List<VHDLEntity>::Pix&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__ne__FPvRCQ2t4List1Z11VHDLPackage3Pix" \
	"operator!=(void *, const List<VHDLPackage>::Pix&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__ne__FPvRCQ2t4List1Z17VHDLConfiguration3Pix" \
	"operator!=(void *, const List<VHDLConfiguration>::Pix&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__ne__FPvRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity" \
	"operator!=(void *, const PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__ne__FPvRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z11VHDLPackage" \
	"operator!=(void *, const PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLPackage> >)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__ne__FPvRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z17VHDLConfiguration" \
	"operator!=(void *, const PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLConfiguration> >)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4List1Z10VHDLEntityRCt4List1Z10VHDLEntity" \
	"List<VHDLEntity>::List(const List<VHDLEntity>&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4List1Z11VHDLPackageRCt4List1Z11VHDLPackage" \
	"List<VHDLPackage>::List(const List<VHDLPackage>&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4List1Z17VHDLConfigurationRCt4List1Z17VHDLConfiguration" \
	"List<VHDLConfiguration>::List(const List<VHDLConfiguration>&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity" \
	"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityP14VHDLLibraryRepGQ2t4List1Z10VHDLEntity3Pix" \
	"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(VHDLLibraryRep *, List<VHDLEntity>::Pix)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity" \
	"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::(const PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z11VHDLPackage" \
	"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLPackage> >::PixX(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z11VHDLPackageP14VHDLLibraryRepGQ2t4List1Z11VHDLPackage3Pix" \
	"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLPackage> >::PixX(VHDLLibraryRep *, List<VHDLPackage>::Pix)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z11VHDLPackageRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z11VHDLPackage" \
	"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLPackage> >::PixX(const PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLPackage> >&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z17VHDLConfiguration" \
	"PixX3<VHDLLibrary, VHDLLibraryRep, List<VHDLConfiguration> >::PixX(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z17VHDLConfigurationP14VHDLLibraryRepGQ2t4List1Z17VHDLConfiguration3Pix" \
	"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLConfiguration> >::(VHDLLibraryRep *, List<VHDLConfiguration>::Pix)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z17VHDLConfigurationRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z17VHDLConfiguration" \
	"PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLConfiguration> >::(const PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLConfiguration> >&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "nextC__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z17VHDLConfiguration" \
	"VHDLLibrary::nextC(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLConfiguration> >&) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "nextE__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity" \
	"VHDLLibrary::nextE(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >&) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "nextP__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z11VHDLPackage" \
	"VHDLLibrary::nextP(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLPackagety> >&) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "next__Ct4List1Z10VHDLEntityRQ2t4List1Z10VHDLEntity3Pix" \
	"List<VHDLEntity>::next(List<VHDLEntity>::Pix&) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "next__Ct4List1Z11VHDLPackageRQ2t4List1Z11VHDLPackage3Pix" \
	"List<VHDLPackage>::next(List<VHDLPackage>::Pix&) const"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2218
    demangle "next__Ct4List1Z17VHDLConfigurationRQ2t4List1Z17VHDLConfiguration3Pix" \
	"List<VHDLConfiguration>::next(List<VHDLConfiguration>::Pix&) const"
    clear_xfail "*-*-*"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct gnu style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    # None of the following demangle yet anyway, so don't bother trying to
    # figure out by hand what they should demangle to, for the moment.

    setup_xfail "*-*-*" 2523
    demangle "_GLOBAL_\$D\$set" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "_GLOBAL_\$I\$set" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__as__t5ListS1ZUiRCt5ListS1ZUi" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__cl__Ct5ListS1ZUiRCQ2t5ListS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__cl__Ct5SetLS1ZUiRCQ2t5SetLS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__ne__FPvRCQ2t5ListS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__ne__FPvRCQ2t5SetLS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__t10ListS_link1ZUiRCUiPT0" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__t10ListS_link1ZUiRCt10ListS_link1ZUi" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__t5ListS1ZUiRCt5ListS1ZUi" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__t5SetLS1ZUiRCt5SetLS1ZUi" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "next__Ct5ListS1ZUiRQ2t5ListS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "next__Ct5SetLS1ZUiRQ2t5SetLS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__as__t5ListS1ZUiRCt5ListS1ZUi" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__cl__Ct5ListS1ZUiRCQ2t5ListS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__cl__Ct5SetLS1ZUiRCQ2t5SetLS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__gnu_compiled_cplusplus" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__ne__FPvRCQ2t5ListS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__ne__FPvRCQ2t5SetLS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__t10ListS_link1ZUiRCUiPT0" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__t5ListS1ZUiRCt5ListS1ZUi" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "next__Ct5ListS1ZUiRQ2t5ListS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "next__Ct5SetLS1ZUiRQ2t5SetLS1ZUi3Vix" "fixme"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2523
    demangle "__t8ListElem1Z5LabelRt4List1Z5Label" \
	"ListElem<Label>(List<Label> &)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2836
    demangle "__t8BDDHookV1ZPcRCPc" \
	"BDDHookV<char *>::BDDHookV<char *>(const char *&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2838
    demangle "_vt\$t8BDDHookV1ZPc" "DDHookV<char *> virtual table"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2840
    demangle "__ne__FPvRCQ211BDDFunction4VixB" \
	"operator!=(void *, const BDDFunction::VixB&)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2840
    demangle "__eq__FPvRCQ211BDDFunction4VixB" \
	"operator==(void *, const BDDFunction::VixB&)"
    clear_xfail "*-*-*"

    if $dem_passcount then {
	pass "$dem_passcount correct gnu style demanglings"
    }
}

#
#  Test lucid style name demangling
#

proc test_lucid_style_demangling {} {
    global prompt
    global dem_passcount
    global dem_failcount
    global max_dem_failcount

    set dem_passcount 0
    set dem_failcount 0

    # Set the demangling style to "lucid" and then check to make sure
    # it really got set.  Return if the style failed to get set for
    # some reason.

    send "set demangle-style lucid\n"
    expect {
	-re "set demangle-style lucid\r\n$prompt $" {}
	-re ".*$prompt $" { fail "set demangle-style lucid failed" ; return }
	timeout { fail "set demangle-style lucid failed (timeout)" ; return }
    }

    send "show demangle-style\n"
    expect {
	-re "The current C\+\+ demangling style is \"lucid\".\r\n$prompt $" {}
	-re ".*$prompt $" { fail "demangling style not set to lucid" }
	timeout { fail "show demangle-style timed out" }
    }

    demangle "WS__FR7istream" "WS(istream &)"
    demangle "__aa__3fooFR3foo" "foo::operator&&(foo &)"
    demangle "__aad__3fooFR3foo" "foo::operator&=(foo &)"
    demangle "__ad__3fooFR3foo" "foo::operator&(foo &)"
    demangle "__adv__3fooFR3foo" "foo::operator/=(foo &)"
    demangle "__adv__7complexF7complex" "complex::operator/=(complex)"
    demangle "__aer__3fooFR3foo" "foo::operator^=(foo &)"
    demangle "__als__3fooFR3foo" "foo::operator<<=(foo &)"
    demangle "__amd__3fooFR3foo" "foo::operator%=(foo &)"
    demangle "__ami__3fooFR3foo" "foo::operator-=(foo &)"
    demangle "__amu__3fooFR3foo" "foo::operator*=(foo &)"
    demangle "__amu__7complexF7complex" "complex::operator*=(complex)"
    demangle "__aor__3fooFR3foo" "foo::operator|=(foo &)"
    demangle "__apl__3fooFR3foo" "foo::operator+=(foo &)"
    demangle "__ars__3fooFR3foo" "foo::operator>>=(foo &)"
    demangle "__as__18istream_withassignFP9streambuf" "istream_withassign::operator=(streambuf *)"
    demangle "__as__18istream_withassignFR7istream" "istream_withassign::operator=(istream &)"
    demangle "__as__18ostream_withassignFP9streambuf" "ostream_withassign::operator=(streambuf *)"
    demangle "__as__18ostream_withassignFR7ostream" "ostream_withassign::operator=(ostream &)"
    demangle "__as__19iostream_withassignFP9streambuf" "iostream_withassign::operator=(streambuf *)"
    demangle "__as__19iostream_withassignFR3ios" "iostream_withassign::operator=(ios &)"
    demangle "__as__3fooFR3foo" "foo::operator=(foo &)"
    demangle "__as__3iosFR3ios" "ios::operator=(ios &)"
    demangle "__cl__3fooFR3foo" "foo::operator()(foo &)"
    demangle "__cm__3fooFR3foo" "foo::operator, (foo &)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__co__3fooFv" "foo::operator~(void)"
    demangle "__ct__10istrstreamFPc" "istrstream::istrstream(char *)"
    demangle "__ct__10istrstreamFPci" "istrstream::istrstream(char *, int)"
    demangle "__ct__10ostrstreamFPciT2" "ostrstream::ostrstream(char *, int, int)"
    demangle "__ct__10ostrstreamFv" "ostrstream::ostrstream(void)"
    demangle "__ct__10smanip_intFPFR3iosi_R3iosi" "smanip_int::smanip_int(ios &(*)(ios &, int), int)"
    demangle "__ct__11c_exceptionFPcRC7complexT2" "c_exception::c_exception(char *, const complex &, const complex &)"
    demangle "__ct__11fstreambaseFPCciT2" "fstreambase::fstreambase(const char *, int, int)"
    demangle "__ct__11fstreambaseFi" "fstreambase::fstreambase(int)"
    demangle "__ct__11fstreambaseFiPcT1" "fstreambase::fstreambase(int, char *, int)"
    demangle "__ct__11fstreambaseFv" "fstreambase::fstreambase(void)"
    demangle "__ct__11smanip_longFPFR3iosl_R3iosl" "smanip_long::smanip_long(ios &(*)(ios &, long), long)"
    demangle "__ct__11stdiostreamFP4FILE" "stdiostream::stdiostream(FILE *)"
    demangle "__ct__12strstreambufFPFl_PvPFPv_v" "strstreambuf::strstreambuf(void *(*)(long), void (*)(void *))"
    demangle "__ct__12strstreambufFPUciT1" "strstreambuf::strstreambuf(unsigned char *, int, unsigned char *)"
    demangle "__ct__12strstreambufFPciT1" "strstreambuf::strstreambuf(char *, int, char *)"
    demangle "__ct__12strstreambufFi" "strstreambuf::strstreambuf(int)"
    demangle "__ct__12strstreambufFv" "strstreambuf::strstreambuf(void)"
    demangle "__ct__13Iostream_initFv" "Iostream_init::Iostream_init(void)"
    demangle "__ct__13strstreambaseFPciT1" "strstreambase::strstreambase(char *, int, char *)"
    demangle "__ct__13strstreambaseFv" "strstreambase::strstreambase(void)"
    demangle "__ct__18istream_withassignFv" "istream_withassign::istream_withassign(void)"
    demangle "__ct__18ostream_withassignFv" "ostream_withassign::ostream_withassign(void)"
    demangle "__ct__19iostream_withassignFv" "iostream_withassign::iostream_withassign(void)"
    demangle "__ct__3fooFR3foo" "foo::foo(foo &)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__ct__3fooFi" "foo::foo(int)"
    demangle "__ct__3fooFiN31" "foo::foo(int, int, int, int)"
    demangle "__ct__3fooFiPCc" "foo::foo(int, const char *)"
    demangle "__ct__3fooFiR3fooT1T2T1T2" "foo::foo(int, foo &, int, foo &, int, foo &)"
    demangle "__ct__3iosFP9streambuf" "ios::ios(streambuf *)"
    demangle "__ct__3iosFv" "ios::ios(void)"
    demangle "__ct__7filebufFi" "filebuf::filebuf(int)"
    demangle "__ct__7filebufFiPcT1" "filebuf::filebuf(int, char *, int)"
    demangle "__ct__7filebufFv" "filebuf::filebuf(void)"
    demangle "__ct__7fstreamFPCciT2" "fstream::fstream(const char *, int, int)"
    demangle "__ct__7fstreamFi" "fstream::fstream(int)"
    demangle "__ct__7fstreamFiPcT1" "fstream::fstream(int, char *, int)"
    demangle "__ct__7fstreamFv" "fstream::fstream(void)"
    demangle "__ct__7istreamFP9streambuf" "istream::istream(streambuf *)"
    demangle "__ct__7istreamFP9streambufiP7ostream" "istream::istream(streambuf *, int, ostream *)"
    demangle "__ct__7istreamFiPcT1" "istream::istream(int, char *, int)"
    demangle "__ct__7istreamFiT1P7ostream" "istream::istream(int, int, ostream *)"
    demangle "__ct__7istreamFv" "istream::istream(void)"
    demangle "__ct__7ostreamFP9streambuf" "ostream::ostream(streambuf *)"
    demangle "__ct__7ostreamFi" "ostream::ostream(int)"
    demangle "__ct__7ostreamFiPc" "ostream::ostream(int, char *)"
    demangle "__ct__7ostreamFv" "ostream::ostream(void)"
    demangle "__ct__8ifstreamFPCciT2" "ifstream::ifstream(const char *, int, int)"
    demangle "__ct__8ifstreamFi" "ifstream::ifstream(int)"
    demangle "__ct__8ifstreamFiPcT1" "ifstream::ifstream(int, char *, int)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__ct__8ifstreamFv" "ifstream::ifstream(void)"
    demangle "__ct__8iostreamFP9streambuf" "iostream::iostream(streambuf *)"
    demangle "__ct__8iostreamFv" "iostream::iostream(void)"
    demangle "__ct__8ofstreamFPCciT2" "ofstream::ofstream(const char *, int, int)"
    demangle "__ct__8ofstreamFi" "ofstream::ofstream(int)"
    demangle "__ct__8ofstreamFiPcT1" "ofstream::ofstream(int, char *, int)"
    demangle "__ct__8ofstreamFv" "ofstream::ofstream(void)"
    demangle "__ct__8stdiobufFP4FILE" "stdiobuf::stdiobuf(FILE *)"
    demangle "__ct__9streambufFPci" "streambuf::streambuf(char *, int)"
    demangle "__ct__9streambufFPciT2" "streambuf::streambuf(char *, int, int)"
    demangle "__ct__9streambufFv" "streambuf::streambuf(void)"
    demangle "__ct__9strstreamFPciT2" "strstream::strstream(char *, int, int)"
    demangle "__ct__9strstreamFv" "strstream::strstream(void)"
    demangle "__ct__Q23foo3barFv" "foo::bar::bar(void)"
    demangle "__ct__Q33foo3bar4bellFv" "foo::bar::bell::bell(void)"
    demangle "__dl__3fooSFPv" "foo::operator delete(void *) static"
    demangle "__dl__FPv" "operator delete(void *)"
    demangle "__dt__10istrstreamFv" "istrstream::~istrstream(void)"
    demangle "__dt__10ostrstreamFv" "ostrstream::~ostrstream(void)"
    demangle "__dt__11fstreambaseFv" "fstreambase::~fstreambase(void)"
    demangle "__dt__11stdiostreamFv" "stdiostream::~stdiostream(void)"
    demangle "__dt__12strstreambufFv" "strstreambuf::~strstreambuf(void)"
    demangle "__dt__13Iostream_initFv" "Iostream_init::~Iostream_init(void)"
    demangle "__dt__13strstreambaseFv" "strstreambase::~strstreambase(void)"
    demangle "__dt__18istream_withassignFv" "istream_withassign::~istream_withassign(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__dt__18ostream_withassignFv" "ostream_withassign::~ostream_withassign(void)"
    demangle "__dt__19iostream_withassignFv" "iostream_withassign::~iostream_withassign(void)"
    demangle "__dt__3fooFv" "foo::~foo(void)"
    demangle "__dt__3iosFv" "ios::~ios(void)"
    demangle "__dt__7filebufFv" "filebuf::~filebuf(void)"
    demangle "__dt__7fstreamFv" "fstream::~fstream(void)"
    demangle "__dt__7istreamFv" "istream::~istream(void)"
    demangle "__dt__7ostreamFv" "ostream::~ostream(void)"
    demangle "__dt__8ifstreamFv" "ifstream::~ifstream(void)"
    demangle "__dt__8iostreamFv" "iostream::~iostream(void)"
    demangle "__dt__8ofstreamFv" "ofstream::~ofstream(void)"
    demangle "__dt__8stdiobufFv" "stdiobuf::~stdiobuf(void)"
    demangle "__dt__9streambufFv" "streambuf::~streambuf(void)"
    demangle "__dt__9strstreamFv" "strstream::~strstream(void)"
    demangle "__dt__Q23foo3barFv" "foo::bar::~bar(void)"
    demangle "__dt__Q33foo3bar4bellFv" "foo::bar::bell::~bell(void)"
    demangle "__dv__3fooFR3foo" "foo::operator/(foo &)"
    demangle "__dv__F7complexT1" "operator/(complex, complex)"
    demangle "__eq__3fooFR3foo" "foo::operator==(foo &)"
    demangle "__er__3fooFR3foo" "foo::operator^(foo &)"
    demangle "__ge__3fooFR3foo" "foo::operator>=(foo &)"
    demangle "__gt__3fooFR3foo" "foo::operator>(foo &)"
    demangle "__le__3fooFR3foo" "foo::operator<=(foo &)"
    demangle "__ls__3fooFR3foo" "foo::operator<<(foo &)"
    demangle "__ls__7ostreamFP9streambuf" "ostream::operator<<(streambuf *)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__ls__7ostreamFPCc" "ostream::operator<<(const char *)"
    demangle "__ls__7ostreamFPFR3ios_R3ios" "ostream::operator<<(ios &(*)(ios &))"
    demangle "__ls__7ostreamFPv" "ostream::operator<<(void *)"
    demangle "__ls__7ostreamFUi" "ostream::operator<<(unsigned int)"
    demangle "__ls__7ostreamFUl" "ostream::operator<<(unsigned long)"
    demangle "__ls__7ostreamFd" "ostream::operator<<(double)"
    demangle "__ls__7ostreamFf" "ostream::operator<<(float)"
    demangle "__ls__7ostreamFi" "ostream::operator<<(int)"
    demangle "__ls__7ostreamFl" "ostream::operator<<(long)"
    demangle "__ls__FR7ostream7complex" "operator<<(ostream &, complex)"
    demangle "__lt__3fooFR3foo" "foo::operator<(foo &)"
    demangle "__md__3fooFR3foo" "foo::operator%(foo &)"
    demangle "__mi__3fooFR3foo" "foo::operator-(foo &)"
    demangle "__ml__3fooFR3foo" "foo::operator*(foo &)"
    demangle "__ml__F7complexT1" "operator*(complex, complex)"
    demangle "__mm__3fooFi" "foo::operator--(int)"
    demangle "__ne__3fooFR3foo" "foo::operator!=(foo &)"
    demangle "__nt__3fooFv" "foo::operator!(void)"
    demangle "__nw__3fooSFi" "foo::operator new(int) static"
    demangle "__nw__FUi" "operator new(unsigned int)"
    demangle "__nw__FUiPv" "operator new(unsigned int, void *)"
    demangle "__oo__3fooFR3foo" "foo::operator||(foo &)"
    demangle "__opPc__3fooFv" "foo::operator char *(void)"
    demangle "__opi__3fooFv" "foo::operator int(void)"
    demangle "__or__3fooFR3foo" "foo::operator|(foo &)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__pl__3fooFR3foo" "foo::operator+(foo &)"
    demangle "__pp__3fooFi" "foo::operator++(int)"
    demangle "__pt__3fooFv" "foo::operator->(void)"
    demangle "__rm__3fooFR3foo" "foo::operator->*(foo &)"
    demangle "__rs__3fooFR3foo" "foo::operator>>(foo &)"
    demangle "__rs__7istreamFP9streambuf" "istream::operator>>(streambuf *)"
    demangle "__rs__7istreamFPFR3ios_R3ios" "istream::operator>>(ios &(*)(ios &))"
    demangle "__rs__7istreamFPFR7istream_R7istream" "istream::operator>>(istream &(*)(istream &))"
    demangle "__rs__7istreamFPUc" "istream::operator>>(unsigned char *)"
    demangle "__rs__7istreamFPc" "istream::operator>>(char *)"
    demangle "__rs__7istreamFRUi" "istream::operator>>(unsigned int &)"
    demangle "__rs__7istreamFRUl" "istream::operator>>(unsigned long &)"
    demangle "__rs__7istreamFRUs" "istream::operator>>(unsigned short &)"
    demangle "__rs__7istreamFRd" "istream::operator>>(double &)"
    demangle "__rs__7istreamFRf" "istream::operator>>(float &)"
    demangle "__rs__7istreamFRi" "istream::operator>>(int &)"
    demangle "__rs__7istreamFRl" "istream::operator>>(long &)"
    demangle "__rs__7istreamFRs" "istream::operator>>(short &)"
    demangle "__rs__FR7istreamR7complex" "operator>>(istream &, complex &)"
    demangle "__vc__3fooFR3foo" "foo::operator\\\[\\\](foo &)"
    demangle "__vtbl__10istrstream" "istrstream virtual table"
    demangle "__vtbl__17ostream__iostream__19iostream_withassign" "iostream_withassign::ostream__iostream virtual table"
    demangle "__vtbl__19iostream_withassign" "iostream_withassign virtual table"
    demangle "__vtbl__3foo" "foo virtual table"
    demangle "__vtbl__3foo__3bar" "bar::foo virtual table"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__vtbl__3ios" "ios virtual table"
    demangle "__vtbl__3ios__13strstreambase" "strstreambase::ios virtual table"
    demangle "__vtbl__7filebuf" "filebuf virtual table"
    demangle "__vtbl__7istream__10istrstream" "istrstream::istream virtual table"
    demangle "__vtbl__7ostream" "ostream virtual table"
    demangle "__vtbl__7ostream__8iostream" "iostream::ostream virtual table"
    demangle "__vtbl__8iostream__7fstream" "fstream::iostream virtual table"
    demangle "__vtbl__8stdiobuf" "stdiobuf virtual table"
    demangle "__vtbl__9strstream" "strstream virtual table"
    demangle "abs__F7complex" "abs(complex)"
    demangle "allocate__9streambufFv" "streambuf::allocate(void)"
    demangle "arg__F7complex" "arg(complex)"
    demangle "attach__11fstreambaseFi" "fstreambase::attach(int)"
    demangle "attach__7filebufFi" "filebuf::attach(int)"
    demangle "base__9streambufFv" "streambuf::base(void)"
    demangle "bitalloc__3iosSFv" "ios::bitalloc(void) static"
    demangle "blen__9streambufFv" "streambuf::blen(void)"
    demangle "chr__FiT1" "chr(int, int)"
    demangle "clear__3iosFi" "ios::clear(int)"
    demangle "close__11fstreambaseFv" "fstreambase::close(void)"
    demangle "close__7filebufFv" "filebuf::close(void)"
    demangle "complex_error__FR11c_exception" "complex_error(c_exception &)"
    demangle "complexfunc1__Fi" "complexfunc1(int)"
    demangle "complexfunc2__FPFPc_i" "complexfunc2(int (*)(char *))"
    demangle "complexfunc3__FPFPFPl_s_i" "complexfunc3(int (*)(short (*)(long *)))"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "complexfunc4__FPFPFPc_s_i" "complexfunc4(int (*)(short (*)(char *)))"
    demangle "complexfunc5__FPFPc_PFl_i" "complexfunc5(int (*(*)(char *))(long))"
    demangle "complexfunc6__FPFPi_PFl_i" "complexfunc6(int (*(*)(int *))(long))"
    demangle "complexfunc7__FPFPFPc_i_PFl_i" "complexfunc7(int (*(*)(int (*)(char *)))(long))"
    demangle "complicated_put__7ostreamFc" "ostream::complicated_put(char)"
    demangle "conv10__FlPc" "conv10(long, char *)"
    demangle "conv16__FUlPc" "conv16(unsigned long, char *)"
    demangle "conv16u__FUlPc" "conv16u(unsigned long, char *)"
    demangle "conv8__FUlPc" "conv8(unsigned long, char *)"
    demangle "cos__F7complex" "cos(complex)"
    demangle "cosh__F7complex" "cosh(complex)"
    demangle "dbp__9streambufFv" "streambuf::dbp(void)"
    demangle "dec__FR3ios" "dec(ios &)"
    demangle "dec__Fli" "dec(long, int)"
    demangle "do_ipfx__7istreamFi" "istream::do_ipfx(int)"
    demangle "do_opfx__7ostreamFv" "ostream::do_opfx(void)"
    demangle "do_osfx__7ostreamFv" "ostream::do_osfx(void)"
    demangle "doallocate__12strstreambufFv" "strstreambuf::doallocate(void)"
    demangle "doallocate__9streambufFv" "streambuf::doallocate(void)"
    demangle "dofield__FP7ostreamPciT2T3" "dofield(ostream *, char *, int, char *, int)"
    demangle "eatwhite__7istreamFv" "istream::eatwhite(void)"
    demangle "eatwhite__FR7istream" "eatwhite(istream &)"
    demangle "eback__9streambufFv" "streambuf::eback(void)"
    demangle "ebuf__9streambufFv" "streambuf::ebuf(void)"
    demangle "egptr__9streambufFv" "streambuf::egptr(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "endl__FR7ostream" "endl(ostream &)"
    demangle "ends__FR7ostream" "ends(ostream &)"
    demangle "eof__3iosFv" "ios::eof(void)"
    demangle "epptr__9streambufFv" "streambuf::epptr(void)"
    demangle "exp__F7complex" "exp(complex)"
    demangle "fill__3iosFc" "ios::fill(char)"
    demangle "fill__3iosFv" "ios::fill(void)"
    demangle "flags__3iosFl" "ios::flags(long)"
    demangle "flags__3iosFv" "ios::flags(void)"
    demangle "flush__7ostreamFv" "ostream::flush(void)"
    demangle "flush__FR7ostream" "flush(ostream &)"
    demangle "foo__FiN31" "foo(int, int, int, int)"
    demangle "foo__FiR3fooT1T2T1T2" "foo(int, foo &, int, foo &, int, foo &)"
    demangle "foo___3barFl" "bar::foo_(long)"
    demangle "form__FPCce" "form(const char *,...)"
    demangle "freeze__12strstreambufFi" "strstreambuf::freeze(int)"
    demangle "gbump__9streambufFi" "streambuf::gbump(int)"
    demangle "gcount__7istreamFv" "istream::gcount(void)"
    demangle "get__7istreamFPcic" "istream::get(char *, int, char)"
    demangle "get__7istreamFR9streambufc" "istream::get(streambuf &, char)"
    demangle "get_complicated__7istreamFRUc" "istream::get_complicated(unsigned char &)"
    demangle "get_complicated__7istreamFRc" "istream::get_complicated(char &)"
    demangle "getline__7istreamFPUcic" "istream::getline(unsigned char *, int, char)"
    demangle "getline__7istreamFPcic" "istream::getline(char *, int, char)"
    demangle "good__3iosFv" "ios::good(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "gptr__9streambufFv" "streambuf::gptr(void)"
    demangle "hex__FR3ios" "hex(ios &)"
    demangle "hex__Fli" "hex(long, int)"
    demangle "ignore__7istreamFiT1" "istream::ignore(int, int)"
    demangle "in_avail__9streambufFv" "streambuf::in_avail(void)"
    demangle "init__12strstreambufFPciT1" "strstreambuf::init(char *, int, char *)"
    demangle "init__3iosFP9streambuf" "ios::init(streambuf *)"
    demangle "initcount__13Iostream_init" "Iostream_init::initcount"
    demangle "ipfx__7istreamFi" "istream::ipfx(int)"
    demangle "is_open__7filebufFv" "filebuf::is_open(void)"
    demangle "iword__3iosFi" "ios::iword(int)"
    demangle "last_op__7filebufFv" "filebuf::last_op(void)"
    demangle "log__F7complex" "log(complex)"
    demangle "ls_complicated__7ostreamFUc" "ostream::ls_complicated(unsigned char)"
    demangle "ls_complicated__7ostreamFc" "ostream::ls_complicated(char)"
    demangle "nextbit__3ios" "ios::nextbit"
    demangle "nextword__3ios" "ios::nextword"
    demangle "norm__F7complex" "norm(complex)"
    demangle "oct__FR3ios" "oct(ios &)"
    demangle "oct__Fli" "oct(long, int)"
    demangle "open__11fstreambaseFPCciT2" "fstreambase::open(const char *, int, int)"
    demangle "open__7filebufFPCciT2" "filebuf::open(const char *, int, int)"
    demangle "open__7fstreamFPCciT2" "fstream::open(const char *, int, int)"
    demangle "open__8ifstreamFPCciT2" "ifstream::open(const char *, int, int)"
    demangle "open__8ofstreamFPCciT2" "ofstream::open(const char *, int, int)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "opfx__7ostreamFv" "ostream::opfx(void)"
    demangle "osfx__7ostreamFv" "ostream::osfx(void)"
    demangle "out_waiting__9streambufFv" "streambuf::out_waiting(void)"
    demangle "overflow__12strstreambufFi" "strstreambuf::overflow(int)"
    demangle "overflow__7filebufFi" "filebuf::overflow(int)"
    demangle "overflow__8stdiobufFi" "stdiobuf::overflow(int)"
    demangle "overflow__9streambufFi" "streambuf::overflow(int)"
    demangle "overload1arg__FSc" "overload1arg(signed char)"
    demangle "overload1arg__FUc" "overload1arg(unsigned char)"
    demangle "overload1arg__FUi" "overload1arg(unsigned int)"
    demangle "overload1arg__FUl" "overload1arg(unsigned long)"
    demangle "overload1arg__FUs" "overload1arg(unsigned short)"
    demangle "overload1arg__Fc" "overload1arg(char)"
    demangle "overload1arg__Fd" "overload1arg(double)"
    demangle "overload1arg__Ff" "overload1arg(float)"
    demangle "overload1arg__Fi" "overload1arg(int)"
    demangle "overload1arg__Fl" "overload1arg(long)"
    demangle "overload1arg__Fs" "overload1arg(short)"
    demangle "overload1arg__Fv" "overload1arg(void)"
    demangle "overloadargs__Fi" "overloadargs(int)"
    demangle "overloadargs__FiN21" "overloadargs(int, int, int)"
    demangle "overloadargs__FiN31" "overloadargs(int, int, int, int)"
    demangle "overloadargs__FiN41" "overloadargs(int, int, int, int, int)"
    demangle "overloadargs__FiN51" "overloadargs(int, int, int, int, int, int)"
    demangle "overloadargs__FiN61" "overloadargs(int, int, int, int, int, int, int)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "overloadargs__FiN71" "overloadargs(int, int, int, int, int, int, int, int)"
    demangle "overloadargs__FiN81" "overloadargs(int, int, int, int, int, int, int, int, int)"
    demangle "overloadargs__FiN91" "overloadargs(int, int, int, int, int, int, int, int, int, int)"
    demangle "overloadargs__FiN91N11" "overloadargs(int, int, int, int, int, int, int, int, int, int, int)"
    demangle "overloadargs__FiT1" "overloadargs(int, int)"
    demangle "pbackfail__8stdiobufFi" "stdiobuf::pbackfail(int)"
    demangle "pbackfail__9streambufFi" "streambuf::pbackfail(int)"
    demangle "pbase__9streambufFv" "streambuf::pbase(void)"
    demangle "pbump__9streambufFi" "streambuf::pbump(int)"
    demangle "pcount__10ostrstreamFv" "ostrstream::pcount(void)"
    demangle "pcount__12strstreambufFv" "strstreambuf::pcount(void)"
    demangle "polar__FdT1" "polar(double, double)"
    demangle "pow__F7complexT1" "pow(complex, complex)"
    demangle "pow__F7complexd" "pow(complex, double)"
    demangle "pow__F7complexi" "pow(complex, int)"
    demangle "pow__Fd7complex" "pow(double, complex)"
    demangle "pptr__9streambufFv" "streambuf::pptr(void)"
    demangle "precision__3iosFi" "ios::precision(int)"
    demangle "precision__3iosFv" "ios::precision(void)"
    demangle "pstart__FPciT2" "pstart(char *, int, int)"
    demangle "put__7ostreamFc" "ostream::put(char)"
    demangle "putback__7istreamFc" "istream::putback(char)"
    demangle "pword__3iosFi" "ios::pword(int)"
    demangle "rdbuf__11fstreambaseFv" "fstreambase::rdbuf(void)"
    demangle "rdbuf__11stdiostreamFv" "stdiostream::rdbuf(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "rdbuf__13strstreambaseFv" "strstreambase::rdbuf(void)"
    demangle "rdbuf__3iosFv" "ios::rdbuf(void)"
    demangle "rdbuf__7fstreamFv" "fstream::rdbuf(void)"
    demangle "rdbuf__8ifstreamFv" "ifstream::rdbuf(void)"
    demangle "rdbuf__8ofstreamFv" "ofstream::rdbuf(void)"
    demangle "read__7istreamFPci" "istream::read(char *, int)"
    demangle "resetiosflags__FR3iosl" "resetiosflags(ios &, long)"
    demangle "resetiosflags__Fl" "resetiosflags(long)"
    demangle "restore_errno__FRi" "restore_errno(int &)"
    demangle "rs_complicated__7istreamFRUc" "istream::rs_complicated(unsigned char &)"
    demangle "rs_complicated__7istreamFRc" "istream::rs_complicated(char &)"
    demangle "save_errno__FRi" "save_errno(int &)"
    demangle "sbumpc__9streambufFv" "streambuf::sbumpc(void)"
    demangle "seekg__7istreamFl" "istream::seekg(long)"
    demangle "seekg__7istreamFl8seek_dir" "istream::seekg(long, seek_dir)"
    demangle "seekoff__12strstreambufFl8seek_diri" "strstreambuf::seekoff(long, seek_dir, int)"
    demangle "seekoff__7filebufFl8seek_diri" "filebuf::seekoff(long, seek_dir, int)"
    demangle "seekoff__8stdiobufFl8seek_diri" "stdiobuf::seekoff(long, seek_dir, int)"
    demangle "seekoff__9streambufFl8seek_diri" "streambuf::seekoff(long, seek_dir, int)"
    demangle "seekoff__9streambufFlQ2_3ios12ios_seek_diri" "streambuf::seekoff(long, ios::ios_seek_dir, int)"
    demangle "seekp__7ostreamFl" "ostream::seekp(long)"
    demangle "seekp__7ostreamFl8seek_dir" "ostream::seekp(long, seek_dir)"
    demangle "seekpos__9streambufFli" "streambuf::seekpos(long, int)"
    demangle "set_new_handler__FPFv_v" "set_new_handler(void (*)(void))"
    demangle "setb__9streambufFPcT1i" "streambuf::setb(char *, char *, int)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "setb__FR3iosi" "setb(ios &, int)"
    demangle "setbase__Fi" "setbase(int)"
    demangle "setbuf__11fstreambaseFPci" "fstreambase::setbuf(char *, int)"
    demangle "setbuf__12strstreambufFPci" "strstreambuf::setbuf(char *, int)"
    demangle "setbuf__7filebufFPci" "filebuf::setbuf(char *, int)"
    demangle "setbuf__9streambufFPUci" "streambuf::setbuf(unsigned char *, int)"
    demangle "setbuf__9streambufFPci" "streambuf::setbuf(char *, int)"
    demangle "setbuf__9streambufFPciT2" "streambuf::setbuf(char *, int, int)"
    demangle "setf__3iosFl" "ios::setf(long)"
    demangle "setf__3iosFlT1" "ios::setf(long, long)"
    demangle "setfill__FR3iosi" "setfill(ios &, int)"
    demangle "setfill__Fi" "setfill(int)"
    demangle "setg__9streambufFPcN21" "streambuf::setg(char *, char *, char *)"
    demangle "setiosflags__FR3iosl" "setiosflags(ios &, long)"
    demangle "setiosflags__Fl" "setiosflags(long)"
    demangle "setp__9streambufFPcT1" "streambuf::setp(char *, char *)"
    demangle "setprecision__FR3iosi" "setprecision(ios &, int)"
    demangle "setprecision__Fi" "setprecision(int)"
    demangle "setstate__3iosFi" "ios::setstate(int)"
    demangle "setw__FR3iosi" "setw(ios &, int)"
    demangle "setw__Fi" "setw(int)"
    demangle "sgetc__9streambufFv" "streambuf::sgetc(void)"
    demangle "sgetn__9streambufFPci" "streambuf::sgetn(char *, int)"
    demangle "sin__F7complex" "sin(complex)"
    demangle "sinh__F7complex" "sinh(complex)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "skip__3iosFi" "ios::skip(int)"
    demangle "snextc__9streambufFv" "streambuf::snextc(void)"
    demangle "sputbackc__9streambufFc" "streambuf::sputbackc(char)"
    demangle "sputc__9streambufFi" "streambuf::sputc(int)"
    demangle "sputn__9streambufFPCci" "streambuf::sputn(const char *, int)"
    demangle "sqrt__F7complex" "sqrt(complex)"
    demangle "stdioflush__3ios" "ios::stdioflush"
    demangle "stdioflush__Fv" "stdioflush(void)"
    demangle "stdstatus__13Iostream_init" "Iostream_init::stdstatus"
    demangle "str__10ostrstreamFv" "ostrstream::str(void)"
    demangle "str__12strstreambufFv" "strstreambuf::str(void)"
    demangle "str__9strstreamFv" "strstream::str(void)"
    demangle "str__FPCci" "str(const char *, int)"
    demangle "sync__7filebufFv" "filebuf::sync(void)"
    demangle "sync__8stdiobufFv" "stdiobuf::sync(void)"
    demangle "sync__9streambufFv" "streambuf::sync(void)"
    demangle "sync_with_stdio__3iosSFv" "ios::sync_with_stdio(void) static"
    demangle "tellg__7istreamFv" "istream::tellg(void)"
    demangle "tellp__7ostreamFv" "ostream::tellp(void)"
    demangle "tie__3iosFP7ostream" "ios::tie(ostream *)"
    demangle "uconv10__FUlPc" "uconv10(unsigned long, char *)"
    demangle "unbuffered__9streambufFi" "streambuf::unbuffered(int)"
    demangle "unbuffered__9streambufFv" "streambuf::unbuffered(void)"
    demangle "underflow__12strstreambufFv" "strstreambuf::underflow(void)"
    demangle "underflow__7filebufFv" "filebuf::underflow(void)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct lucid style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "underflow__8stdiobufFv" "stdiobuf::underflow(void)"
    demangle "underflow__9streambufFv" "streambuf::underflow(void)"
    demangle "unsetf__3iosFl" "ios::unsetf(long)"
    demangle "uresize__3iosFi" "ios::uresize(int)"
    demangle "verify__11fstreambaseFi" "fstreambase::verify(int)"
    demangle "width__3iosFi" "ios::width(int)"
    demangle "write__7ostreamFPCci" "ostream::write(const char *, int)"
    demangle "ws__FR7istream" "ws(istream &)"
    demangle "x_snextc__9streambufFv" "streambuf::x_snextc(void)"
    demangle "xalloc__3iosSFv" "ios::xalloc(void) static"
    demangle "xget__7istreamFPc" "istream::xget(char *)"
    demangle "xsgetn__9streambufFPci" "streambuf::xsgetn(char *, int)"
    demangle "xsputn__9streambufFPCci" "streambuf::xsputn(const char *, int)"

    if $dem_passcount then {
	pass "$dem_passcount correct lucid style demanglings"
    }
}

#
#  Test arm style name demangling
#

proc test_arm_style_demangling {} {
    global prompt
    global dem_passcount
    global dem_failcount
    global max_dem_failcount

    set dem_passcount 0
    set dem_failcount 0

    # Set the demangling style to "arm" and then check to make sure
    # it really got set.  Return if the style failed to get set for
    # some reason.

    send "set demangle-style arm\n"
    expect {
	-re "set demangle-style arm\r\n$prompt $" {}
	-re ".*$prompt $" { fail "set demangle-style arm failed" ; return }
	timeout { fail "set demangle-style arm failed (timeout)" ; return }
    }

    send "show demangle-style\n"
    expect {
	-re "The current C\+\+ demangling style is \"arm\".\r\n$prompt $" {}
	-re ".*$prompt $" { fail "demangling style not set to arm" }
	timeout { fail "show demangle-style timed out" }
    }

    setup_xfail "*-*-*" 2141
    demangle "__dt__21T5__pt__11_PFiPPdPv_iFv" "T5<int (*)(int, double**, void*)>::~T5<int (*)(int, double**, void*)>(void)"
    clear_xfail "*-*-*"

    demangle "__ct__1cFi" "c::c(int)"

    setup_xfail "*-*-*" 2141
    demangle "__dt__11T5__pt__2_iFv" "T5<int>::~T5<int>(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__dt__11T5__pt__2_cFv" "T5<char>::~T5<char>(void)"
    clear_xfail "*-*-*"

    demangle "__ct__2T2Fi" "T2::T2(int)"
    demangle "__dt__2T1Fv" "T1::~T1(void)"

    setup_xfail "*-*-*" 2141
    demangle "__dt__12T5__pt__3_1xFv" "T5<x>::~T5<x>(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__dt__17T5__pt__8_PFcPv_iFv" "T5<int (*)(char, void*)>::~T5<int (*)(char, void*)>(void)"
    clear_xfail "*-*-*"

    demangle "g__FP1cPC1cT1" "g(c*, const c*, c*)"
    demangle "g__FPUlPCUlT1" "g(unsigned long *, const unsigned long *, unsigned long *)"
    demangle "g__FPUiPCUiT1" "g(unsigned int *, const unsigned int *, unsigned int *)"
    demangle "g__FPUsPCUsT1" "g(unsigned short *, const unsigned short *, unsigned short *)"
    demangle "g__FPUcPCUcT1" "g(unsigned char *, const unsigned char *, unsigned char *)"
    demangle "g__F1TPlPClT2" "g(T, long *, const long *, long *)"
    demangle "g__F1RRlRClT2" "g(R, long &, const long &, long &)"
    demangle "g__F1TPiPCiT2" "g(T, int *, const int *, int *)"
    demangle "g__F1RRiRCiT2" "g(R, int &, const int &, int &)"
    demangle "g__F1TPsPCsT2" "g(T, short *, const short *, short *)"
    demangle "g__F1RRsRCsT2" "g(R, short &, const short &, short &)"
    demangle "g__F1TPcPCcT2" "g(T, char *, const char *, char *)"
    demangle "g__F1RRcRCcT2" "g(R, char &, const char &, char &)"

    setup_xfail "*-*-*" 2141
    demangle "__ct__21T5__pt__11_PFiPPdPv_iFi" "T5<int (*)(int, double**, void*)>::T5<int (*)(int, double**, void*)>(int)"
    clear_xfail "*-*-*"

    demangle "__gt__FRC2T2c" "operator>(const T2 &, char)"
    demangle "__ge__FRC2T2c" "operator>=(const T2 &, char)"
    demangle "__lt__FRC2T2c" "operator<(const T2 &, char)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct arm style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "__le__FRC2T2c" "operator<=(const T2 &, char)"
    demangle "__ne__FRC2T2c" "operator!=(const T2 &, char)"
    demangle "__eq__FRC2T2c" "operator==(const T2 &, char)"
    demangle "__amd__FR2T2i" "operator%=(T2 &, int)"
    demangle "__adv__FR2T2i" "operator/=(T2 &, int)"
    demangle "__amu__FR2T2i" "operator*=(T2 &, int)"
    demangle "__ami__FR2T2i" "operator-=(T2 &, int)"
    demangle "__apl__FR2T2i" "operator+=(T2 &, int)"
    demangle "__nw__2T1SFUi" "T1::operator new(unsigned int) static"
    demangle "__dl__2T1SFPv" "T1::operator delete(void*) static"
    demangle "put__2T7SFi" "T7::put(int) static"

    setup_xfail "*-*-*" 2141
    demangle "__dl__12T5__pt__3_1xSFPv" "T5<x>::operator delete(void*) static"
    clear_xfail "*-*-*"

    demangle "h__FUc" "h(unsigned char)"
    demangle "f__Fic" "f(int, char)"
    demangle "h__FUi" "h(unsigned int)"
    demangle "h__Fci" "h(char, int)"
    demangle "h__FUl" "h(unsigned long)"
    demangle "h__Fcl" "h(char, long)"
    demangle "h__FUs" "h(unsigned short)"
    demangle "h__Fcs" "h(char, short)"
    demangle "__amd__FR2T2RC2T2" "operator%=(T2 &, const T2 &)"
    demangle "__adv__FR2T2RC2T2" "operator/=(T2 &, const T2 &)"
    demangle "__amu__FR2T2RC2T2" "operator*=(T2 &, const T2 &)"
    demangle "__ami__FR2T2RC2T2" "operator-=(T2 &, const T2 &)"
    demangle "__apl__FR2T2RC2T2" "operator+=(T2 &, const T2 &)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct arm style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "g__F1SRPUlRPCUlT2" "g(S, unsigned long *&, const unsigned long *&, unsigned long *&)"
    demangle "g__F1SRPUiRPCUiT2" "g(S, unsigned int *&, const unsigned int *&, unsigned int *&)"
    demangle "g__F1SRPUsRPCUsT2" "g(S, unsigned short *&, const unsigned short *&, unsigned short *&)"
    demangle "g__F1SRPUcRPCUcT2" "g(S, unsigned char *&, const unsigned char *&, unsigned char *&)"
    demangle "g__F1T1SRPlRPClT3" "g(T, S, long *&, const long *&, long *&)"
    demangle "g__F1T1SRPiRPCiT3" "g(T, S, int *&, const int *&, int *&)"
    demangle "g__F1T1SRPcRPCcT3" "g(T, S, char *&, const char *&, char *&)"

    setup_xfail "*-*-*" 2141
    demangle "X__12T5__pt__3_1x" "T5<x>::X"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__11T5__pt__2_iFi" "T5<int>::T5<int>(int)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__11T5__pt__2_cFi" "T5<char>::T5<char>(int)"
    clear_xfail "*-*-*"

    demangle "__gt__FRC2T2T1" "operator>(const T2 &, const T2 &)"
    demangle "__ge__FRC2T2T1" "operator>=(const T2 &, const T2 &)"
    demangle "__lt__FRC2T2T1" "operator<(const T2 &, const T2 &)"
    demangle "__le__FRC2T2T1" "operator<=(const T2 &, const T2 &)"
    demangle "__ne__FRC2T2T1" "operator!=(const T2 &, const T2 &)"
    demangle "__eq__FRC2T2T1" "operator==(const T2 &, const T2 &)"
    demangle "g__FcR1cRC1cT2" "g(char, c &, const c &, c &)"
    demangle "g__FcRPdRPCdT2" "g(char, double*&, const double*&, double*&)"
    demangle "g__FcRPfRPCfT2" "g(char, float*&, const float*&, float*&)"
    demangle "h__FcT1" "h(char, char)"
    demangle "f__Ficd" "f(int, char, double)"
    demangle "g__F1T1SdRPsRPCsT4" "g(T, S, double, short *&, const short *&, short *&)"
    demangle "g__F1cC1cT1" "g(c, const c, c)"
    demangle "g__FPdPCdT1" "g(double*, const double*, double*)"
    demangle "g__FPfPCfT1" "g(float*, const float*, float*)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct arm style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "g__FUlCUlT1" "g(unsigned long, const unsigned long, unsigned long)"
    demangle "g__FPlPClT1" "g(long *, const long *, long *)"
    demangle "g__FUiCUiT1" "g(unsigned int, const unsigned int, unsigned int)"
    demangle "g__FPiPCiT1" "g(int *, const int *, int *)"
    demangle "g__FUsCUsT1" "g(unsigned short, const unsigned short, unsigned short)"
    demangle "g__FPsPCsT1" "g(short *, const short *, short *)"
    demangle "g__FUcCUcT1" "g(unsigned char, const unsigned char, unsigned char)"
    demangle "g__FPcPCcT1" "g(char *, const char *, char *)"
    demangle "g__F1TlClT2" "g(T, long, const long, long)"
    demangle "g__F1TiCiT2" "g(T, int, const int, int)"
    demangle "g__F1TsCsT2" "g(T, short, const short, short)"
    demangle "g__F1TcCcT2" "g(T, char, const char, char)"

    setup_xfail "*-*-*" 2141
    demangle "__dl__17T5__pt__8_PFcPv_iSFPv" "T5<int (*)(char, void*)>::operator delete(void*) static"
    clear_xfail "*-*-*"

    demangle "printf__FPCce" "printf(const char *,...)"

    setup_xfail "*-*-*" 2141
    demangle "X__17T5__pt__8_PFcPv_i" "T5<int (*)(char, void*)>::X"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__12T5__pt__3_1xFi" "T5<x>::T5<x>(int)"
    clear_xfail "*-*-*"

    demangle "g__F1SRUlRCUlT2" "g(S, unsigned long &, const unsigned long &, unsigned long &)"
    demangle "g__F1SRPlRPClT2" "g(S, long *&, const long *&, long *&)"
    demangle "g__F1RRUiRCUiT2" "g(R, unsigned int &, const unsigned int &, unsigned int &)"
    demangle "g__F1SRPiRPCiT2" "g(S, int *&, const int *&, int *&)"
    demangle "g__F1RRUsRCUsT2" "g(R, unsigned short &, const unsigned short &, unsigned short &)"
    demangle "g__F1SRPsRPCsT2" "g(S, short *&, const short *&, short *&)"
    demangle "g__F1RRUcRCUcT2" "g(R, unsigned char &, const unsigned char &, unsigned char &)"
    demangle "g__F1SRPcRPCcT2" "g(S, char *&, const char *&, char *&)"
    demangle "g__F1T1RRlRClT3" "g(T, R, long &, const long &, long &)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct arm style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "g__F1T1RRiRCiT3" "g(T, R, int &, const int &, int &)"
    demangle "g__F1T1RRsRCsT3" "g(T, R, short &, const short &, short &)"
    demangle "g__F1T1RRcRCcT3" "g(T, R, char &, const char &, char &)"

    setup_xfail "*-*-*" 2141
    demangle "__dl__21T5__pt__11_PFiPPdPv_iSFPv" "T5<int (*)(int, double**, void*)>::operator delete(void*) static"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*"
    demangle "__std__dem_C_f_" "static destructor function for dem_C"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*"
    demangle "__sti__dem_C_f_" "static constructor function for dem_C"
    clear_xfail "*-*-*"

    demangle "f__FicdPcPFci_v" "f(int, char, double, char *, void (*)(char, int))"
    demangle "f__FicdPcPFic_v" "f(int, char, double, char *, void (*)(int, char))"
    demangle "get__2T7SFv" "T7::get(void) static"

    setup_xfail "*-*-*" 2141
    demangle "X__21T5__pt__11_PFiPPdPv_i" "T5<int (*)(int, double**, void*)>::X"
    clear_xfail "*-*-*"

    demangle "g__FcRdRCdT2" "g(char, double &, const double &, double &)"
    demangle "g__FcRfRCfT2" "g(char, float &, const float &, float &)"
    demangle "__md__FC2T2i" "operator%(const T2, int)"
    demangle "__dv__FC2T2i" "operator/(const T2, int)"
    demangle "__ml__FC2T2i" "operator*(const T2, int)"
    demangle "__mi__FC2T2i" "operator-(const T2, int)"
    demangle "__pl__FC2T2i" "operator+(const T2, int)"

    setup_xfail "*-*-*" 2141
    demangle "__dl__11T5__pt__2_iSFPv" "T5<int>::operator delete(void*) static"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__dl__11T5__pt__2_cSFPv" "T5<char>::operator delete(void*) static"
    clear_xfail "*-*-*"

    demangle "h__Fc" "h(char)"
    demangle "h__Fd" "h(double)"
    demangle "h__Ff" "h(float)"
    demangle "h__Fi" "h(int)"
    demangle "f__Fi" "f(int)"
    demangle "h__Fl" "h(long)"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct arm style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "h__Fs" "h(short)"
    demangle "__md__FC2T2RC2T2" "operator%(const T2, const T2 &)"
    demangle "__dv__FC2T2RC2T2" "operator/(const T2, const T2 &)"
    demangle "__ml__FC2T2RC2T2" "operator*(const T2, const T2 &)"
    demangle "__mi__FC2T2RC2T2" "operator-(const T2, const T2 &)"
    demangle "__pl__FC2T2RC2T2" "operator+(const T2, const T2 &)"
    demangle "g__FcRP1cRPC1cT2" "g(char, c*&, const c*&, c*&)"

    setup_xfail "*-*-*" 2141
    demangle "X__11T5__pt__2_c" "T5<char>::X"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "X__11T5__pt__2_i" "T5<int>::X"
    clear_xfail "*-*-*"

    demangle "g__FdCdT1" "g(double, const double, double)"
    demangle "g__FfCfT1" "g(float, const float, float)"
    demangle "g__FlClT1" "g(long, const long, long)"
    demangle "g__FiCiT1" "g(int, const int, int)"
    demangle "g__FsCsT1" "g(short, const short, short)"
    demangle "g__FcCcT1" "g(char, const char, char)"

    setup_xfail "*-*-*" 2141
    demangle "__ct__17T5__pt__8_PFcPv_iFi" "T5<int (*)(char, void*)>::T5<int (*)(char, void*)>(int)"
    clear_xfail "*-*-*"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct arm style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "f__FicdPc" "f(int, char, double, char *)"
    demangle "__nw__FUi" "operator new(unsigned int)"
    demangle "__ct__Q3_2T11a1bSFi" "T1::a::b::b(int) static"
    demangle "__dt__Q3_2T11a1bSFi" "T1::a::b::~b(int) static"
    demangle "put__Q3_2T11a1bSFi" "T1::a::b::put(int) static"
    demangle "get__Q2_2T11aSFv" "T1::a::get(void) static"
    demangle "put__2T1SFi" "T1::put(int) static"
    demangle "put__Q5_2T11a1b1c1dSFi" "T1::a::b::c::d::put(int) static"
    demangle "get__Q4_2T11a1b1cSFv" "T1::a::b::c::get(void) static"
    demangle "put__Q2_2T11aSFi" "T1::a::put(int) static"
    demangle "put__Q4_2T11a1b1cSFi" "T1::a::b::c::put(int) static"
    demangle "get__Q3_2T11a1bSFv" "T1::a::b::get(void) static"
    demangle "get__2T1SFv" "T1::get(void) static"
    demangle "get__Q5_2T11a1b1c1dSFv" "T1::a::b::c::d::get(void) static"

    setup_xfail "*-*-*" 2141
    demangle "__dt__11T1__pt__2_cFv" "T1<char>::~T1<char>(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__dt__12T1__pt__3_1tFv" "T1<t>::~T1<t>(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__dl__12T1__pt__3_1tSFPv" "T1<t>::operator delete(void*) static"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__11T1__pt__2_cFi" "T1<char>::T1<char>(int)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__11T1__pt__2_cFv" "T1<char>::T1<char>(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__12T1__pt__3_1tFi" "T1<t>::T1<t>(int)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__12T1__pt__3_1tFv" "T1<t>::T1<t>(void)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__dl__11T1__pt__2_cSFPv" "T1<char>::operator delete(void*) static"
    clear_xfail "*-*-*"

    if $dem_failcount>$max_dem_failcount then {
	if $dem_passcount then {
	    pass "$dem_passcount correct arm style demanglings"
	}
	fail "remaining tests suppressed after $dem_failcount failures..."
	return
    }

    demangle "bar__3fooFPv"       "foo::bar(void*)"
    demangle "bar__3fooFPCv"      "foo::bar(const void*)"
    demangle "bar__3fooCFPv"      "foo::bar(void*) const"
    demangle "bar__3fooCFPCv"     "foo::bar(const void*) const"
    demangle "__eq__3fooFR3foo"   "foo::operator==(foo &)"
    demangle "__eq__3fooFRC3foo"  "foo::operator==(const foo &)"
    demangle "__eq__3fooCFR3foo"  "foo::operator==(foo &) const"
    demangle "__eq__3fooCFRC3foo" "foo::operator==(const foo &) const"

    setup_xfail "*-*-*" 2141
    demangle "elem__15vector__pt__2_dFi" "vector<double>::elem(int)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "elem__15vector__pt__2_iFi" "vector<int>::elem(int)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__15vector__pt__2_dFi" "vector<double>::vector<double>(int)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*" 2141
    demangle "__ct__15vector__pt__2_iFi" "vector<int>::vector<int>(int)"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*"
    demangle "__sti__vector_C_" "static constructor function for vector_C"
    clear_xfail "*-*-*"

    setup_xfail "*-*-*"
    demangle "__ct__25DListNode__pt__9_R6RLabelFR6RLabelP25DListNode__pt__9_R6RLabelT2" \
	"DListNode<RLabel &>::DListNode<RLabel &>(RLabel &, DListNode<RLabel &> *, DListNode<RLabel &> *)"
    clear_xfail "*-*-*"

    if $dem_passcount then {
	pass "$dem_passcount correct arm style demanglings"
    }
}

# Test support for different demangling styles.  Note that this does
# not depend upon running the test program and does not depend upon
# gdb being able to lookup any C++ symbols.  It simply calls the 
# internal demangler with synthesized strings and tests the results.

proc do_tests {} {
    global prms_id
    global bug_id
    global subdir
    global binfile
    global prompt

    set prms_id 0
    set bug_id 0

    # Start with a fresh gdb.

    gdb_exit
    gdb_start

    send "set language c++\n"
    expect -re "$prompt $"
    send "set width 0\n"
    expect -re "$prompt $"
    
    test_lucid_style_demangling
    test_gnu_style_demangling
    test_arm_style_demangling
}

set binfile "gdbme"
set srcfile $binfile.c
do_tests
