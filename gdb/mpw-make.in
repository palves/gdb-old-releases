# Make empty definitions because MPW make doesn't default them.
XM_ADD_FILES = 
TM_ADD_FILES = 
NAT_ADD_FILES = 
XM_CDEPS = 
TM_CDEPS = 
NAT_CDEPS = 

CC_LD = Link

s = "{srcdir}"

o = :

# File in object dir can come from either the current dir or srcdir.
 
"{o}" \Option-f : "{s}"

# Default rule that puts each file into separate segment.

.c.o  \Option-f .c
   {CC}  {DepDir}{Default}.c {INTERNAL_CFLAGS} -s gdb_{Default} -o {TargDir}{Default}.c.o

#Copyright 1989, 1990, 1991, 1992, 1993, 1994 Free Software Foundation, Inc.

# This file is part of GDB.

# This program is free software; you can redistribute it and:or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

prefix = :usr:local:

program_transform_name =
exec_prefix = {prefix}
bindir = {exec_prefix}bin
libdir = {exec_prefix}lib
tooldir = {libdir}:{target_alias}

datadir = {prefix}:lib
mandir = {prefix}:man
man1dir = {mandir}:man1
man2dir = {mandir}:man2
man3dir = {mandir}:man3
man4dir = {mandir}:man4
man5dir = {mandir}:man5
man6dir = {mandir}:man6
man7dir = {mandir}:man7
man8dir = {mandir}:man8
man9dir = {mandir}:man9
infodir = {prefix}:info
includedir = {prefix}:include
docdir = {datadir}:doc

SHELL = :bin:sh

INSTALL = Duplicate -y
INSTALL_PROGRAM = {INSTALL}
INSTALL_DATA = {INSTALL}
INSTALL_XFORM = {INSTALL} -t='{program_transform_name}'
INSTALL_XFORM1 = {INSTALL_XFORM} -b=.1

AR = ar
AR_FLAGS = qv
RANLIB = ranlib

# Flags that describe where you can find the termcap library.
# This can be overridden in the host Makefile fragment file.
TERMCAP = -ltermcap

# If you are compiling with GCC, make sure that either 1) You have the
# fixed include files where GCC can reach them, or 2) You use the
# -traditional flag.  Otherwise the ioctl calls in "{s}"inflow.c
# will be incorrectly compiled.  The "fixincludes" script in the gcc
# distribution will fix your include files up.
#CC=gcc -traditional

# Directory containing source files.  Don't clean up the spacing,
# this exact string is matched for by the "configure" script.
# srcdir = :

# If you use bison instead of yacc, it needs to include the "-y" argument.
BISON=byacc
#BISON=yacc
YACC={BISON}

# where to find makeinfo, preferably one designed for texinfo-2
MAKEINFO=makeinfo

# Set this up with gcc if you have gnu ld and the loader will print out
# line numbers for undefined references.
#CC-LD=gcc -static
CC-LD={CC}

# Where is our "include" directory?  Typically "{srcdir}":include.
# This is essentially the header file directory for the library
# routines in libiberty.
INCLUDE_DIR = "{srcroot}"include
INCLUDE_CFLAGS = -i {INCLUDE_DIR} -i {INCLUDE_DIR}:mpw -i ::extra-include -i "{srcroot}"bfd -i "{srcroot}"readline
# Where is the "-liberty" library, containing getopt and obstack?
LIBIBERTY = ::libiberty:libiberty.o

# Where is the MMALLOC library?  Typically ::mmalloc.
# Note that mmalloc can still be used on systems without mmap().
# To use your system malloc, comment out the following defines.
MMALLOC_DIR = :mmalloc
MMALLOC_SRC = "{s}"{MMALLOC_DIR}
MMALLOC = :{MMALLOC_DIR}:libmmalloc.o
# To use your system malloc, uncomment MMALLOC_DISABLE.
MMALLOC_DISABLE = -d NO_MMALLOC
# To use mmalloc but disable corruption checking, uncomment MMALLOC_CHECK
#MMALLOC_CHECK = -d NO_MMALLOC_CHECK
MMALLOC_CFLAGS = -i {MMALLOC_SRC} {MMALLOC_CHECK} {MMALLOC_DISABLE}

# Where are the BFD library?
BFD_DIR = :bfd
BFD_SRC = "{s}"{BFD_DIR}
BFD = :{BFD_DIR}:libbfd.o
BFD_CFLAGS = -i :{BFD_DIR} -i {BFD_SRC}

# Where is the READLINE library?  Typically in ::readline.
READLINE_DIR = :readline
READLINE_SRC = "{s}"{READLINE_DIR}
READLINE = :{READLINE_DIR}:libreadline.o
#READLINE_DISABLE = -d NO_READLINE
READLINE_CFLAGS = -i {READLINE_SRC}
#READLINE_CFLAGS = {READLINE_DISABLE}

# Opcodes currently live in one of two places.  Either they are in the
# opcode library, typically ::opcodes, or they are in a header file
# in INCLUDE_DIR.
# Where is the "-lopcodes" library, with (some of) the opcode tables and
# disassemblers?
OPCODES = ::opcodes:libopcodes.o
# Where are the other opcode tables which only have header file
# versions?
OP_INCLUDE = {INCLUDE_DIR}:opcode
OPCODES_CFLAGS = -i {OP_INCLUDE}

# All the includes used for CFLAGS and for lint.
# -i : for config files.
# -i {s} for gdb internal headers and possibly for "{s}"regex.h also.
# -i "{s}"config for more generic config files.

# It is also possible that you will need to add -i :usr:include:sys if
# your system doesn't have "{s}"fcntl.h in :usr:include (which is where it
# should be according to Posix).
GDB_CFLAGS = -i : -i {s} -i "{s}"config

# M{H,T}_CFLAGS, if defined, have host- and target-dependent CFLAGS
# from the config directory.
GLOBAL_CFLAGS = {MT_CFLAGS} {MH_CFLAGS}
#PROFILE_CFLAGS = -pg

# CFLAGS is specifically reserved for setting from the command line
# when running make.  I.E.  "make CFLAGS=-Wmissing-prototypes".
#CFLAGS = -g

# Need to pass this to testsuite for "make check".  Probably should be
# consistent with top-level Makefile.in and gdb:testsuite:Makefile.in
# so "make check" has the same result no matter where it is run.
CXXFLAGS = -g -O

# INTERNAL_CFLAGS is the aggregate of all other \Option-xCFLAGS macros.
INTERNAL_CFLAGS = {CFLAGS} {GLOBAL_CFLAGS} {PROFILE_CFLAGS} \Option-d
	{GDB_CFLAGS} {OPCODES_CFLAGS} \Option-d
	{BFD_CFLAGS} {MMALLOC_CFLAGS} {READLINE_CFLAGS} {INCLUDE_CFLAGS}

# LDFLAGS is specifically reserved for setting from the command line
# when running make.

# Profiling options need to go here to work.
# I think it's perfectly reasonable for a user to set -pg in CFLAGS
# and have it work; that's why CFLAGS is here.
INTERNAL_LDFLAGS = {CFLAGS} {GLOBAL_CFLAGS} {PROFILE_CFLAGS} {LDFLAGS}

# We are using our own version of REGEX now to be consistent across
# machines.
REGEX = "{o}"regex.c.o
REGEX1 = "{o}"regex.c.o

# If your system is missing alloca(), or, more likely, it's there but
# it doesn't work, then refer to libiberty.

# Libraries and corresponding dependencies for compiling gdb.
# {X,T}M_CLIBS, defined in \Option-xconfig files, have host- and target-dependent libs.
# TERMCAP comes after readline, since readline depends on it.
# If you have the Cygnus libraries installed,
# you can use 'CLIBS={INSTALLED_LIBS}' 'CDEPS='
INSTALLED_LIBS=-lbfd -lreadline {TERMCAP} -lopcodes -lmmalloc \Option-d
	liberty {XM_CLIBS} {TM_CLIBS} {NAT_CLIBS}
CLIBS = {BFD} {OPCODES} \Option-d
	{LIBIBERTY} {XM_CLIBS} {TM_CLIBS} {NAT_CLIBS}
CDEPS = {XM_CDEPS} {TM_CDEPS} {NAT_CDEPS} \Option-d
	{BFD} {OPCODES} {LIBIBERTY}

ADD_FILES = {REGEX} {XM_ADD_FILES} {TM_ADD_FILES} {NAT_ADD_FILES}
ADD_DEPS = {REGEX1} {XM_ADD_FILES} {TM_ADD_FILES} {NAT_ADD_FILES}

VERSION = 4.14.1
DIST=gdb

LINT=:usr:5bin:lint
LINTFLAGS= {BFD_CFLAGS}

RUNTEST = `if [ -f $"{s}":dejagnu:runtest ] ; then \Option-d
		echo $"{s}":dejagnu:runtest ; else echo runtest; \Option-d
	   fi`

RUNTESTFLAGS=

# This is "{o}"ser-unix.c.o for any system which supports a v7:BSD:SYSV:POSIX
# interface to the serial port.  Hopefully if get ported to OS:2, VMS,
# etc., then there will be (as part of the C library or perhaps as
# part of libiberty) a POSIX interface.  But at least for now the
# host-dependent makefile fragment might need to use something else
# besides "{o}"ser-unix.c.o
SER_HARDWIRE = "{o}"ser-mac.c.o

# The `remote' debugging target is supported for most architectures,
# but not all (e.g. 960)
REMOTE_O = "{o}"remote.c.o "{o}"dcache.c.o "{o}"remote-utils.c.o

# Host and target-dependent makefile fragments come in here.
####
# End of host and target-dependent makefile fragments

FLAGS_TO_PASS = \Option-d
	"prefix={prefix}" \Option-d
	"exec_prefix={exec_prefix}" \Option-d
	"against={against}" \Option-d
	"AR={AR}" \Option-d
	"AR_FLAGS={AR_FLAGS}" \Option-d
	"CC={CC}" \Option-d
	"CFLAGS={CFLAGS}" \Option-d
	"CHILLFLAGS={CHILLFLAGS}" \Option-d
	"CHILL={CHILL}" \Option-d
	"CHILL_LIB={CHILL_LIB}" \Option-d
	"CXX={CXX}" \Option-d
	"CXXFLAGS={CXXFLAGS}" \Option-d
	"RANLIB={RANLIB}" \Option-d
	"MAKEINFO={MAKEINFO}" \Option-d
	"INSTALL={INSTALL}" \Option-d
	"INSTALL_PROGRAM={INSTALL_PROGRAM}" \Option-d
	"INSTALL_DATA={INSTALL_DATA}" \Option-d
	"RUNTEST={RUNTEST}" \Option-d
	"RUNTESTFLAGS={RUNTESTFLAGS}" \Option-d
	"BISON={BISON}"

# Flags that we pass when building the testsuite.

CC_FOR_TARGET = ` \Option-d
  if [ -f ${rootme}:::gcc:xgcc ] ; then \Option-d
    echo ${rootme}:::gcc:xgcc -B${rootme}:::gcc:; \Option-d
  else \Option-d
    if [ "{host_canonical}" = "{target_canonical}" ] ; then \Option-d
      echo {CC}; \Option-d
    else \Option-d
      t='{program_transform_name}'; echo gcc | sed -e '' $$t; \Option-d
    fi; \Option-d
  fi`

CXX = gcc

CXX_FOR_TARGET = ` \Option-d
  if [ -f ${rootme}:::gcc:Makefile ] ; then \Option-d
    echo ${rootme}:::gcc:xgcc -B${rootme}:::gcc:; \Option-d
  else \Option-d
    if [ "{host_canonical}" = "{target_canonical}" ] ; then \Option-d
      echo {CXX}; \Option-d
    else \Option-d
      t='{program_transform_name}'; echo gcc | sed -e '' $$t; \Option-d
    fi; \Option-d
  fi`

CHILLFLAGS = {CFLAGS}
CHILL = gcc
CHILL_FOR_TARGET = ` \Option-d
  if [ -f ${rootme}:::gcc:Makefile ] ; then \Option-d
    echo ${rootme}:::gcc:xgcc -B${rootme}:::gcc: -L${rootme}:::chillrt:; \Option-d
  else \Option-d
    if [ "{host_canonical}" = "{target_canonical}" ] ; then \Option-d
      echo {CC}; \Option-d
    else \Option-d
      t='{program_transform_name}'; echo gcc | sed -e '' $$t; \Option-d
    fi; \Option-d
  fi`
CHILL_LIB = -lchill

# The use of ${x_FOR_TARGET} reduces the command line length by not
# duplicating the lengthy definition.
TARGET_FLAGS_TO_PASS = \Option-d
	"prefix={prefix}" \Option-d
	"exec_prefix={exec_prefix}" \Option-d
	"against={against}" \Option-d
	'CC=${CC_FOR_TARGET}' \Option-d
	"CC_FOR_TARGET={CC_FOR_TARGET}" \Option-d
	"CFLAGS={CFLAGS}" \Option-d
	"CHILLFLAGS={CHILLFLAGS}" \Option-d
	'CHILL=${CHILL_FOR_TARGET}' \Option-d
	"CHILL_FOR_TARGET={CHILL_FOR_TARGET}" \Option-d
	"CHILL_LIB={CHILL_LIB}" \Option-d
	'CXX=${CXX_FOR_TARGET}' \Option-d
	"CXX_FOR_TARGET={CXX_FOR_TARGET}" \Option-d
	"CXXFLAGS={CXXFLAGS}" \Option-d
	"MAKEINFO={MAKEINFO}" \Option-d
	"INSTALL={INSTALL}" \Option-d
	"INSTALL_PROGRAM={INSTALL_PROGRAM}" \Option-d
	"INSTALL_DATA={INSTALL_DATA}" \Option-d
	"RUNTEST={RUNTEST}" \Option-d
	"RUNTESTFLAGS={RUNTESTFLAGS}" \Option-d
	"BISON={BISON}"

ALLDEPFILES = "{s}"29k-share:udi:udip2soc.c "{s}"29k-share:udi:udr.c \Option-d
	"{s}"29k-share:udi:udi2go32.c \Option-d
	"{s}"a29k-tdep.c "{s}"a68v-nat.c "{s}"alpha-nat.c "{s}"alpha-tdep.c \Option-d
	"{s}"altos-xdep.c arm-convert.s \Option-d
	"{s}"arm-tdep.c "{s}"arm-xdep.c "{s}"coff-solib.c \Option-d
	"{s}"convex-tdep.c \Option-d
	"{s}"convex-xdep.c "{s}"core-svr4.c "{s}"coredep.c "{s}"corelow.c "{s}"dcache.c "{s}"delta68-nat.c \Option-d
	"{s}"dpx2-nat.c "{s}"dstread.c "{s}"exec.c "{s}"fork-child.c \Option-d
	"{s}"go32-xdep.c "{s}"gould-tdep.c "{s}"gould-xdep.c "{s}"h8300-tdep.c "{s}"h8500-tdep.c \Option-d
	"{s}"hp300ux-nat.c "{s}"hppa-tdep.c "{s}"hppab-nat.c "{s}"hppah-nat.c \Option-d
	"{s}"i386-tdep.c "{s}"i386b-nat.c "{s}"i386mach-nat.c "{s}"i386v-nat.c \Option-d
	"{s}"i386aix-nat.c "{s}"i386m3-nat.c "{s}"i386v4-nat.c "{s}"i386ly-tdep.c \Option-d
	"{s}"i387-tdep.c \Option-d
	"{s}"i960-tdep.c \Option-d
	"{s}"infptrace.c "{s}"inftarg.c "{s}"irix4-nat.c "{s}"irix5-nat.c "{s}"isi-xdep.c \Option-d
	"{s}"lynx-nat.c "{s}"m3-nat.c \Option-d
	"{s}"m68k-tdep.c \Option-d
	"{s}"m88k-nat.c "{s}"m88k-tdep.c "{s}"mips-nat.c \Option-d
	"{s}"mips-tdep.c "{s}"mipsm3-nat.c "{s}"news-xdep.c \Option-d
	"{s}"nindy-share:Onindy.c "{s}"nindy-share:nindy.c \Option-d
	"{s}"nindy-share:ttyflush.c "{s}"nindy-tdep.c \Option-d
	"{s}"ns32k-tdep.c "{s}"ns32km3-nat.c "{s}"osfsolib.c \Option-d
	"{s}"somread.c "{s}"somsolib.c \Option-d
	"{s}"procfs.c "{s}"pyr-tdep.c "{s}"pyr-xdep.c \Option-d
	"{s}"remote-adapt.c "{s}"remote-bug.c "{s}"remote-e7000.c "{s}"remote-eb.c "{s}"remote-es.c \Option-d
	"{s}"remote-hms.c "{s}"remote-mips.c \Option-d
	"{s}"remote-mm.c "{s}"remote-mon.c "{s}"remote-nindy.c "{s}"remote-sim.c \Option-d
	"{s}"remote-st.c "{s}"remote-utils.c "{s}"dcache.c \Option-d
	"{s}"remote-udi.c "{s}"remote-vx.c "{s}"rs6000-nat.c \Option-d
	"{s}"rs6000-tdep.c "{s}"ser-go32.c "{s}"ser-tcp.c "{s}"sh-tdep.c "{s}"solib.c "{s}"sparc-nat.c \Option-d
	"{s}"sparc-tdep.c "{s}"sun3-nat.c "{s}"sun386-nat.c \Option-d
	"{s}"symm-tdep.c "{s}"symm-nat.c \Option-d
	"{s}"tahoe-tdep.c "{s}"ultra3-nat.c "{s}"ultra3-xdep.c "{s}"umax-xdep.c \Option-d
	"{s}"vax-tdep.c \Option-d
	"{s}"vx-share:xdr_ld.c "{s}"vx-share:xdr_ptrace.c "{s}"vx-share:xdr_rdb.c \Option-d
	"{s}"xcoffexec.c "{s}"xcoffread.c "{s}"xcoffsolib.c "{s}"z8k-tdep.c

ALLPARAM = "{s}"config:a29k:nm-ultra3.h "{s}"config:a29k:tm-a29k.h \Option-d
	"{s}"config:a29k:tm-ultra3.h "{s}"config:a29k:xm-ultra3.h \Option-d
	"{s}"config:alpha:nm-alpha.h "{s}"config:alpha:tm-alpha.h \Option-d
	"{s}"config:alpha:xm-alpha.h "{s}"config:arm:tm-arm.h \Option-d
	"{s}"config:arm:xm-arm.h "{s}"config:convex:tm-convex.h \Option-d
	"{s}"config:convex:xm-convex.h "{s}"config:gould:tm-np1.h "{s}"config:gould:tm-pn.h \Option-d
	"{s}"config:gould:xm-np1.h "{s}"config:gould:xm-pn.h "{s}"config:h8300:tm-h8300.h \Option-d
	"{s}"config:h8500:tm-h8500.h "{s}"config:i386:nm-i386aix.h \Option-d
	"{s}"config:i386:nm-i386bsd.h "{s}"config:i386:nm-i386lynx.h \Option-d
	"{s}"config:i386:nm-i386mach.h "{s}"config:i386:nm-i386sco.h \Option-d
	"{s}"config:i386:nm-i386sco4.h "{s}"config:i386:nm-i386v.h \Option-d
	"{s}"config:i386:nm-i386v4.h "{s}"config:i386:nm-linux.h \Option-d
	"{s}"config:i386:nm-sun386.h "{s}"config:i386:nm-symmetry.h \Option-d
	"{s}"config:i386:tm-i386aix.h "{s}"config:i386:tm-i386bsd.h \Option-d
	"{s}"config:i386:tm-i386lynx.h "{s}"config:i386:tm-i386m3.h \Option-d
	"{s}"config:i386:tm-i386mk.h "{s}"config:i386:tm-i386nw.h \Option-d
	"{s}"config:i386:tm-i386v.h \Option-d
	"{s}"config:i386:tm-i386v4.h "{s}"config:i386:tm-linux.h \Option-d
	"{s}"config:i386:tm-sun386.h \Option-d
	"{s}"config:i386:tm-symmetry.h "{s}"config:i386:xm-go32.h \Option-d
	"{s}"config:i386:xm-i386aix.h "{s}"config:i386:xm-i386bsd.h \Option-d
	"{s}"config:i386:xm-i386lynx.h "{s}"config:i386:xm-i386mach.h \Option-d
	"{s}"config:i386:xm-i386m3.h "{s}"config:i386:xm-i386mk.h \Option-d
	"{s}"config:i386:xm-i386sco.h "{s}"config:i386:xm-i386v.h \Option-d
	"{s}"config:i386:xm-i386v32.h "{s}"config:i386:xm-i386v4.h \Option-d
	"{s}"config:i386:xm-linux.h "{s}"config:i386:xm-sun386.h \Option-d
	"{s}"config:i386:xm-symmetry.h "{s}"config:i960:tm-nindy960.h \Option-d
	"{s}"config:i960:tm-vx960.h "{s}"config:m68k:nm-apollo68b.h \Option-d
	"{s}"config:m68k:nm-apollo68v.h "{s}"config:m68k:nm-delta68.h \Option-d
	"{s}"config:m68k:nm-dpx2.h "{s}"config:m68k:nm-hp300bsd.h \Option-d
	"{s}"config:m68k:nm-hp300hpux.h "{s}"config:m68k:nm-news.h \Option-d
	"{s}"config:m68k:nm-m68klynx.h \Option-d
	"{s}"config:m68k:nm-sun2.h \Option-d
	"{s}"config:m68k:nm-sun3.h "{s}"config:m68k:tm-3b1.h "{s}"config:m68k:tm-altos.h \Option-d
	"{s}"config:m68k:tm-apollo68b.h \Option-d
	"{s}"config:m68k:tm-amix.h "{s}"config:m68k:tm-delta68.h \Option-d
	"{s}"config:m68k:tm-dpx2.h "{s}"config:m68k:tm-es1800.h \Option-d
	"{s}"config:m68k:tm-hp300bsd.h "{s}"config:m68k:tm-hp300hpux.h \Option-d
	"{s}"config:m68k:tm-isi.h "{s}"config:m68k:tm-m68klynx.h \Option-d
	"{s}"config:m68k:tm-monitor.h \Option-d
	"{s}"config:m68k:tm-news.h "{s}"config:m68k:tm-os68k.h "{s}"config:m68k:tm-st2000.h \Option-d
	"{s}"config:m68k:tm-sun2.h "{s}"config:m68k:tm-sun2os4.h "{s}"config:m68k:tm-sun3.h \Option-d
	"{s}"config:m68k:tm-sun3os4.h "{s}"config:m68k:tm-vx68.h "{s}"config:m68k:xm-3b1.h \Option-d
	"{s}"config:m68k:xm-altos.h "{s}"config:m68k:xm-amix.h \Option-d
	"{s}"config:m68k:xm-apollo68b.h "{s}"config:m68k:xm-apollo68v.h \Option-d
	"{s}"config:m68k:xm-delta68.h "{s}"config:m68k:xm-dpx2.h \Option-d
	"{s}"config:m68k:xm-hp300bsd.h "{s}"config:m68k:xm-hp300hpux.h \Option-d
	"{s}"config:m68k:xm-isi.h "{s}"config:m68k:xm-m68klynx.h \Option-d
	"{s}"config:m68k:xm-news.h "{s}"config:m68k:xm-news1000.h \Option-d
	"{s}"config:m68k:xm-sun2.h "{s}"config:m68k:xm-sun3.h "{s}"config:m68k:xm-sun3os4.h \Option-d
	"{s}"config:m88k:nm-delta88v4.h "{s}"config:m88k:nm-m88k.h \Option-d
	"{s}"config:m88k:tm-delta88.h \Option-d
	"{s}"config:m88k:tm-delta88v4.h "{s}"config:m88k:tm-m88k.h \Option-d
	"{s}"config:m88k:xm-delta88.h "{s}"config:m88k:xm-delta88v4.h \Option-d
	"{s}"config:m88k:xm-dgux.h "{s}"config:m88k:xm-m88k.h \Option-d
	"{s}"config:mips:nm-irix3.h \Option-d
	"{s}"config:mips:nm-irix4.h "{s}"config:mips:nm-irix5.h \Option-d
	"{s}"config:mips:nm-mips.h "{s}"config:mips:nm-riscos.h \Option-d
	"{s}"config:mips:nm-news-mips.h "{s}"config:mips:tm-bigmips.h \Option-d
	"{s}"config:mips:tm-idt.h "{s}"config:mips:tm-idtl.h \Option-d
	"{s}"config:mips:tm-irix3.h "{s}"config:mips:tm-irix5.h \Option-d
	"{s}"config:mips:tm-mips.h "{s}"config:mips:tm-mipsm3.h \Option-d
	"{s}"config:mips:xm-irix3.h \Option-d
	"{s}"config:mips:xm-irix4.h "{s}"config:mips:xm-irix5.h \Option-d
	"{s}"config:mips:xm-makeva.h "{s}"config:mips:xm-mips.h \Option-d
	"{s}"config:mips:xm-mipsm3.h \Option-d
	"{s}"config:mips:xm-riscos.h "{s}"config:mips:xm-news-mips.h \Option-d
	"{s}"config:nm-lynx.h "{s}"config:nm-sysv4.h \Option-d
	"{s}"config:none:nm-none.h "{s}"config:none:tm-none.h "{s}"config:none:xm-none.h \Option-d
	"{s}"config:ns32k:nm-umax.h \Option-d
	"{s}"config:ns32k:tm-ns32km3.h \Option-d
	"{s}"config:ns32k:tm-merlin.h "{s}"config:ns32k:tm-umax.h \Option-d
	"{s}"config:ns32k:xm-ns32km3.h \Option-d
	"{s}"config:ns32k:xm-merlin.h "{s}"config:ns32k:xm-umax.h \Option-d
	"{s}"config:pa:nm-hppab.h \Option-d
	"{s}"config:pa:nm-hppah.h "{s}"config:pa:tm-hppab.h "{s}"config:pa:tm-hppah.h \Option-d
	"{s}"config:pa:xm-hppab.h "{s}"config:pa:xm-hppah.h "{s}"config:pa:xm-pa.h \Option-d
	"{s}"config:pyr:tm-pyr.h \Option-d
	"{s}"config:pyr:xm-pyr.h "{s}"config:romp:xm-rtbsd.h "{s}"config:rs6000:nm-rs6000.h \Option-d
	"{s}"config:rs6000:tm-rs6000.h "{s}"config:rs6000:xm-rs6000.h "{s}"config:sh:tm-sh.h \Option-d
	"{s}"config:sparc:nm-sun4os4.h "{s}"config:sparc:nm-sparclynx.h \Option-d
	"{s}"config:sparc:tm-sparclite.h "{s}"config:sparc:tm-sparclynx.h \Option-d
	"{s}"config:sparc:tm-spc-em.h "{s}"config:sparc:tm-sun4os4.h \Option-d
	"{s}"config:sparc:tm-sun4sol2.h "{s}"config:sparc:tm-vxsparc.h \Option-d
	"{s}"config:sparc:xm-sparclynx.h \Option-d
	"{s}"config:sparc:xm-sun4os4.h "{s}"config:sparc:xm-sun4sol2.h \Option-d
	"{s}"config:tahoe:tm-tahoe.h "{s}"config:tahoe:xm-tahoe.h "{s}"config:vax:nm-vax.h \Option-d
	"{s}"config:vax:tm-vax.h "{s}"config:vax:xm-vaxbsd.h "{s}"config:vax:xm-vaxult.h \Option-d
	"{s}"config:vax:xm-vaxult2.h "{s}"config:z8k:tm-z8k.h

ALLCONFIG = config:a29k:a29k-kern.mt config:a29k:a29k-udi.mt \Option-d
	config:a29k:a29k.mt config:a29k:ultra3.mh config:a29k:ultra3.mt \Option-d
	config:alpha:alpha-osf1.mh config:alpha:alpha-osf1.mt \Option-d
	config:alpha:alpha-nw.mt \Option-d
	config:arm:arm.mh config:arm:arm.mt config:convex:convex.mh \Option-d
	config:convex:convex.mt config:gould:np1.mh config:gould:np1.mt \Option-d
	config:gould:pn.mh config:gould:pn.mt config:h8300:h8300hms.mt \Option-d
	config:h8500:h8500hms.mt config:i386:go32.mh config:i386:i386aix.mh \Option-d
	config:i386:i386aix.mt config:i386:i386aout.mt config:i386:i386bsd.mh \Option-d
	config:i386:i386bsd.mt config:i386:i386lynx.mh \Option-d
	config:i386:i386lynx.mt config:i386:i386m3.mh config:i386:i386m3.mt \Option-d
	config:i386:i386mach.mh config:i386:i386mk.mh config:i386:i386mk.mt \Option-d
	config:i386:i386nw.mt config:i386:i386sco.mh \Option-d
	config:i386:i386sco4.mh \Option-d
	config:i386:i386sol2.mh config:i386:i386sol2.mt config:i386:i386v.mh \Option-d
	config:i386:i386v.mt config:i386:i386v32.mh config:i386:i386v4.mh \Option-d
	config:i386:i386v4.mt config:i386:linux.mh config:i386:linux.mt \Option-d
	config:i386:ncr3000.mh config:i386:ncr3000.mt config:i386:ptx.mh \Option-d
	config:i386:sun386.mh \Option-d
	config:i386:sun386.mt config:i386:symmetry.mh config:i386:symmetry.mt \Option-d
	config:i960:nindy960.mt config:i960:vxworks960.mt config:m68k:3b1.mh \Option-d
	config:m68k:3b1.mt config:m68k:altos.mh config:m68k:altos.mt \Option-d
	config:m68k:amix.mh config:m68k:amix.mt config:m68k:apollo68b.mh \Option-d
	config:m68k:apollo68b.mt \Option-d
	config:m68k:apollo68v.mh config:m68k:delta68.mh \Option-d
	config:m68k:delta68.mt config:m68k:dpx2.mh config:m68k:dpx2.mt \Option-d
	config:m68k:es1800.mt config:m68k:hp300bsd.mh \Option-d
	config:m68k:hp300bsd.mt config:m68k:hp300hpux.mh \Option-d
	config:m68k:hp300hpux.mt config:m68k:isi.mh config:m68k:isi.mt \Option-d
	config:m68k:m68klynx.mh config:m68k:m68klynx.mt \Option-d
	config:m68k:monitor.mt \Option-d
	config:m68k:news.mh config:m68k:news.mt config:m68k:news1000.mh \Option-d
	config:m68k:os68k.mt config:m68k:st2000.mt config:m68k:sun2os3.mh \Option-d
	config:m68k:sun2os3.mt config:m68k:sun2os4.mh config:m68k:sun2os4.mt \Option-d
	config:m68k:sun3os3.mh config:m68k:sun3os3.mt config:m68k:sun3os4.mh \Option-d
	config:m68k:sun3os4.mt config:m68k:vxworks68.mt config:m88k:delta88.mh \Option-d
	config:m88k:delta88.mt config:m88k:delta88v4.mh \Option-d
	config:m88k:delta88v4.mt config:m88k:m88k.mh config:m88k:m88k.mt \Option-d
	config:mips:bigmips.mt config:mips:decstation.mh \Option-d
	config:mips:decstation.mt config:mips:idt.mt config:mips:idtl.mt \Option-d
	config:mips:irix3.mh config:mips:irix3.mt config:mips:irix4.mh \Option-d
	config:mips:irix5.mh config:mips:irix5.mt \Option-d
	config:mips:littlemips.mh config:mips:littlemips.mt \Option-d
	config:mips:mipsm3.mh config:mips:mipsm3.mt \Option-d
	config:mips:news-mips.mh config:mips:riscos.mh \Option-d
	config:none:none.mh config:none:none.mt config:ns32k:merlin.mh \Option-d
	config:ns32k:merlin.mt config:ns32k:ns32km3.mh config:ns32k:ns32km3.mt \Option-d
	config:ns32k:umax.mh config:ns32k:umax.mt \Option-d
	config:pa:hppabsd.mh config:pa:hppabsd.mt config:pa:hppahpux.mh \Option-d
	config:pa:hppahpux.mt config:pyr:pyramid.mh config:pyr:pyramid.mt \Option-d
	config:romp:rtbsd.mh config:rs6000:rs6000.mh config:rs6000:rs6000.mt \Option-d
	config:sh:sh.mt config:sparc:sparc-em.mt config:sparc:sparclite.mt \Option-d
	config:sparc:sparclynx.mh config:sparc:sparclynx.mt \Option-d
	config:sparc:sun4os4.mh config:sparc:sun4os4.mt \Option-d
	config:sparc:sun4sol2.mh config:sparc:sun4sol2.mt \Option-d
	config:sparc:vxsparc.mt config:tahoe:tahoe.mh config:tahoe:tahoe.mt \Option-d
	config:vax:vax.mt config:vax:vaxbsd.mh config:vax:vaxult.mh \Option-d
	config:vax:vaxult2.mh config:z8k:z8ksim.mt

# All source files that go into linking GDB.
# Links made at configuration time should not be specified here, since
# SFILES is used in building the distribution archive.

SFILES = "{s}"blockframe.c "{s}"breakpoint.c "{s}"buildsym.c "{s}"c-exp.y "{s}"c-lang.c \Option-d
	"{s}"c-typeprint.c "{s}"c-valprint.c "{s}"ch-exp.y "{s}"ch-lang.c "{s}"ch-typeprint.c \Option-d
	"{s}"ch-valprint.c "{s}"coffread.c "{s}"command.c "{s}"complaints.c "{s}"corefile.c "{s}"cp-valprint.c \Option-d
	"{s}"dbxread.c "{s}"demangle.c "{s}"dwarfread.c "{s}"elfread.c "{s}"environ.c "{s}"eval.c "{s}"expprint.c \Option-d
	"{s}"findvar.c "{s}"gdbtypes.c "{s}"infcmd.c "{s}"inflow.c "{s}"infrun.c "{s}"language.c \Option-d
	"{s}"m2-exp.y "{s}"m2-lang.c "{s}"m2-typeprint.c "{s}"m2-valprint.c "{s}"main.c "{s}"maint.c \Option-d
	"{s}"mem-break.c "{s}"minsyms.c "{s}"mipsread.c "{s}"nlmread.c "{s}"objfiles.c "{s}"parse.c \Option-d
	"{s}"printcmd.c "{s}"remote.c "{s}"source.c "{s}"stabsread.c "{s}"stack.c "{s}"symfile.c "{s}"symmisc.c \Option-d
	"{s}"symtab.c "{s}"target.c "{s}"thread.c "{s}"typeprint.c "{s}"utils.c "{s}"valarith.c "{s}"valops.c \Option-d
	"{s}"valprint.c "{s}"values.c "{s}"serial.c "{s}"ser-unix.c "{s}"mdebugread.c

# Files that are not source code, but need to go into
# gdb-{VERSION}.tar.Z.

NONSRC = "{s}"Makefile.in configure.in ChangeLog ChangeLog-9091 \Option-d
	ChangeLog-92 ChangeLog-93 ChangeLog-3.x \Option-d
	gdb.1 refcard.ps README TODO TAGS NEWS \Option-d
	Projects .gdbinit COPYING {YYFILES} "{s}"copying.c copying.awk \Option-d
	saber.suppress "{s}"standalone.c "{s}"stuff.c "{s}"kdb-start.c gcc.patch \Option-d
	nindy-share:Makefile nindy-share:VERSION nindy-share:README \Option-d
	vx-share:README 29k-share:README config:convex:Convex.notes \Option-d
	"{s}"i386-nlmstub.c

# All source files that lint should look at
LINTFILES = {SFILES} {YYFILES} "{s}"init.c

# Any additional files specified on these lines should also be added to
# the NONSRC definition, so they go in the tar files.
SFILES_STAND = {SFILES} "{s}"standalone.c
SFILES_KGDB  = {SFILES} "{s}"stuff.c "{s}"kdb-start.c

# "system" headers.  Using these in dependencies is a rather personal
# choice.  By default, we do not depend on these files.
getopt_h =	"{INCLUDE_DIR}":getopt.h
#ieee-float_h =	"{INCLUDE_DIR}":ieee-float.h
ieee_float_h = 
bfd_h =		:"{BFD_DIR}":bfd.h
wait_h =	"{INCLUDE_DIR}":wait.h
dis_asm_h =	"{INCLUDE_DIR}":dis-asm.h 

dcache_h = "{s}"dcache.h
remote_utils_h = {dcache_h} "{s}"serial.h "{s}"target.h "{s}"remote-utils.h "{s}"remote-sim.h

readline_headers =

udiheaders = \Option-d
	"{s}"29k-share:udi:udiproc.h \Option-d
	"{s}"29k-share:udi:udiphcfg.h \Option-d
	"{s}"29k-share:udi:udiphunix.h \Option-d
	"{s}"29k-share:udi:udiptcfg.h \Option-d
	"{s}"29k-share:udi:udipt29k.h \Option-d
	"{s}"29k-share:udi:udisoc.h

gdbcore_h =	"{s}"gdbcore.h {bfd_h}

frame_h =	"{s}"frame.h
symtab_h =	"{s}"symtab.h
gdbtypes_h =	"{s}"gdbtypes.h
expression_h =	"{s}"expression.h
value_h =	"{s}"value.h {symtab_h} {gdbtypes_h} {expression_h}

breakpoint_h =	"{s}"breakpoint.h {frame_h} {value_h}

command_h =	"{s}"command.h
gdbcmd_h =	"{s}"gdbcmd.h {command_h}

defs_h =	"{s}"defs.h xm.h tm.h nm.h config.status

inferior_h =	"{s}"inferior.h {breakpoint_h}

# Header files that need to have srcdir added.  Note that in the cases
# where we use a macro like {gdbcmd_h}, things are carefully arranged
# so that each "{s}".h file is listed exactly once (M-x tags-search works
# wrong if TAGS has files twice).  Because this is tricky to get
# right, it is probably easiest just to list "{s}".h files here directly.

HFILES_NO_SRCDIR = "{s}"buildsym.h "{s}"call-cmds.h "{s}"coff-solib.h "{s}"defs.h "{s}"dst.h "{s}"environ.h \Option-d
	{gdbcmd_h} \Option-d
	{gdbcore_h} "{s}"gdb-stabs.h {inferior_h} "{s}"language.h "{s}"minimon.h "{s}"monitor.h \Option-d
	"{s}"objfiles.h "{s}"parser-defs.h "{s}"partial-stab.h "{s}"serial.h "{s}"signals.h "{s}"solib.h \Option-d
	"{s}"symfile.h "{s}"stabsread.h "{s}"target.h "{s}"terminal.h "{s}"typeprint.h "{s}"xcoffsolib.h \Option-d
	"{s}"c-lang.h "{s}"ch-lang.h "{s}"m2-lang.h "{s}"complaints.h "{s}"ns32k-opcode.h "{s}"valprint.h \Option-d
	"{s}"config:m68k:tm-m68k.h "{s}"config:pa:tm-hppa.h "{s}"config:i960:tm-i960.h \Option-d
	"{s}"config:sparc:tm-sparc.h "{s}"config:tm-lynx.h "{s}"config:tm-sunos.h \Option-d
	"{s}"config:tm-sysv4.h \Option-d
	"{s}"config:m68k:xm-m68k.h "{s}"config:sparc:xm-sparc.h \Option-d
	"{s}"config:xm-lynx.h "{s}"config:xm-sysv4.h \Option-d
	"{s}"config:vax:xm-vax.h "{s}"config:nm-m3.h "{s}"config:nm-trash.h \Option-d
	"{s}"29k-share:udi:udiids.h 29k-share:udi_soc "{o}"nindy-share:b.c.out.h \Option-d
	"{s}"nindy-share:block_io.h "{s}"nindy-share:coff.h \Option-d
	"{s}"nindy-share:env.h "{s}"nindy-share:stop.h \Option-d
	"{s}"vx-share:dbgRpcLib.h "{s}"vx-share:ptrace.h "{s}"vx-share:vxTypes.h \Option-d
	"{s}"vx-share:vxWorks.h "{s}"vx-share:wait.h "{s}"vx-share:xdr_ld.h \Option-d
	"{s}"vx-share:xdr_ptrace.h "{s}"vx-share:xdr_rdb.h "{s}"thread.h \Option-d
	"{s}"dcache.h "{s}"remote-utils.h "{s}"remote-sim.h "{s}"somsolib.h

# Header files that already have srcdir in them.

HFILES_WITH_SRCDIR = {udiheaders}


# GDB "info" files, which should be included in their entirety
INFOFILES = gdb.info\Option-x

REMOTE_EXAMPLES = "{s}"m68k-stub.c "{s}"i386-stub.c "{s}"sparc-stub.c rem-multi.shar

POSSLIBS = "{s}"regex.c "{s}"regex.h

# Subdirectories of gdb, which should be included in their entirety in
# gdb-xxx.tar.Z \Option-f 
TARDIRS = doc gdbserver sparclite

# {X,T,NAT}DEPFILES are something of a pain in that it's hard to
# default their values the way we do for SER_HARDWIRE; in the future
# maybe much of the stuff now in {X,T,NAT}DEPFILES will go into other
# variables analogous to SER_HARDWIRE which get defaulted in this
# Makefile.in

DEPFILES = {TDEPFILES} {XDEPFILES} {SER_HARDWIRE} {NATDEPFILES} {REMOTE_O}

SOURCES = {SFILES} {ALLDEPFILES} {YYFILES}
# Don't include YYFILES (\Option-x.tab.c) because we already include \Option-x.y in SFILES,
# and it's more useful to see it in the "{s}".y file.
TAGFILES_NO_SRCDIR = {SFILES} {HFILES_NO_SRCDIR} {ALLDEPFILES} \Option-d
	{ALLPARAM} {POSSLIBS}
TAGFILES_WITH_SRCDIR = {HFILES_WITH_SRCDIR}

TARFILES = {SFILES} {HFILES_NO_SRCDIR} {HFILES_WITH_SRCDIR} \Option-d
	{NONSRC} {ALLDEPFILES} {ALLCONFIG} \Option-d
	{ALLPARAM} {INFOFILES} {POSSLIBS} {REMOTE_EXAMPLES}


OBS =	"{o}"version.c.o "{o}"main.c.o "{o}"top.c.o "{o}"blockframe.c.o "{o}"breakpoint.c.o "{o}"findvar.c.o "{o}"stack.c.o "{o}"thread.c.o \Option-d
	"{o}"source.c.o "{o}"values.c.o "{o}"eval.c.o "{o}"valops.c.o "{o}"valarith.c.o "{o}"valprint.c.o "{o}"printcmd.c.o \Option-d
	"{o}"symtab.c.o "{o}"symfile.c.o "{o}"symmisc.c.o "{o}"infcmd.c.o "{o}"infrun.c.o "{o}"command.c.o \Option-d
	"{o}"utils.c.o "{o}"expprint.c.o "{o}"environ.c.o "{o}"gdbtypes.c.o "{o}"copying.c.o {DEPFILES} \Option-d
	"{o}"mem-break.c.o "{o}"target.c.o "{o}"parse.c.o "{o}"language.c.o {YYOBJ} "{o}"buildsym.c.o \Option-d
	"{o}"objfiles.c.o "{o}"minsyms.c.o "{o}"maint.c.o "{o}"demangle.c.o "{o}"dbxread.c.o "{o}"coffread.c.o "{o}"elfread.c.o \Option-d
	"{o}"dwarfread.c.o "{o}"mipsread.c.o "{o}"stabsread.c.o "{o}"corefile.c.o "{o}"c-lang.c.o "{o}"ch-lang.c.o "{o}"f-lang.c.o "{o}"m2-lang.c.o \Option-d
	"{o}"complaints.c.o "{o}"typeprint.c.o "{o}"c-typeprint.c.o "{o}"ch-typeprint.c.o "{o}"f-typeprint.c.o "{o}"m2-typeprint.c.o \Option-d
	"{o}"c-valprint.c.o "{o}"cp-valprint.c.o "{o}"ch-valprint.c.o "{o}"f-valprint.c.o "{o}"m2-valprint.c.o "{o}"nlmread.c.o \Option-d
	"{o}"serial.c.o "{o}"mdebugread.c.o "{o}"annotate.c.o \Option-d
	"{o}"exec.c.o

TSOBS =

NTSOBS = "{o}"standalone.c.o

TSSTART = "{o}":lib:crt0.c.o

NTSSTART = "{o}"kdb-start.c.o

SUBDIRS = doc testsuite

# For now, shortcut the "configure GDB for fewer languages" stuff.
YYFILES = "{o}"c-exp.tab.c "{o}"m2-exp.tab.c "{o}"ch-exp.tab.c
YYOBJ = "{o}"c-exp.tab.c.o "{o}"m2-exp.tab.c.o "{o}"ch-exp.tab.c.o "{o}"f-exp.tab.c.o

# Prevent Sun make from putting in the machine type.  Setting
# TARGET_ARCH to nothing works for SunOS 3, 4.0, but not for 4.1.
# .c.o \Option-f 
#	{CC} -c {INTERNAL_CFLAGS} $<

all \Option-f  gdb SiowGDB
#	@{MAKE} {FLAGS_TO_PASS} DO=all "DODIRS=`echo {SUBDIRS} | sed 's:testsuite::'`" subdir_do

# The check target can not use subdir_do, because subdir_do does not
# use TARGET_FLAGS_TO_PASS.
check \Option-f  force
	@if [ -f testsuite:Makefile ]; then \Option-d
	  rootme=`pwd`; export rootme; \Option-d
	  cd testsuite; \Option-d
	  {MAKE} {TARGET_FLAGS_TO_PASS} check; \Option-d
	else true; fi

info dvi install-info clean-info \Option-f  force
	@{MAKE} {FLAGS_TO_PASS} DO=$@ "DODIRS={SUBDIRS}" subdir_do

gdb.z \Option-f gdb.1
	nroff -man "{s}"gdb.1 | col -b > gdb.t 
	pack gdb.t ; rm -f gdb.t
	Rename -y gdb.t.z gdb.z

# Traditionally "install" depends on "all".  But it may be useful
# not to; for example, if the user has made some trivial change to a 
# source file and doesn't care about rebuilding or just wants to save the
# time it takes for make to check that all is up to date.
# install-only is intended to address that need.

install \Option-f  all install-only

install-only \Option-f  
	{INSTALL} gdb "{bindir}":gdb
	{INSTALL} SiowGDB "{bindir}":SiowGDB
# this one doesn't work very wellz
#	{INSTALL} MacGDB "{bindir}":MacGDB

uninstall \Option-f  force
	Delete -i -y {bindir}:gdb {man1dir}:gdb.1
	@{MAKE} DO=uninstall "DODIRS={SUBDIRS}" {FLAGS_TO_PASS} subdir_do 

# We do this by grepping through sources.  If that turns out to be too slow,
# maybe we could just require every "{o}".c.o file to have an initialization routine
# of a given name (remote-udi.o -> _initialize_remote_udi, etc.).
#
# Formatting conventions:   The name of the _initialize_* routines must start
# in column zero, and must not be inside #if.

# FIXME: the last sed substitution 's/^://' should really be 's/^{o}//',
# but only some versions of Make (like 4.0d2, but NOT 4.0b6) will make
# the substitution.

"{o}"init.c \Option-f  {OBS} {TSOBS}
	If "{o}" =~ /:/
		Echo objdir is :
	Else
		Echo Aack, objdir is not :
		Exit -5
	End If
	Echo Making "{o}"init.c
	Delete -i -y "{o}"init.c init.c-tmp
	Echo '/* Do not modify this file.  */' >init.c-tmp
	Echo '/* It is created automatically by the Makefile.  */'>>init.c-tmp
	Echo 'void initialize_all_files () ' `open-brace` >>init.c-tmp
	For i in {OBS} {TSOBS}
	  set filename "`Echo {i} | sed \Option-d
	    -e '/^Onindy.c.o/d' \Option-d
	    -e '/^nindy.c.o/d' \Option-d
	    -e '/ttyflush.c.o/d' \Option-d
	    -e '/xdr_ld.c.o/d' \Option-d
	    -e '/xdr_ptrace.c.o/d' \Option-d
	    -e '/xdr_rdb.c.o/d' \Option-d
	    -e '/udr.c.o/d' \Option-d
	    -e '/udip2soc.c.o/d' \Option-d
	    -e '/udi2go32.c.o/d' \Option-d
	    -e '/version.c.o/d' \Option-d
	    -e '/[a-z0-9A-Z_]*-exp.tab.c.o/d' \Option-d
	    -e 's/\.gc\.o/.c/' \Option-d
	    -e 's/\.c\.o/.c/' \Option-d
	    -e 's/^://'`"
	  If "{filename}" != ""
	    sed <"{s}""{filename}" >>init.c-tmp -n \Option-d
	    -e '/^_initialize_[a-z_0-9A-Z]* *(/s/^\([a-z_0-9A-Z]*\).*/  {extern void \1 (); \1 ();}/p'
	  End if
	End For
	Echo '}' >>init.c-tmp
	Rename -y init.c-tmp "{o}"init.c


LOADLIBES = {EXTRALIBS}

# Removing the old gdb first works better if it is running, at least on SunOS.
gdb \Option-f  {OBS} {TSOBS} {ADD_DEPS} {CDEPS} "{o}"init.c.o "{o}"Version.r
	Delete -i -y gdb
	Rez -rd -o gdb "{o}"Version.r -append
	Link {LDFLAGS} -o gdb \Option-d
	  "{o}"init.c.o {OBS} {TSOBS} {ADD_FILES} {CLIBS} {LOADLIBES}

saber_gdb \Option-f  {SFILES} {DEPFILES} "{s}"copying.c "{s}"version.c
	#setopt load_flags {CFLAGS} {BFD_CFLAGS} -d HOST_SYS=SUN4_SYS
	#load :init.c {SFILES}
	#unload "{s}"c-exp.y "{s}"m2-exp.y "{s}"ch-exp.y
	#unload vx-share:\Option-x.h
	#unload nindy-share:[A-Z]\Option-x
	#load c-exp.tab.c m2-exp.tab.c ch-exp.tab.c
	#load "{s}"copying.c "{s}"version.c
	#load ::opcodes:libopcodes.o
	#load ::libiberty:libiberty.o
	#load ::bfd:libbfd.o
	#load ::readline:libreadline.o
	#load ::mmalloc:libmmalloc.o
	#load -ltermcap 
	#load `echo " "{DEPFILES} | sed -e 's:\.o:.c:g' -e 's, , ::,g'`
	echo "Load "{s}".c corresponding to \Option-f " {DEPFILES}

# Version of GDB that uses the SIOW library.

SiowGDB \Option-f  {OBS} {TSOBS} {ADD_DEPS} {CDEPS} "{o}"init.c.o "{o}"Version.r
	Delete -i -y SiowGDB
	Rez -o SiowGDB {RIncludes}siow.r -append \Option-d
		-d __kPrefSize=5000 -d __kMinSize=2000
	Rez -rd -o SiowGDB "{o}"Version.r -append
	Link -d -model far -o SiowGDB -t 'APPL' -c 'gdb ' \Option-d
	  "{o}"init.c.o {OBS} {TSOBS} {ADD_FILES} {CLIBS} \Option-d
	  "{CLibraries}"StdClib.o \Option-d
	  "{Libraries}"SIOW.o \Option-d
	  "{Libraries}"Runtime.o \Option-d
	  "{Libraries}"Interface.o \Option-d
	  "{Libraries}"ToolLibs.o

# Version of GDB that uses a real library.

MacGDB \Option-f  {OBS} {TSOBS} {ADD_DEPS} {CDEPS} "{o}"init.c.o "{o}"Version.r
	Delete -i -y MacGDB
	Rez -rd -o MacGDB "{s}"macgdb.r -append
	Rez -rd -o MacGDB "{o}"Version.r -append
	Link -d -model far -o MacGDB -t 'APPL' -c 'gdb ' \Option-d
	  "{o}"init.c.o {OBS} {TSOBS} {ADD_FILES} {CLIBS} {LOADLIBES}

"{o}"Version.r \Option-f "{o}"version-stamp

"{o}"version-stamp \Option-f Makefile
	Delete -i -y "{o}"version.new "{o}"version-stamp
	Set major 0
	Set minor 0
	Set release 0
	Echo '/* Version resources. */'			 > "{o}"version.new
	Echo '#include "SysTypes.r"'			>> "{o}"version.new
	Echo ''						>> "{o}"version.new
	Echo "resource 'vers' (1) " `open-brace`	>> "{o}"version.new
	Echo "	{major},"				>> "{o}"version.new
	Echo "	{minor},"				>> "{o}"version.new
	Echo "	{release},"				>> "{o}"version.new
	Echo '	0,'					>> "{o}"version.new
	Echo '	verUs,'					>> "{o}"version.new
	Echo '	"{VERSION}",'				>> "{o}"version.new
	Echo '	"{VERSION} (c) 1986-95 FSF, Inc. "'	>> "{o}"version.new
	Echo '};'					>> "{o}"version.new
	Echo ''						>> "{o}"version.new
	Echo "resource 'vers' (2, purgeable) " `open-brace`  >> "{o}"version.new
	Echo "	{major},"				>> "{o}"version.new
	Echo "	{minor},"				>> "{o}"version.new
	Echo "	{release},"				>> "{o}"version.new
	Echo '	0,'					>> "{o}"version.new
	Echo '	verUs,'					>> "{o}"version.new
	Echo '	"{VERSION}",'				>> "{o}"version.new
	Echo '	"GDB for MPW"'			>> "{o}"version.new
	Echo '};'					>> "{o}"version.new
	MoveIfChange "{o}"version.new "{o}"Version.r
	Echo ' ' > "{o}"version-stamp

# This is useful when debugging GDB, because some Unix's don't let you run GDB
# on itself without copying the executable.  So "make gdb1" will make
# gdb and put a copy in gdb1, and you can run it with "gdb gdb1".
# Removing gdb1 before the copy is the right thing if gdb1 is open
# in another process.
gdb1 \Option-f  gdb
	Delete -y gdb1
	Duplicate -d -y gdb gdb1

config.status \Option-f 
	@echo "You must configure gdb.  Look at the README file for details."
	@false

### fixme - this can't be right.
# This checks the configure.in file versus the config: directory.
config-check \Option-f  config-check-hosts config-check-targets
config-check-hosts \Option-f 
	grep gdb_host= "{s}"configure.in | \Option-d
		sed -e 's:.\Option-xgdb_host=::' -e 's: ;;$$:.mh:' | sort -u >HOSTconf.o
	(cd "{s}"config; ls \Option-x.mh) >HOSTdir.o
	diff -u "{o}"HOSTconf.c.o "{o}"HOSTdir.c.o

### fixme - nor can this.
config-check-targets \Option-f 
	grep gdb_target= "{s}"configure.in | \Option-d
		sed -e 's:.\Option-xgdb_target=::' -e 's: ;;$$:.mh:' | sort -u >TARGconf.o
	(cd "{s}"config; ls \Option-x.mt) >TARGdir.o
	diff -u "{o}"HOSTconf.c.o "{o}"HOSTdir.c.o

# FIXME. These are not generated by "make depend" because they only are there
# for some machines.
# But these rules don't do what we want; we want to hack the "{o}"foo.c.o \Option-f  "{s}"tm.h
# dependency to do the right thing.
tm-isi.h "{s}"tm-sun3.h "{s}"tm-news.h "{s}"tm-hp300bsd.h "{s}"tm-altos.h \Option-f  "{s}"tm-m68k.h
tm-hp300hpux.h "{s}"tm-sun2.h "{s}"tm-3b1.h \Option-f  "{s}"tm-m68k.h
xm-news1000.h \Option-f  "{s}"xm-news.h
xm-i386-sv32.h \Option-f  "{s}"xm-i386.h
tm-i386gas.h \Option-f  "{s}"tm-i386.h
xm-sun4os4.h \Option-f  "{s}"xm-sparc.h
tm-sun4os4.h \Option-f  "{s}"tm-sparc.h
xm-vaxult.h \Option-f  "{s}"xm-vax.h
xm-vaxbsd.h \Option-f  "{s}"xm-vax.h

# Put the proper machine-specific files first, so M-. on a machine
# specific routine gets the one for the correct machine.  (FIXME \Option-f  those
# files go in twice; we should be removing them from the main list).

# TAGS depends on all the files that go into it so you can rebuild TAGS
# with `make TAGS' and not have to say `rm TAGS' first.

TAGS \Option-f  {TAGFILES_NO_SRCDIR} {TAGFILES_WITH_SRCDIR}
	@echo Making TAGS
	@etags `find "{srcdir}"config \( -name {TM_FILE} \Option-d
		o -name {XM_FILE} \Option-d
		o -name {NAT_FILE} \) -print` \Option-d
	`(for i in {DEPFILES} {TAGFILES_NO_SRCDIR}; do \Option-d
		echo "{srcdir}"$$i ; \Option-d
	done ; for i in {TAGFILES_WITH_SRCDIR}; do \Option-d
		echo $$i ; \Option-d
	done) | sed -e 's:\.o$$:\.c:'`

# Making distributions of GDB and friends.

# Make a tar file containing the GDB directory of the distribution.
gdb.tar.Z \Option-f  force_update
	{MAKE} {MFLAGS} -f "{s}"Makefile.in setup-to-dist
	{MAKE} {MFLAGS} -f "{s}"Makefile.in gdb-{VERSION}.tar.Z

# Make a directory `proto-gdb.dir' that contains an image of the GDB
# directory of the distribution, built up with symlinks.  Note that this
# make target is not directly referenced by any other rules in this makefile,
# it is referenced by the makefile in the parent directory.
make-proto-gdb.dir \Option-f  force_update 
	{MAKE} {MFLAGS} -f "{s}"Makefile.in setup-to-dist
	{MAKE} {MFLAGS} -f Makefile make-proto-gdb-1

# Set up the GDB source directory for distribution, by building all files that
# are products of other files.
setup-to-dist \Option-f  force_update
	::configure none
	(cd doc; {MAKE} {MFLAGS} GDBvn.texi)
	{MAKE} {MFLAGS} gdb.info
	{MAKE} {MFLAGS} refcard.ps

# Build a tar file from a proto-gdb.dir.
gdb-{VERSION}.tar.Z \Option-f  force_update
	Delete -y gdb.tar gdb-{VERSION}.tar.Z
	{MAKE} {MFLAGS} -f Makefile make-proto-gdb-1
	# ln -s proto-gdb.dir {DIST}
	tar chf - {DIST} | compress >gdb-{VERSION}.tar.Z
	Delete -y -rf {DIST} proto-gdb.dir

# Build a proto-gdb.dir after GDB has been set up for distribution.
# This stuff must be run in `Makefile', not `"{s}"Makefile.in`; we use the makefile
# built in the setup-to-dist process, since it defines things like ALLCONFIG
# and ALLDEPFILES, that we need.
make-proto-gdb-1 \Option-f  {TARFILES} {TARDIRS} gdb.info
	Delete -y -rf proto-gdb.dir
	mkdir proto-gdb.dir
	rootme=`pwd`: ; export rootme ; \Option-d
	  for i in `echo {TARDIRS}`; do \Option-d
	    (cd proto-gdb.dir ; \Option-d
	    mkdir -p $$i; \Option-d
	    cd $$i; \Option-d
	    # ln -s ${rootme}:$$i:\Option-x .; \Option-d
	    Delete -y -rf SCCS CVS CVS.adm RCS config.status; \Option-d
	    if test -f "{s}"Makefile.in; then rm -f Makefile; else true; fi;); \Option-d
	  done ; \Option-d
	  for i in `echo {TARFILES}`; do \Option-d
	    (cd proto-gdb.dir ; \Option-d
	    dir=`dirname $$i`; \Option-d
	    if test -d $$dir; then true; else mkdir -p $$dir; fi; \Option-d
	    # ln -s ${rootme}:$$i $$i;); \Option-d
	  done
	chmod og=u `find . -print`

# Build a proto-testsuite.dir.
make-proto-testsuite.dir \Option-f  force_update
	Delete -y -rf proto-testsuite.dir
	mkdir proto-testsuite.dir
	rootme=`pwd`: ; export rootme ; \Option-d
	  for i in `find testsuite -type f -print`; do \Option-d
	    (cd proto-testsuite.dir ; \Option-d
	    dir=`dirname $$i`; \Option-d
	    if test -d $$dir; then true; else mkdir -p $$dir; fi; \Option-d
	    # ln -s ${rootme}:$$i $$i;); \Option-d
	  done
	find proto-testsuite.dir -name Makefile -exec rm {} \;
	find proto-testsuite.dir -name config.status -exec rm {} \;

clean mostlyclean \Option-f 
	@{MAKE} {FLAGS_TO_PASS} DO=clean "DODIRS={SUBDIRS}" subdir_do 
	Delete -y \Option-x.o {ADD_FILES} \Option-x~ "{s}"init.c-tmp
	Delete -y "{s}"init.c "{s}"version.c
	Delete -y gdb core "{s}"make.log
	Delete -y gdb[0-9]

# This used to depend on c-exp.tab.c m2-exp.tab.c ch-exp.tab.c TAGS
# I believe this is wrong; the makefile standards for distclean just
# describe removing files; the only sort of "re-create a distribution"
# functionality described is if the distributed files are unmodified.
distclean \Option-f  clean
	@{MAKE} {FLAGS_TO_PASS} DO=distclean "DODIRS={SUBDIRS}" subdir_do 
	Delete -y "{s}"nm.h "{s}"tm.h "{s}"xm.h config.status
	Delete -y "{o}"y.c.output yacc.acts yacc.tmp y.tab.h
	Delete -y Makefile

realclean \Option-f  clean
	@{MAKE} {FLAGS_TO_PASS} DO=realclean "DODIRS={SUBDIRS}" subdir_do
	Delete -y "{o}"c-exp.tab.c m2-exp.tab.c ch-exp.tab.c TAGS {INFOFILES}
	Delete -y "{s}"nm.h "{s}"tm.h "{s}"xm.h config.status
	Delete -y "{o}"y.c.output yacc.acts yacc.tmp
	Delete -y Makefile

subdir_do \Option-f  force
	@for i in {DODIRS}; do \Option-d
		if [ -f :$$i:Makefile ] ; then \Option-d
			if (cd :$$i; \Option-d
				{MAKE} {FLAGS_TO_PASS} {DO}) ; then true ; \Option-d
			else exit 1 ; fi ; \Option-d
		else true ; fi ; \Option-d
	done

#Makefile \Option-f  "{s}"Makefile.in {host_makefile_frag} {target_makefile_frag}
#	{SHELL} config.status

# Documentation!
# GDB QUICK REFERENCE (TeX dvi file, CM fonts)
refcard.dvi \Option-f 
	( cd doc; {MAKE} refcard.dvi {FLAGS_TO_PASS} )
	Rename -y doc:refcard.dvi .

# GDB QUICK REFERENCE (PostScript output, common PS fonts)
refcard.ps \Option-f 
	( cd doc; {MAKE} refcard.ps {FLAGS_TO_PASS} )
	Rename -y doc:refcard.ps .

# Make "{s}"copying.c from COPYING
copying.c \Option-f  COPYING copying.awk
	awk -f "{srcdir}"copying.awk < "{srcdir}"COPYING > "{s}"copying.c

"{o}"version.c \Option-f  Makefile
	echo 'char *version = "{VERSION}";' >"{o}"version.c
	echo 'char *host_name = "{host_alias}";' >> "{o}"version.c
	echo 'char *target_name = "{target_alias}";' >> "{o}"version.c

# c-exp.tab.c is generated in objdir from "{s}"c-exp.y if it doesn't exist
# in srcdir, then compiled in objdir to c-exp.tab.c.o.

# If we said c-exp.tab.c rather than :c-exp.tab.c some makes
# would sometimes re-write it into "{srcdir}"c-exp.tab.c.

# Remove bogus decls for malloc:realloc:free which conflict with everything
# else.
"{o}"c-exp.tab.c.o \Option-f  "{o}"c-exp.tab.c

"{o}"c-exp.tab.c \Option-f  "{s}"c-exp.y
	{YACC} {YFLAGS} "{s}"c-exp.y
	sed -e ':extern.*malloc:d' \Option-d
	    -e ':extern.*realloc:d' \Option-d
	    -e ':extern.*free:d' \Option-d
	    -e ':include.*malloc.h:d' \Option-d
	    -e 's:malloc:xmalloc:g' \Option-d
	    -e 's:realloc:xrealloc:g' \Option-d
	  < y.tab.c > c-exp.new
	Delete -y y.tab.c
	Rename -y c-exp.new "{o}"c-exp.tab.c

"{o}"f-exp.tab.c.o \Option-f  "{o}"f-exp.tab.c

"{o}"f-exp.tab.c \Option-f  "{s}"f-exp.y
	{YACC} {YFLAGS} "{s}"f-exp.y
	sed -e ':extern.*malloc:d' \Option-d
	    -e ':extern.*realloc:d' \Option-d
	    -e ':extern.*free:d' \Option-d
	    -e ':include.*malloc.h:d' \Option-d
	    -e 's:malloc:xmalloc:g' \Option-d
	    -e 's:realloc:xrealloc:g' \Option-d
	  < y.tab.c > f-exp.new
	Delete -y y.tab.c
	Rename -y f-exp.new "{o}"f-exp.tab.c

# ch-exp.tab.c is generated in objdir from "{s}"ch-exp.y if it doesn't exist
# in srcdir, then compiled in objdir to ch-exp.tab.c.o.
# Remove bogus decls for malloc:realloc:free which conflict with everything
# else.
"{o}"ch-exp.tab.c.o \Option-f  "{o}"ch-exp.tab.c

"{o}"ch-exp.tab.c \Option-f  "{s}"ch-exp.y
	{YACC} {YFLAGS} "{s}"ch-exp.y
	sed -e ':extern.*malloc:d' \Option-d
	    -e ':extern.*realloc:d' \Option-d
	    -e ':extern.*free:d' \Option-d
	    -e ':include.*malloc.h:d' \Option-d
	    -e 's:malloc:xmalloc:g' \Option-d
	    -e 's:realloc:xrealloc:g' \Option-d
	  < y.tab.c > ch-exp.new
	Delete -y y.tab.c
	Rename -y ch-exp.new "{o}"ch-exp.tab.c

# m2-exp.tab.c is generated in objdir from "{s}"m2-exp.y if it doesn't exist
# in srcdir, then compiled in objdir to m2-exp.tab.c.o.
# Remove bogus decls for malloc:realloc:free which conflict with everything
# else.
"{o}"m2-exp.tab.c.o \Option-f  "{o}"m2-exp.tab.c

"{o}"m2-exp.tab.c \Option-f  "{s}"m2-exp.y
	{YACC} {YFLAGS} "{s}"m2-exp.y
	sed -e ':extern.*malloc:d' \Option-d
	    -e ':extern.*realloc:d' \Option-d
	    -e ':extern.*free:d' \Option-d
	    -e ':include.*malloc.h:d' \Option-d
	    -e 's:malloc:xmalloc:g' \Option-d
	    -e 's:realloc:xrealloc:g' \Option-d
	  < y.tab.c > m2-exp.new
	Delete -y y.tab.c
	Rename -y m2-exp.new "{o}"m2-exp.tab.c

# These files are updated atomically, so make never has to remove them
# .PRECIOUS \Option-f  m2-exp.tab.c ch-exp.tab.c c-exp.tab.c

lint \Option-f  {LINTFILES}
	{LINT} {INCLUDE_CFLAGS} {LINTFLAGS} {LINTFILES} \Option-d
	   `echo {DEPFILES} | sed 's:\.o :\.c :g'

gdb.cxref \Option-f  {SFILES}
	cxref -i : {SFILES} >"{s}"gdb.cxref

#force_update \Option-f 

# GNU Make has an annoying habit of putting \Option-xall\Option-x the Makefile variables
# into the environment, unless you include this target as a circumvention.
# Rumor is that this will be fixed (and this target can be removed)
# in GNU Make 4.0.
# .NOEXPORT \Option-f 

# GNU Make 3.63 has a different problem \Option-f  it keeps tacking command line
# overrides onto the definition of {MAKE}.  This variable setting
# will remove them.
MAKEOVERRIDES=

## This is ugly, but I don't want GNU make to put these variables in
## the environment.  Older makes will see this as a set of targets
## with no dependencies and no actions.
#unexport CHILLFLAGS CHILL_LIB CHILL_FOR_TARGET  \Option-f 

# These are things from config:\Option-x:\Option-x.m? fragments.  There is no good reason
# why they are separate from the lists of files above.



"{o}"udip2soc.c.o \Option-f  "{s}"29k-share:udi:udip2soc.c {udiheaders}
	{CC} {INTERNAL_CFLAGS} "{s}"29k-share:udi:udip2soc.c -o "{o}"soc.c.o

"{o}"udi2go32.c.o \Option-f  "{s}"29k-share:udi:udi2go32.c {udiheaders}
	{CC} {INTERNAL_CFLAGS} "{s}"29k-share:udi:udi2go32.c -o "{o}".c.o

"{o}"udr.c.o \Option-f  "{s}"29k-share:udi:udr.c {udiheaders} 
	{CC} {INTERNAL_CFLAGS} "{s}"29k-share:udi:udr.c -o "{o}"udr.c.o

"{o}"a29k-tdep.c.o \Option-f  "{s}"a29k-tdep.c {gdbcmd_h} {gdbcore_h} {inferior_h} {defs_h}
"{o}"a68v-nat.c.o \Option-f  "{s}"a68v-nat.c {defs_h} {gdbcore_h} {inferior_h}

"{o}"alpha-nat.c.o \Option-f  "{s}"alpha-nat.c {defs_h} {gdbcore_h} {inferior_h} "{s}"target.h

"{o}"alpha-tdep.c.o \Option-f  "{s}"alpha-tdep.c {defs_h} {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h} {symtab_h} {dis_asm_h}

"{o}"altos-xdep.c.o \Option-f  "{s}"altos-xdep.c {defs_h} {gdbcore_h} {inferior_h}

"{o}"annotate.c.o \Option-f  "{s}"annotate.c

"{o}"arm-tdep.c.o \Option-f  "{s}"arm-tdep.c "{s}"{OP_INCLUDE}:arm.h {defs_h} {symtab_h}

"{o}"blockframe.c.o \Option-f  "{s}"blockframe.c {defs_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"objfiles.h "{s}"symfile.h "{s}"target.h

"{o}"breakpoint.c.o \Option-f  "{s}"breakpoint.c {defs_h} {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"language.h "{s}"target.h "{s}"thread.h

"{o}"buildsym.c.o \Option-f  "{s}"buildsym.c {bfd_h} "{s}"buildsym.h "{s}"complaints.h {defs_h} \Option-d
	"{s}"objfiles.h "{s}"symfile.h {symtab_h}

"{o}"c-lang.c.o \Option-f  "{s}"c-lang.c "{s}"c-lang.h {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h "{s}"parser-defs.h {symtab_h}

"{o}"c-typeprint.c.o \Option-f  "{s}"c-typeprint.c "{s}"c-lang.h {defs_h} {expression_h} \Option-d
	{gdbcmd_h} {gdbcore_h} {gdbtypes_h} "{s}"language.h {symtab_h} "{s}"target.h \Option-d
	"{s}"typeprint.h {value_h}

"{o}"c-valprint.c.o \Option-f  "{s}"c-valprint.c {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h {symtab_h} "{s}"valprint.h {value_h}

"{o}"ch-lang.c.o \Option-f  "{s}"ch-lang.c "{s}"ch-lang.h {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h "{s}"parser-defs.h {symtab_h}

"{o}"ch-typeprint.c.o \Option-f  "{s}"ch-typeprint.c "{s}"ch-lang.h {defs_h} {expression_h} \Option-d
	{gdbcmd_h} {gdbcore_h} {gdbtypes_h} "{s}"language.h {symtab_h} \Option-d
	"{s}"target.h {value_h} "{s}"typeprint.h

"{o}"ch-valprint.c.o \Option-f  "{s}"ch-valprint.c {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h {symtab_h} "{s}"valprint.h {value_h} "{s}"c-lang.h

"{o}"coff-solib.c.o \Option-f  "{s}"coff-solib.c {defs_h}

"{o}"coffread.c.o \Option-f  "{s}"coffread.c {bfd_h} {breakpoint_h} "{s}"buildsym.h \Option-d
	"{s}"complaints.h {defs_h} {expression_h} {gdbtypes_h} "{s}"objfiles.h \Option-d
	"{s}"symfile.h {symtab_h} "{s}"gdb-stabs.h "{s}"stabsread.h

"{o}"command.c.o \Option-f  "{s}"command.c {defs_h} {expression_h} {gdbcmd_h} \Option-d
	{gdbtypes_h} {symtab_h} {value_h}

"{o}"complaints.c.o \Option-f  "{s}"complaints.c "{s}"complaints.h {defs_h} {gdbcmd_h}

"{o}"convex-tdep.c.o \Option-f  "{s}"convex-tdep.c {wait_h} {defs_h} {gdbcmd_h} \Option-d
	{gdbcore_h} {inferior_h}

"{o}"convex-xdep.c.o \Option-f  "{s}"convex-xdep.c {defs_h} {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h}

"{o}"core-svr4.c.o \Option-f  "{s}"core-svr4.c {command_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"target.h

"{o}"corefile.c.o \Option-f  "{s}"corefile.c {dis_asm_h} {defs_h} {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"target.h "{s}"language.h

"{o}"coredep.c.o \Option-f  "{s}"coredep.c {defs_h} {gdbcore_h} {value_h}

"{o}"corelow.c.o \Option-f  "{s}"corelow.c {command_h} {defs_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"target.h "{s}"thread.h

"{o}"cp-valprint.c.o \Option-f  "{s}"cp-valprint.c {defs_h} {expression_h} {gdbcmd_h} \Option-d
	{gdbtypes_h} {symtab_h} {value_h}

"{o}"dcache.c.o \Option-f  "{s}"dcache.c {dcache_h}

"{o}"dbxread.c.o \Option-f  "{s}"dbxread.c {breakpoint_h} "{s}"buildsym.h {command_h} \Option-d
	"{s}"complaints.h {defs_h} {expression_h} "{s}"gdb-stabs.h {gdbcore_h} \Option-d
	{gdbtypes_h} "{s}"language.h "{s}"objfiles.h "{s}"partial-stab.h "{s}"stabsread.h \Option-d
	"{s}"symfile.h {symtab_h} "{s}"target.h

"{o}"dcache.c.o \Option-f  "{s}"dcache.c {dcache_h}

"{o}"delta68-nat.c.o \Option-f  "{s}"delta68-nat.c {defs_h}

"{o}"demangle.c.o \Option-f  "{s}"demangle.c {defs_h} {gdbcmd_h}

"{o}"dwarfread.c.o \Option-f  "{s}"dwarfread.c {bfd_h} "{s}"buildsym.h "{s}"complaints.h {defs_h} \Option-d
	{expression_h} {gdbtypes_h} "{s}"language.h "{s}"objfiles.h "{s}"symfile.h \Option-d
	{symtab_h}

"{o}"elfread.c.o \Option-f  "{s}"elfread.c {bfd_h} "{s}"buildsym.h "{s}"complaints.h {defs_h} \Option-d
	"{s}"gdb-stabs.h "{s}"objfiles.h "{s}"symfile.h {symtab_h}

"{o}"environ.c.o \Option-f  "{s}"environ.c {defs_h} "{s}"environ.h {gdbcore_h}

"{o}"eval.c.o \Option-f  "{s}"eval.c {bfd_h} {defs_h} {expression_h} {frame_h} \Option-d
	{gdbtypes_h} "{s}"language.h {symtab_h} "{s}"target.h {value_h}

"{o}"exec.c.o \Option-f  "{s}"exec.c {defs_h} {gdbcmd_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"target.h "{s}"language.h

"{o}"expprint.c.o \Option-f  "{s}"expprint.c {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h "{s}"parser-defs.h {symtab_h} {value_h}

"{o}"f-lang.c.o \Option-f  "{s}"f-lang.c "{s}"f-lang.h {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h "{s}"parser-defs.h {symtab_h}

"{o}"f-typeprint.c.o \Option-f  "{s}"f-typeprint.c "{s}"f-lang.h {defs_h} {expression_h} \Option-d
	{gdbcmd_h} {gdbcore_h} {gdbtypes_h} "{s}"language.h {symtab_h} "{s}"target.h \Option-d
	"{s}"typeprint.h {value_h}

"{o}"f-valprint.c.o \Option-f  "{s}"f-valprint.c {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h {symtab_h} "{s}"valprint.h {value_h}

"{o}"findvar.c.o \Option-f  "{s}"findvar.c {defs_h} {gdbcore_h} {inferior_h} "{s}"target.h

"{o}"fork-child.c.o \Option-f  "{s}"fork-child.c {wait_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"target.h "{s}"terminal.h "{s}"thread.h

"{o}"gdbtypes.c.o \Option-f  "{s}"gdbtypes.c {bfd_h} "{s}"complaints.h {defs_h} {expression_h} \Option-d
	{gdbtypes_h} "{s}"language.h "{s}"objfiles.h "{s}"symfile.h {symtab_h} "{s}"target.h \Option-d
	{value_h}

"{o}"go32-xdep.c.o \Option-f  "{s}"go32-xdep.c

"{o}"gould-tdep.c.o \Option-f  "{s}"gould-tdep.c "{s}"{OP_INCLUDE}:np1.h {defs_h} {frame_h} \Option-d
	{gdbcore_h} {symtab_h}

"{o}"gould-xdep.c.o \Option-f  "{s}"gould-xdep.c {defs_h} {gdbcore_h} {inferior_h}
"{o}"h8300-tdep.c.o \Option-f  "{s}"h8300-tdep.c {defs_h} {frame_h} {symtab_h}

"{o}"h8500-tdep.c.o \Option-f  "{s}"h8500-tdep.c {bfd_h} {dis_asm_h} {defs_h} \Option-d
	{expression_h} {frame_h} {gdbcmd_h} {gdbtypes_h} {symtab_h} \Option-d
	{value_h}

"{o}"hp300ux-nat.c.o \Option-f  "{s}"hp300ux-nat.c {defs_h} {gdbcore_h} {inferior_h}

"{o}"hppa-tdep.c.o \Option-f  "{s}"hppa-tdep.c {wait_h} {defs_h} {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"objfiles.h "{s}"symfile.h "{s}"target.h

"{o}"hppab-nat.c.o \Option-f  "{s}"hppab-nat.c {bfd_h} {defs_h} {inferior_h} "{s}"target.h
"{o}"hppah-nat.c.o \Option-f  "{s}"hppah-nat.c {bfd_h} {defs_h} {inferior_h} "{s}"target.h
"{o}"i386-tdep.c.o \Option-f  "{s}"i386-tdep.c {defs_h} {gdbcore_h} {inferior_h} "{s}"target.h
"{o}"i386b-nat.c.o \Option-f  "{s}"i386b-nat.c {defs_h} 
"{o}"i386ly-nat.c.o \Option-f  "{s}"i386ly-nat.c {defs_h} {frame_h} {inferior_h} "{s}"target.h
"{o}"i386ly-tdep.c.o \Option-f  "{s}"i386ly-tdep.c {defs_h} {inferior_h} "{s}"target.h
"{o}"i386mach-nat.c.o \Option-f  "{s}"i386mach-nat.c {defs_h} {gdbcore_h} {inferior_h} 

"{o}"i386v-nat.c.o \Option-f  "{s}"i386v-nat.c {ieee_float_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"language.h "{s}"target.h

"{o}"i386v4-nat.c.o \Option-f  "{s}"i386v4-nat.c {defs_h}

"{o}"i387-tdep.c.o \Option-f  "{s}"i387-tdep.c {ieee_float_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"language.h

"{o}"i960-tdep.c.o \Option-f  "{s}"i960-tdep.c {ieee_float_h} {defs_h} {expression_h} \Option-d
	{frame_h} {gdbtypes_h} {symtab_h} {value_h}

"{o}"infcmd.c.o \Option-f  "{s}"infcmd.c {defs_h} "{s}"environ.h {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"target.h "{s}"language.h

"{o}"inflow.c.o \Option-f  "{s}"inflow.c {bfd_h} {command_h} {defs_h} {inferior_h} \Option-d
	"{s}"signals.h "{s}"target.h "{s}"terminal.h "{s}"thread.h

"{o}"infptrace.c.o \Option-f  "{s}"infptrace.c {defs_h} {gdbcore_h} {inferior_h} "{s}"target.h

"{o}"infrun.c.o \Option-f  "{s}"infrun.c {wait_h} {defs_h} {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"target.h "{s}"thread.h

"{o}"inftarg.c.o \Option-f  "{s}"inftarg.c {wait_h} {defs_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"target.h "{s}"terminal.h {command_h}

"{o}"irix4-nat.c.o \Option-f  "{s}"irix4-nat.c {defs_h} {inferior_h}
"{o}"isi-xdep.c.o \Option-f  "{s}"isi-xdep.c

"{o}"language.c.o \Option-f  "{s}"language.c {bfd_h} {defs_h} {expression_h} {frame_h} \Option-d
	{gdbcmd_h} {gdbtypes_h} "{s}"language.h "{s}"parser-defs.h {symtab_h} \Option-d
	"{s}"target.h {value_h}

"{o}"m2-lang.c.o \Option-f  "{s}"m2-lang.c {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h "{s}"m2-lang.h "{s}"parser-defs.h {symtab_h}

"{o}"m2-typeprint.c.o \Option-f  "{s}"m2-typeprint.c {defs_h} {expression_h} {gdbcmd_h} \Option-d
	{gdbcore_h} {gdbtypes_h} "{s}"language.h "{s}"m2-lang.h {symtab_h} "{s}"target.h \Option-d
	{value_h}

"{o}"m2-valprint.c.o \Option-f  "{s}"m2-valprint.c {defs_h} {gdbtypes_h} {symtab_h} \Option-d
	"{s}"valprint.h

"{o}"m68k-tdep.c.o \Option-f  "{s}"m68k-tdep.c {defs_h} {frame_h} {symtab_h} 

"{o}"m68kly-nat.c.o \Option-f  "{s}"m68kly-nat.c {defs_h} {frame_h} {inferior_h} "{s}"target.h

"{o}"m88k-nat.c.o \Option-f  "{s}"m88k-nat.c {defs_h} {gdbcore_h} {inferior_h}

"{o}"m88k-tdep.c.o \Option-f  "{s}"m88k-tdep.c {defs_h} {gdbcore_h} {inferior_h}

"{o}"main.c.o \Option-f  "{s}"main.c {bfd_h} {getopt_h} {readline_headers} "{s}"call-cmds.h \Option-d
	{defs_h} {gdbcmd_h} {inferior_h} "{s}"language.h "{s}"signals.h \Option-d
	{remote_utils_h}

"{o}"top.c.o \Option-f  "{s}"top.c {bfd_h} {getopt_h} {readline_headers} "{s}"call-cmds.h \Option-d
	{defs_h} {gdbcmd_h} {inferior_h} "{s}"language.h "{s}"signals.h \Option-d
	{remote_utils_h}

"{o}"maint.c.o \Option-f  "{s}"maint.c {defs_h} {gdbcmd_h} {gdbtypes_h} {symtab_h} "{s}"language.h \Option-d
	{expression_h}

"{o}"mdebugread.c.o \Option-f  "{s}"mdebugread.c "{s}"buildsym.h "{s}"complaints.h {bfd_h} {defs_h} \Option-d
	{expression_h} "{s}"gdb-stabs.h {gdbcore_h} {gdbtypes_h} "{s}"language.h \Option-d
	"{s}"objfiles.h "{s}"partial-stab.h "{s}"stabsread.h "{s}"symfile.h {symtab_h}

"{o}"mem-break.c.o \Option-f  "{s}"mem-break.c {defs_h} 

"{o}"minsyms.c.o \Option-f  "{s}"minsyms.c {bfd_h} {defs_h} "{s}"objfiles.h "{s}"symfile.h \Option-d
	{symtab_h}

"{o}"mips-nat.c.o \Option-f  "{s}"mips-nat.c {defs_h} {gdbcore_h} {inferior_h} 

"{o}"mips-tdep.c.o \Option-f  "{s}"mips-tdep.c {defs_h} {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"language.h "{s}"objfiles.h "{s}"symfile.h

"{o}"mipsread.c.o \Option-f  "{s}"mipsread.c "{s}"buildsym.h "{s}"complaints.h {bfd_h} {defs_h} \Option-d
	{expression_h} "{s}"gdb-stabs.h {gdbcore_h} {gdbtypes_h} "{s}"language.h \Option-d
	"{s}"objfiles.h "{s}"partial-stab.h "{s}"stabsread.h "{s}"symfile.h {symtab_h}

"{o}"news-xdep.c.o \Option-f  "{s}"news-xdep.c

"{o}"Onindy.c.o \Option-f  "{s}"nindy-share:Onindy.c {wait_h} "{s}"nindy-share:block_io.h \Option-d
	"{s}"nindy-share:env.h
	{CC} {INTERNAL_CFLAGS} "{s}"nindy-share:Onindy.c -o "{o}"nindy.c.o

"{o}"nindy.c.o \Option-f  "{s}"nindy-share:nindy.c {wait_h} "{s}"nindy-share:block_io.h \Option-d
	"{s}"nindy-share:env.h
	{CC} {INTERNAL_CFLAGS} "{s}"nindy-share:nindy.c -o "{o}"nindy.c.o

"{o}"nlmread.c.o \Option-f  "{s}"nlmread.c {bfd_h} "{s}"buildsym.h "{s}"complaints.h {defs_h} \Option-d
	"{s}"gdb-stabs.h "{s}"objfiles.h "{s}"symfile.h {symtab_h} "{s}"stabsread.h

"{o}"ttyflush.c.o \Option-f  "{s}"nindy-share:ttyflush.c
	{CC} {INTERNAL_CFLAGS} "{s}"nindy-share:ttyflush.c -o "{o}"ttyflush.c.o

"{o}"nindy-tdep.c.o \Option-f  "{s}"nindy-tdep.c {defs_h} {frame_h} {symtab_h} 

"{o}"ns32k-tdep.c.o \Option-f  "{s}"ns32k-tdep.c {defs_h} {gdbcore_h} "{s}"ns32k-opcode.h \Option-d
	{symtab_h}

"{o}"objfiles.c.o \Option-f  "{s}"objfiles.c {bfd_h} {defs_h} "{s}"objfiles.h "{s}"symfile.h \Option-d
	{symtab_h}

"{o}"osfsolib.c.o \Option-f  "{s}"osfsolib.c {command_h} {defs_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"objfiles.h "{s}"regex.h "{s}"symfile.h "{s}"target.h "{s}"language.h

"{o}"somread.c.o \Option-f  "{s}"somread.c {bfd_h} "{s}"buildsym.h "{s}"complaints.h {defs_h} \Option-d
	"{s}"gdb-stabs.h "{s}"objfiles.h "{s}"symfile.h {symtab_h}

"{o}"somsolib.c.o \Option-f  "{s}"somsolib.c {defs_h}

"{o}"parse.c.o \Option-f  "{s}"parse.c {command_h} {defs_h} {expression_h} {frame_h} \Option-d
	{gdbtypes_h} "{s}"language.h "{s}"parser-defs.h {symtab_h} {value_h}

"{o}"printcmd.c.o \Option-f  "{s}"printcmd.c {breakpoint_h} {defs_h} {expression_h} \Option-d
	{gdbcmd_h} {gdbcore_h} {gdbtypes_h} "{s}"language.h "{s}"objfiles.h "{s}"symfile.h \Option-d
	{symtab_h} "{s}"target.h

"{o}"procfs.c.o \Option-f  "{s}"procfs.c {command_h} {defs_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"target.h

"{o}"pyr-tdep.c.o \Option-f  "{s}"pyr-tdep.c {defs_h} 

"{o}"pyr-xdep.c.o \Option-f  "{s}"pyr-xdep.c {defs_h} {gdbcore_h} {inferior_h} 

"{o}"regex.c.o \Option-f  "{s}"regex.c "{s}"regex.h

"{o}"remote-adapt.c.o \Option-f  "{s}"remote-adapt.c {wait_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"target.h "{s}"terminal.h

"{o}"remote-bug.c.o \Option-f  "{s}"remote-bug.c {wait_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"target.h "{s}"terminal.h {remote_utils_h}

"{o}"remote-eb.c.o \Option-f  "{s}"remote-eb.c {wait_h} "{s}"config:a29k:tm-a29k.h \Option-d
	{defs_h} {gdbcore_h} {inferior_h} "{s}"symfile.h "{s}"target.h "{s}"terminal.h

"{o}"remote-es.c.o \Option-f  "{s}"remote-es.c {bfd_h} {wait_h} {command_h} {defs_h} \Option-d
	{inferior_h} {remote_utils_h} "{s}"terminal.h

"{o}"remote-hms.c.o \Option-f  "{s}"remote-hms.c {wait_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"serial.h "{s}"target.h "{s}"terminal.h

"{o}"remote-mips.c.o \Option-f  "{s}"remote-mips.c {wait_h} {defs_h} {gdbcmd_h} \Option-d
	{gdbcore_h} {inferior_h} "{s}"serial.h "{s}"symfile.h "{s}"target.h

"{o}"remote-mm.c.o \Option-f  "{s}"remote-mm.c {bfd_h} {wait_h} {defs_h} {inferior_h} \Option-d
	"{s}"minimon.h "{s}"target.h "{s}"terminal.h

"{o}"remote-mon.c.o \Option-f  "{s}"remote-mon.c {wait_h} {command_h} {defs_h} \Option-d
	{gdbcore_h} "{s}"monitor.h "{s}"serial.h "{s}"target.h

"{o}"remote-nindy.c.o \Option-f  "{s}"remote-nindy.c {ieee_float_h} {wait_h} {command_h} \Option-d
	{defs_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"nindy-share:env.h "{s}"nindy-share:stop.h {remote_utils_h} \Option-d
	"{s}"symfile.h

"{o}"remote-sim.c.o \Option-f  "{s}"remote-sim.c {wait_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"target.h "{s}"terminal.h

"{o}"remote-st.c.o \Option-f  "{s}"remote-st.c {wait_h} {defs_h} {gdbcore_h} "{s}"serial.h \Option-d
	"{s}"target.h

"{o}"remote-udi.c.o \Option-f  "{s}"remote-udi.c {bfd_h} {wait_h} {defs_h} {gdbcmd_h} \Option-d
	{inferior_h} "{s}"target.h "{s}"terminal.h {udiheaders}

"{o}"remote-vx.c.o \Option-f  "{s}"remote-vx.c {wait_h} "{s}"complaints.h {defs_h} {gdbcmd_h} \Option-d
	{gdbcore_h} {inferior_h} "{s}"target.h "{s}"vx-share:dbgRpcLib.h \Option-d
	"{s}"vx-share:ptrace.h "{s}"vx-share:xdr_ld.h "{s}"vx-share:xdr_ptrace.h \Option-d
	"{s}"vx-share:xdr_rdb.h

"{o}"remote-utils.c.o \Option-f  "{s}"remote-utils.c {defs_h} {gdbcmd_h} {gdbcore_h} \Option-d
	{inferior_h} {remote_utils_h} 

"{o}"remote.c.o \Option-f  "{s}"remote.c {bfd_h} {wait_h} {defs_h} {gdbcmd_h} \Option-d
	{inferior_h} {remote_utils_h} "{s}"symfile.h "{s}"terminal.h

"{o}"rs6000-nat.c.o \Option-f  "{s}"rs6000-nat.c {bfd_h} {defs_h} {inferior_h} "{s}"target.h

"{o}"rs6000-tdep.c.o \Option-f  "{s}"rs6000-tdep.c {defs_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"target.h "{s}"xcoffsolib.h

"{o}"ser-go32.c.o \Option-f  "{s}"ser-go32.c {defs_h} "{s}"serial.h 
"{o}"ser-mac.c.o \Option-f  "{s}"ser-mac.c {defs_h} "{s}"serial.h 
"{o}"ser-tcp.c.o \Option-f  "{s}"ser-tcp.c {defs_h} "{s}"serial.h "{s}"signals.h
"{o}"ser-unix.c.o \Option-f  "{s}"ser-unix.c {defs_h} "{s}"serial.h 
"{o}"serial.c.o \Option-f  "{s}"serial.c {defs_h} "{s}"serial.h 

"{o}"sh-tdep.c.o \Option-f  "{s}"sh-tdep.c {bfd_h} {dis_asm_h} \Option-d
	"{s}":opcodes:sh-opc.h {defs_h} {expression_h} {frame_h} \Option-d
	{gdbcmd_h} {gdbtypes_h} {symtab_h} {value_h}

"{o}"solib.c.o \Option-f  "{s}"solib.c {command_h} {defs_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"objfiles.h "{s}"regex.h "{s}"symfile.h "{s}"target.h

"{o}"source.c.o \Option-f  "{s}"source.c {defs_h} {expression_h} {frame_h} {gdbcmd_h} \Option-d
	{gdbcore_h} "{s}"language.h "{s}"objfiles.h "{s}"regex.h "{s}"symfile.h {symtab_h}

"{o}"sparc-nat.c.o \Option-f  "{s}"sparc-nat.c {bfd_h} {defs_h} {inferior_h} "{s}"target.h

"{o}"sparc-tdep.c.o \Option-f  "{s}"sparc-tdep.c {ieee_float_h} {defs_h} {gdbcore_h} \Option-d
	{inferior_h} "{s}"objfiles.h "{s}"symfile.h "{s}"target.h

"{o}"stabsread.c.o \Option-f  "{s}"stabsread.c {bfd_h} {INCLUDE_DIR}:aout:stab.def \Option-d
	"{INCLUDE_DIR}":aout:stab_gnu.h "{s}"buildsym.h "{s}"complaints.h {defs_h} \Option-d
	{gdbtypes_h} "{s}"objfiles.h "{s}"stabsread.h "{s}"symfile.h {symtab_h}

"{o}"stack.c.o \Option-f  "{s}"stack.c {defs_h} {gdbcmd_h} {gdbcore_h} {inferior_h} \Option-d
	"{s}"language.h "{s}"target.h

"{o}"sun3-nat.c.o \Option-f  "{s}"sun3-nat.c {defs_h} {gdbcore_h} {inferior_h}
"{o}"sun386-nat.c.o \Option-f  "{s}"sun386-nat.c {defs_h} {inferior_h} {gdbcore_h}

"{o}"symfile.c.o \Option-f  "{s}"symfile.c {breakpoint_h} "{s}"complaints.h {defs_h} \Option-d
	{expression_h} {gdbcmd_h} {gdbcore_h} {gdbtypes_h} \Option-d
	"{s}"language.h "{s}"objfiles.h "{s}"symfile.h {symtab_h} "{s}"target.h

"{o}"symm-tdep.c.o \Option-f  "{s}"symm-tdep.c {defs_h} {gdbcore_h} {inferior_h}	
"{o}"symm-nat.c.o \Option-f  "{s}"symm-nat.c {defs_h} {gdbcore_h} {inferior_h}

"{o}"symmisc.c.o \Option-f  "{s}"symmisc.c {bfd_h} {breakpoint_h} {command_h} {defs_h} \Option-d
	{expression_h} {gdbtypes_h} "{s}"language.h "{s}"objfiles.h "{s}"symfile.h \Option-d
	{symtab_h} 

"{o}"symtab.c.o \Option-f  "{s}"symtab.c "{s}"call-cmds.h {defs_h} {expression_h} {frame_h} \Option-d
	{gdbcmd_h} {gdbcore_h} {gdbtypes_h} "{s}"language.h "{s}"objfiles.h \Option-d
	"{s}"regex.h "{s}"symfile.h {symtab_h} "{s}"target.h {value_h}

"{o}"tahoe-tdep.c.o \Option-f  "{s}"tahoe-tdep.c "{s}"{OP_INCLUDE}:tahoe.h {defs_h} \Option-d
	{symtab_h}

"{o}"target.c.o \Option-f  "{s}"target.c {bfd_h} {defs_h} {gdbcmd_h} {inferior_h} \Option-d
	"{s}"objfiles.h "{s}"symfile.h "{s}"target.h

"{o}"thread.c.o \Option-f  "{s}"thread.c {defs_h} "{s}"thread.h {gdbcmd_h}

"{o}"typeprint.c.o \Option-f  "{s}"typeprint.c {defs_h} {expression_h} {gdbcmd_h} \Option-d
	{gdbcore_h} {gdbtypes_h} "{s}"language.h {symtab_h} "{s}"target.h \Option-d
	{value_h} 

"{o}"ultra3-nat.c.o \Option-f  "{s}"ultra3-nat.c {defs_h} {gdbcore_h} {inferior_h}
"{o}"ultra3-xdep.c.o \Option-f  "{s}"ultra3-xdep.c {defs_h} {gdbcore_h} {inferior_h}
"{o}"umax-xdep.c.o \Option-f  "{s}"umax-xdep.c {defs_h} {gdbcore_h} {inferior_h}

"{o}"utils.c.o \Option-f  "{s}"utils.c {bfd_h} {defs_h} {expression_h} {gdbcmd_h} \Option-d
	"{s}"language.h "{s}"signals.h "{s}"target.h "{s}"terminal.h

"{o}"valarith.c.o \Option-f  "{s}"valarith.c {bfd_h} {defs_h} {expression_h} \Option-d
	{gdbtypes_h} "{s}"language.h {symtab_h} "{s}"target.h {value_h}

"{o}"valops.c.o \Option-f  "{s}"valops.c {defs_h} {gdbcore_h} {inferior_h} "{s}"target.h

"{o}"valprint.c.o \Option-f  "{s}"valprint.c {defs_h} {expression_h} {gdbcmd_h} \Option-d
	{gdbcore_h} {gdbtypes_h} "{s}"language.h {symtab_h} "{s}"target.h \Option-d
	{value_h}

"{o}"values.c.o \Option-f  "{s}"values.c {defs_h} {expression_h} {frame_h} {gdbcmd_h} \Option-d
	{gdbcore_h} {gdbtypes_h} {symtab_h} "{s}"target.h {value_h}

"{o}"vax-tdep.c.o \Option-f  "{s}"vax-tdep.c "{s}"{OP_INCLUDE}:vax.h {defs_h} {symtab_h}

"{o}"xdr_ld.c.o \Option-f  "{s}"vx-share:xdr_ld.c {defs_h} "{s}"vx-share:vxTypes.h \Option-d
	"{s}"vx-share:vxWorks.h "{s}"vx-share:xdr_ld.h
	{CC} {INTERNAL_CFLAGS} "{s}"vx-share:xdr_ld.c -o "{o}"ld.c.o

"{o}"xdr_ptrace.c.o \Option-f  "{s}"vx-share:xdr_ptrace.c {defs_h} "{s}"vx-share:vxTypes.h \Option-d
	"{s}"vx-share:vxWorks.h "{s}"vx-share:xdr_ptrace.h
	{CC} {INTERNAL_CFLAGS} "{s}"vx-share:xdr_ptrace.c -o "{o}"ptrace.c.o

"{o}"xdr_rdb.c.o \Option-f  "{s}"vx-share:xdr_rdb.c {defs_h} "{s}"vx-share:vxTypes.h \Option-d
	"{s}"vx-share:vxWorks.h "{s}"vx-share:xdr_rdb.h
	{CC} {INTERNAL_CFLAGS} "{s}"vx-share:xdr_rdb.c -o "{o}"rdb.c.o

"{o}"xcoffexec.c.o \Option-f  "{s}"xcoffexec.c "{s}"{BFD_SRC}:libbfd.h {defs_h} {gdbcmd_h} \Option-d
	{gdbcore_h} {inferior_h} "{s}"objfiles.h "{s}"symfile.h "{s}"target.h "{s}"xcoffsolib.h

"{o}"xcoffread.c.o \Option-f  "{s}"xcoffread.c {bfd_h} {INCLUDE_DIR}:aout:stab.def \Option-d
	"{INCLUDE_DIR}":aout:stab_gnu.h "{INCLUDE_DIR}":coff:internal.h \Option-d
	"{INCLUDE_DIR}":coff:rs6000.h "{s}"{BFD_SRC}:libcoff.h "{s}"buildsym.h \Option-d
	"{s}"complaints.h {defs_h} {gdbtypes_h} "{s}"objfiles.h "{s}"stabsread.h "{s}"symfile.h \Option-d
	{symtab_h}

"{o}"xcoffsolib.c.o \Option-f  "{s}"xcoffsolib.c {bfd_h} {defs_h} "{s}"xcoffsolib.h

"{o}"z8k-tdep.c.o \Option-f  "{s}"z8k-tdep.c {bfd_h} {dis_asm_h} {defs_h} {frame_h} \Option-d
	{gdbcmd_h} {gdbtypes_h} {symtab_h}

c-exp.tab.c.o \Option-f  c-exp.tab.c "{s}"c-lang.h {defs_h} {expression_h} \Option-d
	{gdbtypes_h} "{s}"language.h "{s}"parser-defs.h {symtab_h} {value_h} \Option-d
	{bfd_h} "{s}"objfiles.h "{s}"symfile.h

f-exp.tab.c.o \Option-f  f-exp.tab.c "{s}"f-lang.h {defs_h} {expression_h} \Option-d
	{gdbtypes_h} "{s}"language.h "{s}"parser-defs.h {symtab_h} {value_h} \Option-d
	{bfd_h} "{s}"objfiles.h "{s}"symfile.h

ch-exp.tab.c.o \Option-f  ch-exp.tab.c "{s}"ch-lang.h {defs_h} {expression_h} \Option-d
	{gdbtypes_h} "{s}"language.h "{s}"parser-defs.h {symtab_h} {value_h} \Option-d
	{bfd_h} "{s}"objfiles.h "{s}"symfile.h

m2-exp.tab.c.o \Option-f  m2-exp.tab.c {defs_h} {expression_h} {gdbtypes_h} \Option-d
	"{s}"language.h "{s}"m2-lang.h "{s}"parser-defs.h {symtab_h} {value_h} \Option-d
	{bfd_h} "{s}"objfiles.h "{s}"symfile.h

### end of the gdb Makefile.in.

"{o}"init.c.o \Option-f "{o}"init.c

"{o}"version.c.o \Option-f "{o}"version.c
