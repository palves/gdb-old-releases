##############################################################################

## This file is a shell script fragment that supplies the information
## necessary to tailor a template configure script into the configure
## script appropriate for this directory.  For more information, check
## any existing configure script.  

## Be warned, there are two types of configure.in files.  There are those
## used by Autoconf, which are macros which are expanded into a configure
## script by autoconf.  The other sort, of which this is one, is executed
## by Cygnus configure.  

## For more information on these two systems, check out the documentation
## for 'Autoconf' (autoconf.texi) and 'Configure' (configure.texi).  

##############################################################################

### To add a new directory to the tree, first choose whether it is a target
### or a host dependent tool.  Then put it into the appropriate list
### (library or tools, host or target), doing a dependency sort.  For
### example, gdb requires that byacc (or bison) be built first, so it is in
### the ${host_tools} list after byacc and bison.  


# these libraries are used by various programs built for the host environment
#
host_libs="mmalloc libiberty opcodes bfd readline tcl tk"

# these tools are built for the host environment
#
host_tools="byacc flex bison binutils ld gas gcc gdb make patch
	    send_pr gprof gdbtest tgas etc expect deja-gnu sim
            m4 autoconf ispell grep diff rcs cvs fileutils shellutils
	    textutils wdiff find emacs uudecode hello tar gzip indent
	    recode"


# these libraries are built for the target environment, and are built after
# the host libraries and the host tools (which may be a cross compiler)
#
target_libs="libm xiberty newlib libg++"


# these tools are built using the target libs, and are intended to run only
# in the target environment.  we currently have none.
#
# note: any program that *uses* libraries that are in the "target_libs"
# list belongs in this list.  those programs are also very likely
# candidates for the "native_only" list which follows
#
target_tools="groff"

################################################################################

## These two lists are of directories that are to be removed from the
## ${configdirs} list for either cross-compilations or for native-
## compilations.  For example, it doesn't make that much sense to
## cross-compile Emacs, nor is it terribly useful to compile xiberty in
## a native environment.  

# directories to be built in the native environment only
#
native_only="autoconf cvs diff emacs fileutils find grep groff ispell m4
             rcs sed shellutils textutils wdiff"

# directories to be built in a cross environment only
#
cross_only="xiberty newlib"

## All tools belong in one of the four categories, and are assigned above
#
configdirs="${host_libs} ${host_tools} ${target_libs} ${target_tools}"

################################################################################

srctrigger=move-if-change
srcname="gnu development package"

# per-host:

case "${host}" in
  m68k-apollo-sysv*)      host_makefile_frag=config/mh-apollo68 ;;
  m68k-apollo-bsd*)       host_makefile_frag=config/mh-a68bsd ;;
  m88k-motorola-m88kbcs)  host_makefile_frag=config/mh-delta88;;
  m88k-dg-dgux*)	  host_makefile_frag=config/mh-dgux ;;
  mips-dec-ultrix*)       host_makefile_frag=config/mh-decstation ;;
  mips-sgi-irix4*)        host_makefile_frag=config/mh-irix4 ;;
  mips-sgi-irix3*)        host_makefile_frag=config/mh-sysv ;;
  i[34]86-ncr-sysv4*)     host_makefile_frag=config/mh-ncr3000 ;;
  i[34]86-*-sco*)         host_makefile_frag=config/mh-sco ;;
  i[34]86-*-isc*)	  host_makefile_frag=config/mh-sysv ;;
  i[34]86-*-linux)        host_makefile_frag=config/mh-linux ;;
  i[34]86-*-solaris2*)    host_makefile_frag=config/mh-sysv4 ;;
  *-ibm-aix*)             host_makefile_frag=config/mh-aix ;;
  *-sun-solaris*)         host_makefile_frag=config/mh-solaris ;;
  *-sun-*)		  host_makefile_frag=config/mh-sun ;;
  *-hp-hpux)              host_makefile_frag=config/mh-hpux ;;
  *-*-sysv4*)             host_makefile_frag=config/mh-sysv4 ;;
  *-*-sysv*)              host_makefile_frag=config/mh-sysv ;;
esac

# per-target:

bfd_target=

case "${target}" in
  a29k-amd-ebmon) bfd_target="ebmon29k"  ;;
  a29k-amd-udi)   bfd_target="udi29k" ;;
  a29k-amd-*)     echo "bad target_os for amd" 1>&2
		  exit 1
		  ;;
esac


# some tools are only suitable for building in a "native" situation.
# Those are added when we have a host==target configuration.  For cross
# toolchains, we add some directories that should only be useful in a
# cross-compiler.

if [ x"${host}" = x"${target}" ] ; then
	# when doing a native toolchain, don't build the targets
	# that are in the 'cross only' list
	for i in ${cross_only} ; do
	  configdirs=`echo ${configdirs} | sed -e "s/$i//"`
	done
else
	# similarly, don't build the targets in the 'native only' 
	# list when building a cross compiler
	for i in ${native_only} ; do
	  configdirs=`echo ${configdirs} | sed -e "s/$i//"`
	done
fi	


# remove more programs from consideration, based on the host or 
# target this usually means that a port of the program doesn't
# exist yet.

#case "${host}" in
#  hppa*-*-*)
#    configdirs=`echo ${configdirs} | sed -e 's/emacs//'`
#    ;;
#esac

case "${target}" in
  mips-*-*)
    configdirs=`echo ${configdirs} | sed -e 's/gas//'`
    ;;
  rs6000-*-*)
    configdirs=`echo ${configdirs} | sed -e 's/ld//;s/binutils//;s/gas//;s/tk//'`
    ;;
  hppa*-*-*)
    configdirs=`echo ${configdirs} | sed -e 's/ld//;s/binutils//;s/gas//'`
    ;;
  *-*-solaris2)
    configdirs=`echo ${configdirs} | sed -e 's/ld//;s/gas//'`
    ;;
esac


target_makefile_frag=config/mt-${bfd_target}

#
# Local Variables:
# fill-column: 131
# End:
#

