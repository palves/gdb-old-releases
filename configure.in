##############################################################################

## This file is a shell script fragment that supplies the information
## necessary to tailor a template configure script into the configure
## script appropriate for this directory.  For more information, check
## any existing configure script.  

## Be warned, there are two types of configure.in files.  There are those
## used by Autoconf, which are macros which are expanded into a configure
## script by autoconf.  The other sort, of which this is one, is executed
## by Cygnus configure.  

## For more information on these two systems, check out the documentation
## for 'Autoconf' (autoconf.texi) and 'Configure' (configure.texi).  

##############################################################################

### To add a new directory to the tree, first choose whether it is a target
### or a host dependent tool.  Then put it into the appropriate list
### (library or tools, host or target), doing a dependency sort.  For
### example, gdb requires that byacc (or bison) be built first, so it is in
### the ${host_tools} list after byacc and bison.  


# these libraries are used by various programs built for the host environment
#
host_libs="mmalloc libiberty opcodes bfd readline gash tcl tk tclX"

# these tools are built for the host environment
#
host_tools="byacc flex bison binutils ld gas gcc gdb make patch
	    prms send-pr gprof gdbtest tgas etc expect dejagnu sim
            m4 autoconf ispell grep diff rcs cvs fileutils shellutils
	    textutils wdiff find emacs uudecode hello tar gzip indent
	    recode release sed utils"


# these libraries are built for the target environment, and are built after
# the host libraries and the host tools (which may be a cross compiler)
#
target_libs="libm xiberty newlib libio libg++"


# these tools are built using the target libs, and are intended to run only
# in the target environment.  we currently have none.
#
# note: any program that *uses* libraries that are in the "target_libs"
# list belongs in this list.  those programs are also very likely
# candidates for the "native_only" list which follows
#
target_tools="groff"

################################################################################

## These two lists are of directories that are to be removed from the
## ${configdirs} list for either cross-compilations or for native-
## compilations.  For example, it doesn't make that much sense to
## cross-compile Emacs, nor is it terribly useful to compile xiberty in
## a native environment.  

# directories to be built in the native environment only
#
native_only="autoconf cvs emacs fileutils find grep groff gzip hello indent
             ispell m4 rcs recode sed shellutils tar textutils gash tk uudecode wdiff 
	     gprof"

# directories to be built in a cross environment only
#
cross_only="xiberty newlib"

## All tools belong in one of the four categories, and are assigned above
#
configdirs="${host_libs} ${host_tools} ${target_libs} ${target_tools}"

################################################################################

srctrigger=move-if-change
srcname="gnu development package"

# per-host:

case "${host}" in
  m68k-hp-hpux*)	  host_makefile_frag=config/mh-hp300 ;;
  m68k-apollo-sysv*)      host_makefile_frag=config/mh-apollo68 ;;
  m68k-apollo-bsd*)       host_makefile_frag=config/mh-a68bsd ;;
  m88k-motorola-sysv*)    host_makefile_frag=config/mh-delta88;;
  m88k-dg-dgux*)	  host_makefile_frag=config/mh-dgux ;;
  mips*-dec-ultrix*)      host_makefile_frag=config/mh-decstation ;;
  mips*-sgi-irix4*)       host_makefile_frag=config/mh-irix4 ;;
  mips*-sgi-irix3*)       host_makefile_frag=config/mh-sysv ;;
  mips*-*-sysv*)	  host_makefile_frag=config/mh-riscos ;;
  i[34]86-ncr-sysv4*)     host_makefile_frag=config/mh-ncr3000 ;;
  i[34]86-*-sco*)         host_makefile_frag=config/mh-sco ;;
  i[34]86-*-isc*)	  host_makefile_frag=config/mh-sysv ;;
  i[34]86-*-linux*)       host_makefile_frag=config/mh-linux ;;
  i[34]86-*-solaris2*)    host_makefile_frag=config/mh-sysv4 ;;
  i[34]86-*-aix*)	  host_makefile_frag=config/mh-aix386 ;;
  vax-*-ultrix2*)         host_makefile_frag=config/mh-vaxult2 ;;
  *-ibm-aix*)             host_makefile_frag=config/mh-aix ;;
  *-bull-bosx*)           host_makefile_frag=config/mh-aix ;;
  *-*-solaris2*)          host_makefile_frag=config/mh-solaris ;;
  m68k-sun-*)		  host_makefile_frag=config/mh-sun3 ;;
  *-sun-*)		  host_makefile_frag=config/mh-sun ;;
  *-hp-hpux*)             host_makefile_frag=config/mh-hpux ;;
  *-*-hiux*)              host_makefile_frag=config/mh-hpux ;;
  *-*-lynxos*)	  	  host_makefile_frag=config/mh-lynxos ;;
  *-*-sysv4*)             host_makefile_frag=config/mh-sysv4 ;;
  *-*-sysv*)              host_makefile_frag=config/mh-sysv ;;
esac

# per-target:

gasdir=gas
use_gnu_ld=
use_gnu_as=

case "${target}" in
  hppa*-hp-hpux*)	  target_makefile_frag=config/mt-hppa ;;
esac

# some tools are so dependent upon X11 that if we're not building with X, 
# it's not even worth trying to configure, much less build, that tool.

case ${with_x} in
  yes | "")  # the default value for this tree is that X11 is available
	;;
  no)
    	configdirs=`echo ${configdirs} | sed -e 's/tk//;/gash//'`
	;;
  *)
    	echo "*** bad value \"${with_x}\" for -with-x flag; ignored" 1>&2
    	;;
esac



# Some tools are only suitable for building in a "native" situation.
# Those are added when we have a host==target configuration.  For cross
# toolchains, we add some directories that should only be useful in a
# cross-compiler.

if [ x"${host}" = x"${target}" ] ; then
	# when doing a native toolchain, don't build the targets
	# that are in the 'cross only' list
	for i in ${cross_only} ; do
	  configdirs=`echo ${configdirs} | sed -e "s/$i//"`
	done
else
	# similarly, don't build the targets in the 'native only' 
	# list when building a cross compiler
	for i in ${native_only} ; do
	  configdirs=`echo ${configdirs} | sed -e "s/$i//"`
	done
fi	


# Remove more programs from consideration, based on the host or 
# target this usually means that a port of the program doesn't
# exist yet.  This section gets removed for FSF releases,
# where we want the configure scripts in the subdirectories to
# complain if the target or host isn't supported.

case "${host}" in
  alpha-dec-osf1)
    configdirs=`echo ${configdirs} | sed -e 's/gdb//'`
    ;;
  i[34]86-*-go32)
    configdirs=`echo ${configdirs} | sed -e 's/tcl//;s/expect//;s/deja-gnu//'`
    configdirs=`echo ${configdirs} | sed -e 's/make//;s/texinfo//;s/bison//'`
    configdirs=`echo ${configdirs} | sed -e 's/patch//;s/flex//;s/byacc//'`
    configdirs=`echo ${configdirs} | sed -e 's/send-pr//;s/gprof//'`
    configdirs=`echo ${configdirs} | sed -e 's/uudecode//;s/dejagnu//'`
    configdirs=`echo ${configdirs} | sed -e 's/diff//'`
    ;;
esac

case "${target}" in
  alpha-dec-osf1)
    configdirs=`echo ${configdirs} | sed -e 's/ld//;s/binutils//;s/gas //'`
    configdirs=`echo ${configdirs} | sed -e 's/gdb//;s/emacs//;s/fileutils//'`
    configdirs=`echo ${configdirs} | sed -e 's/grep//;s/libg++//;s/libio//'`
    ;;	
  h8300*-*-*)
    configdirs=`echo ${configdirs} | sed -e 's/libg++//;s/libio//'`
    ;;
  h8500-*-*)
    configdirs=`echo ${configdirs} | sed -e 's/libg++//;s/libio//'`
    ;;
  hppa*-*-osf)
    # Do configure ld/binutils/gas for this case.
    ;;
  hppa*-*-*)
    configdirs=`echo ${configdirs} | sed -e 's/ld//;s/binutils//;s/gas /pagas /;s/shellutils//'`
    gasdir=pagas
    ;;
  i[34]86-*-go32)
    # add the go32 support tools to the list
    configdirs=`echo go32 ${configdirs}`
    ;;
  rs6000-*-*)
    configdirs=`echo ${configdirs} | sed -e 's/ld//;s/binutils//;s/gas //;s/gprof//'`
    ;;
  mips-*-*)
    configdirs=`echo ${configdirs} | sed -e 's/gprof//'`
    ;;
  sh-*-*)
    case "${host}" in
      i[34]86-*-go32) ;; # don't add gprof
      *) configdirs=`echo gprof ${configdirs}` ;;
    esac
    ;;
  sparc-*-sunos4*)
    use_gnu_ld=no
    ;;
  i[34]86-*-sco*)
    configdirs=`echo ${configdirs} | sed -e 's/gprof//'`
    ;;
  *-*-sysv4)
    use_gnu_ld=no
    ;;
  *-*-vms)
    configdirs=`echo ${configdirs} | sed -e 's/bfd//;s/ld//;s/binutils//'`
    ;;
esac


# Set with_gnu_as and with_gnu_ld as appropriate.
#
# This is done by determining whether or not the appropriate directory
# is available, and by checking whether or not specific configurations
# have requested that this magic not happen.
# 
# The command line options always override the explicit settings in 
# configure.in, and the settings in configure.in override this magic.
#
# If the default for a toolchain is to use GNU as and ld, and you don't 
# want to do that, then you should use the --without-gnu-as and
# --without-gnu-ld options for the configure script.

if [ x${use_gnu_as} = x ] ; then
  if [ x${with_gnu_as} != xno ] && echo ${configdirs} | grep "${gasdir} " > /dev/null 2>&1 && [ -d ${srcdir}/${gasdir} ] ; then
    with_gnu_as=yes
    withoptions="$withoptions --with-gnu-as"
  fi
fi

if [ x${use_gnu_ld} = x ] ; then
  if [ x${with_gnu_ld} != xno ] && echo ${configdirs} | grep ld > /dev/null 2>&1 && [ -d ${srcdir}/ld ] ; then
    with_gnu_ld=yes
    withoptions="$withoptions --with-gnu-ld"
  fi
fi

#
# Local Variables:
# fill-column: 131
# End:
#
