#
# Makefile for directory with subdirs to build.
#   Copyright (C) 1990, 1991 Cygnus Support
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
#
# Last Mod Thu Nov 14 03:17:05 PST 1991, by rich@cygnus.com
#
# $Id: Makefile.in,v 1.74 1991/11/22 21:47:07 gnu Exp $

srcdir = .

idestdir = /usr/local
ddestdir = $(idestdir)

SHELL=/bin/sh

RANLIB = ranlib
AR = ar
AR_FLAGS = cq

BISON = `if [ -d $(unsubdir)/../bison ] ; \
	then echo \`pwd\`/$(unsubdir)/../bison$(subdir)/bison -y -L \`pwd\`/$(unsubdir)/../bison$(subdir)/ ; \
	else echo yacc ; fi`

MAKEINFO = `if [ -d $(unsubdir)/../texinfo/C ] ; \
	then echo \`pwd\`/$(unsubdir)/../texinfo/C$(subdir)/makeinfo ; \
	else echo echo ; fi`

#\`(cd $(srcdir)/bison ; \\`pwd\\`)\`
SUBDIRS = libiberty readline bfd gdb binutils ld gas gcc gnulib clib
OTHERS = 

ALL = all.normal
INSTALL_HEADERS = install-headers
INSTALL_FIXED_INCLUDES = install-fixed-includes

### for debugging
#GCCVERBOSE=-v

#### host and target specific makefile fragments come in here.
###

all:	$(ALL)
all-info: force
	$(MAKE) subdir_do DO=all-info "DODIRS=$(SUBDIRS)"

install-info: dir.info install-info-dirs force
	$(MAKE) subdir_do DO=install-info "DODIRS=$(SUBDIRS)"
	$(MAKE) install-dir.info

all.normal:
	$(MAKE) subdir_do DO=all "DODIRS=$(SUBDIRS) $(OTHERS)"

./fixed-includes:
	if [ -d ./fixed-includes ] ; then rm -rf ./fixed-includes ; else true ; fi
	mkdir ./fixed-includes
	$(srcdir)/gcc/fixincludes `pwd`/fixed-includes

# this is a bad hack.
all.xclib:	all.normal
	if [ -d clib ] ; then \
		(cd clib ; $(MAKE)) ; \
	fi

subdir_do: force
	for i in $(DODIRS); do \
		if [ -f $(unsubdir)/$$i/localenv ] ; then \
			if (cd $(unsubdir)/$$i$(subdir); \
				$(MAKE) \
					"against=$(against)" \
					"BISON=$(BISON)" \
					"MAKEINFO=$(MAKEINFO)" \
					$(DO)) ; then true ; \
				else exit 1 ; fi ; \
		else if [ -d $(unsubdir)/$$i ] ; then \
			if (cd $(unsubdir)/$$i$(subdir); \
				$(MAKE) \
					"against=$(against)" \
					"AR=$(AR)" \
					"CC=$(CC)" \
					"AR_FLAGS=$(AR_FLAGS)" \
					"RANLIB=$(RANLIB)" \
					"LOADLIBES=$(LOADLIBES)" \
					"LDFLAGS=$(LDFLAGS)" \
					"BISON=$(BISON)" \
					"MAKEINFO=$(MAKEINFO)" \
					$(DO)) ; then true ; \
			else exit 1 ; fi ; \
		else true ; fi ; \
	fi ; \
	done

bootstrap: ./fixed-includes
	$(MAKE) all all-info
	$(MAKE) stage1
	$(MAKE) pass "stagepass=stage1"
	$(MAKE) stage2
	$(MAKE) pass "stagepass=stage2"
	$(MAKE) comparison

bootstrap2: ./fixed-includes
	$(MAKE) pass "stagepass=stage1"
	$(MAKE) stage2
	$(MAKE) pass "stagepass=stage2"
	$(MAKE) comparison

bootstrap3: ./fixed-includes
	$(MAKE) pass "stagepass=stage2"
	$(MAKE) comparison

pass: ./fixed-includes
	cp $(srcdir)/gcc/gstdarg.h $(unsubdir)/gas$(subdir)/stdarg.h
	$(MAKE) subdir_do "DO=all all-info" "DODIRS=$(SUBDIRS)" \
		"CC=`pwd`/$(unsubdir)/gcc$(subdir)/$(stagepass)/gcc \
		-O $(GCCVERBOSE) -I`pwd`/fixed-includes \
		-B`pwd`/$(unsubdir)/gcc$(subdir)/$(stagepass)/ \
		-B`pwd`/$(unsubdir)/gas$(subdir)/$(stagepass)/ \
		-B`pwd`/$(unsubdir)/ld$(subdir)/$(stagepass)/" \
		"AR=`pwd`/$(unsubdir)/binutils$(subdir)/$(stagepass)/ar" \
		"LD=`pwd`/$(unsubdir)/gcc$(subdir)/$(stagepass)/gcc $(GCCVERBOSE)" \
		"RANLIB=`pwd`/$(unsubdir)/binutils$(subdir)/$(stagepass)/ranlib" \
		"LOADLIBES=`pwd`/$(unsubdir)/gnulib$(subdir)/$(stagepass)/gnulib.a /lib/libc.a" \
		"LDFLAGS=-nostdlib /lib/crt0.o \
		-L`pwd`/$(unsubdir)/gnulib$(subdir)/$(stagepass)/ \
		-B`pwd`/$(unsubdir)/ld$(subdir)/$(stagepass)/"


stage1: ./fixed-includes
	$(MAKE) subdir_do DO=stage1 "DODIRS=$(SUBDIRS)"

stage2: ./fixed-includes
	$(MAKE) subdir_do DO=stage2 "DODIRS=$(SUBDIRS)"

stage3: ./fixed-includes
	$(MAKE) subdir_do DO=stage3 "DODIRS=$(SUBDIRS)"

stage4: ./fixed-includes
	$(MAKE) subdir_do DO=stage4 "DODIRS=$(SUBDIRS)"

against=stage2

comparison:; $(MAKE) subdir_do DO=comparison against=$(against) "DODIRS=$(SUBDIRS)"

de-stage1:; $(MAKE) subdir_do DO=de-stage1 "DODIRS=$(SUBDIRS)"
de-stage2:; $(MAKE) subdir_do DO=de-stage2 "DODIRS=$(SUBDIRS)"
de-stage3:; $(MAKE) subdir_do DO=de-stage3 "DODIRS=$(SUBDIRS)"
de-stage4:; $(MAKE) subdir_do DO=de-stage4 "DODIRS=$(SUBDIRS)"

clean:
	rm -rf *.a TEMP errs core *.o *~ \#* TAGS *.E
	$(MAKE) subdir_do DO=clean "DODIRS=$(SUBDIRS) $(OTHERS)"

install: install-no-fixincludes $(INSTALL_FIXED_INCLUDES)

install-no-fixincludes: install-dirs $(INSTALL_HEADERS)
	$(MAKE) subdir_do DO=install "DODIRS=$(SUBDIRS) $(OTHERS)"

# The "else true" stuff is for Ultrix; the shell returns the exit code
# of the "if" command, if no commands are run in the "then" or "else" part,
# causing Make to quit.

MAKEDIRS= \
	$(ddestdir) \
	$(ddestdir)/bin \
	$(ddestdir)/include \
	$(ddestdir)/lib \
	$(ddestdir)/lib/emacs \
	$(idestdir) \
	$(idestdir)/lib \
	$(idestdir)/doc \
	$(idestdir)/man \
	$(idestdir)/man/man1 \
	$(idestdir)/man/man5

install-dirs: force
	for i in $(MAKEDIRS) ; do \
		echo Making $$i... ; \
		if [ -d $$i ] ; then true ; else mkdir $$i ; fi ; \
	done

MAKEINFODIRS= \
	$(idestdir) \
	$(idestdir)/info

install-info-dirs: force
	for i in $(MAKEINFODIRS) ; do \
		echo Making $$i... ; \
		if [ -d $$i ] ; then true ; else mkdir $$i ; fi ; \
	done

install-headers:
	if [ -d $(unsubdir)/gcc$(subdir) ] ; then \
		(cd  $(unsubdir)/gcc$(subdir) ; \
				$(MAKE) install-dir) ; \
	else true; \
	fi

install-fixed-includes: force
	if [ -d $(unsubdir)/gcc$(subdir) ] ; then \
		(cd  $(unsubdir)/gcc$(subdir) ; \
				$(MAKE) install-fixed-includes) ; \
	else true; \
	fi

install-dir.info-in-place: force
	rdir=`cd $(srcdir)/texinfo ; pwd` \
	&& cd $(idestdir)/info \
	&& ($${rdir}/gen-info-dir `pwd`) > dir

dir.info: force
	$(srcdir)/texinfo/gen-info-dir . > dir.info.new
	mv -f dir.info.new dir.info

etags tags: TAGS

TAGS: FORCE
	etags `$(MAKE) ls`

ls:
	@echo Makefile
	@for i in $(SUBDIRS); \
	do \
		(cd $$i; \
			pwd=`pwd`; \
			wd=`basename $$pwd`; \
			for j in `$(MAKE) ls`; \
			do \
				echo $$wd/$$j; \
			done) \
	done

force:

# with the gnu make, this is done automatically.

Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag)
	$(SHELL) ./config.status

#
# Build GDB distributions that contain BFD, Include, Libiberty, Readline, etc

DEVO_SUPPORT= README DOC.configure Makefile.in configure configure.in \
	config.sub config
GDB_SUPPORT_DIRS= bfd include libiberty readline glob
GDB_SUPPORT_FILES= $(GDB_SUPPORT_DIRS) texinfo/fsf/texinfo.tex

setup-dirs: force_update
	./configure sun4
	make clean
	./configure -rm sun4
	chmod og=u `find $(DEVO_SUPPORT) $(GDB_SUPPORT_FILES) -print`

bfd.ilrt.tar.Z: setup-dirs
	rm -f bfd.ilrt.tar.Z
	tar cf - $(DEVO_SUPPORT) $(GDB_SUPPORT_FILES) \
		| compress -v >bfd.ilrt.tar.Z

gdb.tar.Z: setup-dirs
	(cd gdb; $(MAKE) -f Makefile.in make-proto-gdb.dir)
	$(MAKE) $(MFLAGS) -f Makefile.in make-gdb.tar.Z

make-gdb.tar.Z: $(DEVO_SUPPORT) $(GDB_SUPPORT_DIRS) gdb texinfo/fsf/texinfo.tex
	rm -rf proto-toplev; mkdir proto-toplev
	ln -s ../gdb/proto-gdb.dir proto-toplev/gdb
	(cd proto-toplev; for i in $(DEVO_SUPPORT) $(GDB_SUPPORT_DIRS); do \
		ln -s ../$$i . ; \
	done)
	# Put only one copy (four hard links) of COPYING in the tar file.
	rm 			    proto-toplev/bfd/COPYING
	ln proto-toplev/gdb/COPYING proto-toplev/bfd/COPYING
	rm 			    proto-toplev/include/COPYING
	ln proto-toplev/gdb/COPYING proto-toplev/include/COPYING
	rm 			    proto-toplev/readline/COPYING
	ln proto-toplev/gdb/COPYING proto-toplev/readline/COPYING
	# Take out texinfo from configurable dirs
	rm proto-toplev/configure.in
	sed '/^configdirs=/s/texinfo //' <configure.in >proto-toplev/configure.in
	# Take out glob from buildable dirs
	rm proto-toplev/Makefile.in
	sed '/^SUBDIRS =/s/glob //' <Makefile.in >proto-toplev/Makefile.in
	mkdir proto-toplev/texinfo
	mkdir proto-toplev/texinfo/fsf
	ln -s ../../../texinfo/fsf/texinfo.tex proto-toplev/texinfo/fsf/
	chmod og=u `find proto-toplev -print`
	(VER=`sed <gdb/Makefile.in -n 's/VERSION = //p'`; \
		echo "==> Making gdb-$$VER.tar.Z"; \
		ln -s proto-toplev gdb-$$VER; \
		tar cfh - gdb-$$VER \
		| compress -v >gdb-$$VER.tar.Z)

force_update:

nothing:

# end of Makefile.in
