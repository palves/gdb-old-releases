#!/bin/sh

# This script attempts to guess a canonical system name
# similar to the output of config.sub.
# If it succeeds, it prints the system name on stdout, and exits with 0.
# Otherwise, it prints an error message on stderr, and exits with 1.

# The plan is that this can be called by configure scripts if you don't
# specify an explicit system type (host/target name).
#
# Only a few systems have been added to this list;
# please add others (but try to keep the structure clean).

UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown
UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown

# Note: order is significant - the case branches are not exclusive.

case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
    sun4*:SunOS:[5-9].*:*)
	echo sparc-sun-solaris2
	exit 0 ;;
    sun4*:SunOS:*:*)
	echo sparc-sun-sunos${UNAME_RELEASE}
	exit 0 ;;
    sun3*:SunOS:*:*)
	echo m68k-sun-sunos${UNAME_RELEASE}
	exit 0 ;;
    RISC*:ULTRIX:*:*)
	echo mips-dec-ultrix${UNAME_RELEASE}
	exit 0 ;;
    VAX*:ULTRIX:*:*)
	echo vax-dec-ultrix${UNAME_RELEASE}
	exit 0 ;;
    *:IRIX:*:*)
	echo mips-sgi-irix${UNAME_RELEASE}
	exit 0 ;;
    *:AIX:*:*)
	echo rs6000-ibm-aix
	exit 0 ;;
    9000/31?:HP-UX:*:*)
	echo m68000-hp-hpux
	exit 0 ;;
    9000/3??:HP-UX:*:*)
	echo m68k-hp-hpux
	exit 0 ;;
    9000/7??:HP-UX:*:* | 9000/8?7:HP-UX:*:* )
	echo hppa1.1-hp-hpux
	exit 0 ;;
    9000/8??:HP-UX:*:*)
	echo hppa1.0-hp-hpux
	exit 0 ;;
    C1*:ConvexOS:*:*)
	echo c1-convex-bsd
        exit 0 ;;
    C2*:ConvexOS:*:*)
	echo c2-convex-bsd
        exit 0 ;;
    CRAY*X-MP:UNICOS:*:*)
	echo xmp-cray-unicos
        exit 0 ;;
    CRAY*Y-MP:UNICOS:*:*)
	echo ymp-cray-unicos
        exit 0 ;;
    CRAY-2:UNICOS:*:*)
	echo cray2-cray-unicos
        exit 0 ;;
    i[34]86:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux
	exit 0 ;;
    i[34]86:*:3.2:*)
	if uname -X 2>/dev/null >/dev/null ; then
		UNAME_REL=`(uname -X|egrep Release|sed -e 's/.*= //')`
		(uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486
		echo ${UNAME_MACHINE}-unknown-sco$UNAME_REL
	else
		echo ${UNAME_MACHINE}-unknown-sysv3.2
	fi
	exit 0 ;;
esac

echo '(No uname command or uname output not recognized.)' 1>&2
#echo "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" 1>&2

cat >dummy.c <<EOF
main()
{
#if defined (sony)
#if defined (MIPSEB)
#else
  printf("m68k-sony-newsos\n"); exit(0);
#endif
#endif

#if defined(hp300) && !defined(hpux)
  printf("m68k-hp-bsd\n"); exit(0);
#endif

#if defined (MULTIMAX) || defined (n16)
#if defined (UMAXV)
  printf("ns32k-encore-sysv\n"); exit(0);
#else
#if defined (CMU)
  printf("ns32k-encore-mach\n"); exit(0);
#else
  printf("ns32k-encore-bsd\n"); exit(0);
#endif
#endif
#endif

#if defined(__386BSD__) || (defined(__bsdi__) && defined(__i386__))
  printf("i386-unknown-bsd\n"); exit(0);
#endif

  exit (1);
}
EOF

${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0
rm -f dummy.c dummy

echo '(Unable to guess system type)' 1>&2

exit 1
