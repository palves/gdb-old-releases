This is GDB, a source-level debugger intended for GNU,
presently running under un*x.

Before compiling GDB, you must set three files according to
the kind of machine you are running on.

param.h must be set up to #include an m- file for the machine.
The m- files written so far are m-vax.h, m-sun2.h and m-sun3.h.
(I believe that it is the operating system version and not
the cpu type which determines which of the two is right on a Sun.)
This file contains macro definitions that express information
about the machine's registers, stack frame format and instructions.

initialize.h must be set up to #include an m-...init.h file.
There are two of them written: m-vaxinit.h and m-suninit.h.
This file defines one macro, which says how to round up from the
address of the end of the text of one .o file to the beginning of
the text of the next .o file.

pinsn.c must be set up to include the instruction printer for
your cpu type.  The two printers that exist are vax-pinsn.c
and m68k-pinsn.c.

`Makefile' must be changed to say `OBSTACK = obstack.o' instead of
`OBSTACK=-lobstack' (unless you want to install obstack.o as
/lib/libobstack.a).

Once these files are set up, just `make' will do everything,
producing an executable `gdb' in this directory.
