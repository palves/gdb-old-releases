#    Makefile template for Configure for the z8k sim library.
#    Copyright (C) 1993, 1995 Free Software Foundation, Inc.
#    Written by Cygnus Support.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

VPATH = @srcdir@
srcdir = @srcdir@
srcroot = $(srcdir)/../..

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@
program_transform_name = @program_transform_name@
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
tooldir = $(libdir)/$(target_alias)

datadir = $(prefix)/lib
mandir = $(prefix)/man
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = $(prefix)/info
includedir = $(prefix)/include
docdir = $(datadir)/doc

SHELL = /bin/sh

# FIXME: use autoconf's AC_PROG_INSTALL
INSTALL = $(srcroot)/install.sh -c
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL)
INSTALL_XFORM = $(INSTALL) -t='$(program_transform_name)'
INSTALL_XFORM1= $(INSTALL_XFORM) -b=.1

AR = ar
AR_FLAGS = rc
CFLAGS = -g
MAKEINFO = makeinfo
RANLIB = ranlib

.NOEXPORT:
MAKEOVERRIDES=

INCDIR = $(srcdir)/../../include
CSEARCH = -I. -I$(srcdir)  -I../../include  \
  -I../../bfd -I$(INCDIR) -I$(srcdir)/../../bfd -I$(srcdir)/../../gdb -I$(srcdir)/../../newlib/libc/sys/z8k
DEP = mkdep

#### Makefile fragments come in here.
# @host_makefile_frag@
###

TARGETLIB = libsim.a

all:	run libsim.a

CFILES = z8k-dis.c
OFILES = iface.o mem.o comped1.o comped3.o comped2.o support.o  quick.o compedb3.o

run:$(OFILES) run.o
	$(CC) $(CFLAGS) -o run run.o $(OFILES) ../../bfd/libbfd.a ../../libiberty/libiberty.a  ../../opcodes/libopcodes.a

support.o:support.c inlines.h

comped1.o:comped1.c tc-gen1.h 
	$(CC) -c -g -o comped1.o $(CSEARCH) $(srcdir)/comped1.c	

comped3.o:comped3.c tc-gen3.h 
	$(CC) -c -g -o comped3.o $(CSEARCH) $(srcdir)/comped3.c	

compedb3.o:compedb3.c tc-genb3.h 
	$(CC) -c -g -o compedb3.o $(CSEARCH) $(srcdir)/compedb3.c	

comped2.o:comped2.c tc-gen2.h
	$(CC) -c -g -o comped2.o $(CSEARCH) $(srcdir)/comped2.c	

tc-gen1.h:writecode
	./writecode  -1 >tc-gen1.h

tc-gen2.h:quick.c
	./writecode  -2 >tc-gen2.h

tc-gen3.h:writecode
	./writecode  -3 >tc-gen3.h

tc-genb3.h:writecode
	./writecode  -b3 >tc-genb3.h

writecode:writecode.o list.o quick.o
	$(CC) -o writecode writecode.o list.o quick.o

$(TARGETLIB): $(OFILES)
	 rm -f $(TARGETLIB)
	 $(AR) $(AR_FLAGS) $(TARGETLIB) $(OFILES)
	 $(RANLIB) $(TARGETLIB)

.c.o:
	$(CC) -c $(CFLAGS) $(HDEFINES) $(TDEFINES) $(CSEARCH) $(CSWITCHES) $<

check:

info:
clean-info:
install-info:

tags etags: TAGS

TAGS: force
	etags $(INCDIR)/*.h $(srcdir)/*.h $(srcdir)/*.c

clean:
	rm -f *.[oa] *~ core tc-gen1.h tc-gen2.h tc-gen3.h tc-genb3.h writecode 
	rm -f run libsim.a

distclean mostlyclean realclean: clean
	rm -f TAGS
	rm -f Makefile config.cache config.log config.status

# Dummy target to force execution of dependent targets.
#
force:

# Copy the files into directories where they will be run.
install:
	srcroot=`cd $(srcroot); pwd`; export srcroot; \
	$(INSTALL_XFORM) run $(bindir)/run ;  \
	n=`t='$(program_transform_name)'; echo run | sed -e "" $$t`; \
	if [ -d $(tooldir) ] ; then \
	  if [ -d $(tooldir)/bin ] ; then true ; else mkdir $(tooldir)/bin ; fi; \
	  rm -f $(tooldir)/bin/run;  \
	  ln $(bindir)/$$n $(tooldir)/bin/run \
	   || $(INSTALL_PROGRAM) run $(tooldir)/bin/run; \
	else true; fi

Makefile: Makefile.in config.status @frags@
	$(SHELL) ./config.status

config.status: configure
	$(SHELL) ./config.status --recheck

dep: $(CFILES)
	mkdep $(CFLAGS) $?


# What appears below is generated by a hacked mkdep using gcc -MM.

# DO NOT DELETE THIS LINE -- mkdep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.


# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
