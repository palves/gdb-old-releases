#
# This file is a Makefile for Tcl.  If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile.
#

# Current Tcl version;  used in various names.

VERSION = 7.5

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix =	@prefix@
exec_prefix =	@exec_prefix@

# The following definition can be set to non-null for special systems
# like AFS with replication.  It allows the pathnames used for installation
# to be different than those used for actually reference files at
# run-time.  INSTALL_ROOT is prepended to $prefix and $exec_prefix
# when installing files.
INSTALL_ROOT =

# Directory from which applications will reference the library of Tcl
# scripts (note: you can set the TCL_LIBRARY environment variable at
# run-time to override this value):
TCL_LIBRARY =	$(prefix)/lib/tcl$(VERSION)

# CYGNUS LOCAL location independence
# What is appended to the prefix to get the library name.  Note that
# this MUST begin with a "/".
TCL_LIB_TRAILER = /lib/tcl$(VERSION)
# END CYGNUS LOCAL

# Path name to use when installing library scripts:
SCRIPT_INSTALL_DIR =	$(INSTALL_ROOT)$(TCL_LIBRARY)

# Directory in which to install the archive libtcl.a:
LIB_INSTALL_DIR =	$(INSTALL_ROOT)$(exec_prefix)/lib

# Directory in which to install the program tclsh:
BIN_INSTALL_DIR =	$(INSTALL_ROOT)$(exec_prefix)/bin

# Directory in which to install the include file tcl.h:
INCLUDE_INSTALL_DIR =	$(INSTALL_ROOT)$(prefix)/include

# Top-level directory in which to install manual entries:
MAN_INSTALL_DIR =	$(INSTALL_ROOT)$(prefix)/man

# Directory in which to install manual entry for tclsh:
MAN1_INSTALL_DIR =	$(MAN_INSTALL_DIR)/man1

# Directory in which to install manual entries for Tcl's C library
# procedures:
MAN3_INSTALL_DIR =	$(MAN_INSTALL_DIR)/man3

# Directory in which to install manual entries for the built-in
# Tcl commands:
MANN_INSTALL_DIR =	$(MAN_INSTALL_DIR)/mann

# Additional libraries to use when linking.  The "LIBS" part will be
# replaced (or has already been replaced) with relevant libraries as
# determined by the configure script.
LIBS = @LIBS@

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = @CFLAGS@

# To change how objects are made into a library archive, change the
# following line:
ARFLAGS = rv

# To disable ANSI-C procedure prototypes reverse the comment characters
# on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# Mathematical functions like sin and atan2 are enabled for expressions
# by default.  To disable them, reverse the comment characters on the
# following pairs of lines:
MATH_FLAGS =
#MATH_FLAGS = -DTCL_NO_MATH
MATH_LIBS = @MATH_LIBS@
#MATH_LIBS =

# To compile for non-UNIX systems (so that only the non-UNIX-specific
# commands are available), reverse the comment characters on the
# following pairs of lines.  In addition, you'll have to provide your
# own replacement for the "panic" procedure (see panic.c for what
# the current one does).
GENERIC_FLAGS =
#GENERIC_FLAGS = -DTCL_GENERIC_ONLY
UNIX_OBJS = panic.o tclEnv.o tclGlob.o tclMain.o tclMtherr.o \
	tclUnixAZ.o tclUnixFile.o tclUnixPipe.o tclUnixStr.o tclUnixUtil.o \
	tclUnixInit.o findself.o
#UNIX_OBJS =

# To enable memory debugging reverse the comment characters on the following
# lines.  Warning:  if you enable memory debugging, you must do it
# *everywhere*, including all the code that calls Tcl, and you must use
# ckalloc and ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS =
#MEM_DEBUG_FLAGS = -DTCL_MEM_DEBUG

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

# Tcl used to let the configure script choose which program to use
# for installing, but there are just too many different versions of
# "install" around;  better to use the install-sh script that comes
# with the distribution, which is slower but guaranteed to work.

INSTALL =		@srcdir@/install-sh -c
INSTALL_PROGRAM =	${INSTALL}
INSTALL_DATA =		${INSTALL} -m 644

#----------------------------------------------------------------
# The symbols below provide support for dynamic loading and shared
# libraries.  The values of the symbols are normally set by the
# configure script.  You shouldn't normally need to modify any of
# these definitions by hand.  However, you can reverse the comments
# on the pairs of lines to force "no dynamic loading or shared
# libraries".
#----------------------------------------------------------------

# Flags to pass to cc when compiling the components of a shared
# library:
SHLIB_CFLAGS = @SHLIB_CFLAGS@
#SHLIB_CFLAGS =

# Base command to use for combining object files into a shared
# library:
SHLIB_LD = @SHLIB_LD@

# Suffix to use for the name of the shared library.  An empty string
# means we don't know how to use shared libraries on this platform.
SHLIB_SUFFIX = @SHLIB_SUFFIX@
#SHLIB_SUFFIX = .a

# Name of the object file that implements dynamic loading on this
# system:
DL_OBJS = @DL_OBJS@
#DL_OBJS = tclLoadNone.o

# Library file(s) to include in tclsh and other base applications
# in order to provide facilities needed by DLOBJ above.
DL_LIBS = @DL_LIBS@
#DL_LIBS =

# Flags to pass to the compiler when linking object files into
# an executable tclsh or tcltest binary.
LD_FLAGS = @LD_FLAGS@
#LD_FLAGS =

# The following symbol is defined to "loadTests" if dynamic loading
# is available;  this causes the "loadTests" target to be built
# when making "tcltest", which causes the shared libraries in the
# dltest subdirectory to be built.  If dynamic loading isn't available,
# configure defines this symbol to an empty string, in which case
# the shared libraries aren't built.
BUILD_DLTEST = @BUILD_DLTEST@
#BUILD_DLTEST =

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

COMPAT_OBJS =		@LIBOBJS@
AC_FLAGS =		@DEFS@
# CYGNUS LOCAL dje/win32
AR =			@AR@
RANLIB =		@RANLIB@
SRC_DIR =		@srcdir@
TOP_DIR =		@srcdir@/..
GENERIC_DIR = 		$(TOP_DIR)/generic
COMPAT_DIR =		$(TOP_DIR)/compat
UNIX_DIR = 		@srcdir@
VPATH =			@srcdir@
CC =			@CC@

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------


CC_SWITCHES =	${CFLAGS} -I${GENERIC_DIR} -I${SRC_DIR} \
${AC_FLAGS} ${MATH_FLAGS} \
${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
-DTCL_LIBRARY=\"${TCL_LIBRARY}\" -DTCL_SHLIB_EXT=\"${SHLIB_SUFFIX}\" \
-DTCL_LIB_TRAILER=\"${TCL_LIB_TRAILER}\"

TCLSH_OBJS = tclAppInit.o

TCLTEST_OBJS = tclTestInit.o tclTest.o

GENERIC_OBJS =	regexp.o tclAlloc.o tclAsync.o tclBasic.o tclCkalloc.o \
	tclCmdAH.o tclCmdIL.o tclCmdMZ.o tclExpr.o tclGet.o \
	tclHash.o tclHistory.o tclInterp.o tclLink.o tclParse.o \
	tclProc.o tclUtil.o tclVar.o tclLoad.o

OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} ${DL_OBJS}

GENERIC_HDRS = \
	$(GENERIC_DIR)/tclRegexp.h \
	$(GENERIC_DIR)/tcl.h \
	$(GENERIC_DIR)/tclInt.h \
	$(GENERIC_DIR)/tclPort.h \
	$(GENERIC_DIR)/patchlevel.h

GENERIC_SRCS = \
	$(GENERIC_DIR)/regexp.c \
	$(GENERIC_DIR)/tclAlloc.c \
	$(GENERIC_DIR)/tclAsync.c \
	$(GENERIC_DIR)/tclBasic.c \
	$(GENERIC_DIR)/tclCkalloc.c \
	$(GENERIC_DIR)/tclCmdAH.c \
	$(GENERIC_DIR)/tclCmdIL.c \
	$(GENERIC_DIR)/tclCmdMZ.c \
	$(GENERIC_DIR)/tclExpr.c \
	$(GENERIC_DIR)/tclGet.c \
	$(GENERIC_DIR)/tclHash.c \
	$(GENERIC_DIR)/tclHistory.c \
	$(GENERIC_DIR)/tclInterp.c \
	$(GENERIC_DIR)/tclLink.c \
	$(GENERIC_DIR)/tclLoad.c \
	$(GENERIC_DIR)/tclParse.c \
	$(GENERIC_DIR)/tclProc.c \
	$(GENERIC_DIR)/tclTest.c \
	$(GENERIC_DIR)/tclUtil.c \
	$(GENERIC_DIR)/tclVar.c

UNIX_HDRS = \
	$(UNIX_DIR)/tclUnixPort.h

UNIX_SRCS = \
	$(UNIX_DIR)/panic.c \
	$(UNIX_DIR)/tclAppInit.c \
	$(UNIX_DIR)/tclEnv.c \
	$(UNIX_DIR)/tclGlob.c \
	$(UNIX_DIR)/tclMain.c \
	$(UNIX_DIR)/tclMtherr.c \
	$(UNIX_DIR)/tclUnixAZ.c \
	$(UNIX_DIR)/tclUnixFile.c \
	$(UNIX_DIR)/tclUnixPipe.c \
	$(UNIX_DIR)/tclUnixStr.c \
	$(UNIX_DIR)/tclUnixUtil.c \
	$(UNIX_DIR)/tclUnixInit.c \
	$(UNIX_DIR)/findself.c

DL_SRCS = \
	$(UNIX_DIR)/tclLoadAix.c \
	$(UNIX_DIR)/tclLoadAout.c \
	$(UNIX_DIR)/tclLoadDl.c \
	$(UNIX_DIR)/tclLoadDl2.c \
	$(UNIX_DIR)/tclLoadDld.c \
	$(GENERIC_DIR)/tclLoadNone.c \
	$(UNIX_DIR)/tclLoadShl.c

# Note: don't include DL_SRCS in SRCS:  most of those files won't
# compile on the current machine, and they will cause problems for
# things like "make depend".

SRCS = $(GENERIC_SRCS) $(UNIX_SRCS)

all: libtcl.a tclsh configInfo

libtcl.a: ${OBJS}
	rm -f libtcl.a
	$(AR) $(ARFLAGS) libtcl.a ${OBJS}
	$(RANLIB) libtcl.a

tclsh: ${TCLSH_OBJS} libtcl.a
	${CC} ${LD_FLAGS} ${TCLSH_OBJS} libtcl.a ${DL_LIBS} \
	    ${LIBS} ${MATH_LIBS} -o tclsh

tcltest: ${TCLTEST_OBJS} libtcl.a ${BUILD_DLTEST}
	@tcllib=`if [ -f libtcl.a ]; then echo libtcl.a; \
	  else echo "-ltcl"; fi`; \
	${CC} ${LD_FLAGS} ${TCLTEST_OBJS} $$tcllib ${DL_LIBS} \
	    ${LIBS} ${MATH_LIBS} -o tcltest

.PHONY: test

# We need to mkdir tests here because it isn't done at configure time
# when the source and build directories are not the same.
test: tcltest
	-@mkdir ../tests
	@cwd=`pwd`; \
	cd $(TOP_DIR); TCL_LIBRARY=`pwd`/library; export TCL_LIBRARY; \
	cd $$cwd; \
	( echo set srcdir \"$(TOP_DIR)/tests\"\;source $(TOP_DIR)/tests/all ) \
	| ./tcltest

# The following targets generate the shared libraries in dltest that
# are used for testing;  this target is included as part of the "tcltest"
# target (via the BUILD_DLTEST variable) if dynamic loading is supported
# on this platform.

.PHONY: loadTests
loadTests:
	cd dltest && $(MAKE)

configInfo: Makefile
	@rm -f configInfo
	@echo "# This file contains definitions needed to build Tcl" \
		>> configInfo
	@echo "# applications and extensions.  Its contents are generated" \
		>> configInfo
	@echo "# by Tcl's configure script.  The file is a shell script" \
		>> configInfo
	@echo "# for sh, and is intended to be sourced by autoconf configure" \
		>> configInfo
	@echo "# scripts." \
		>> configInfo
	@echo CC="'"${CC}"'" >> configInfo
	@echo TCL_CC_SWITCHES="'"'${AC_FLAGS} ${MEM_DEBUG_FLAGS}'"'" >> configInfo
	@echo TCL_LIBS="'"'${LIBS} ${MATH_LIBS}'"'" >> configInfo
	@echo SHLIB_CFLAGS="'"'${SHLIB_CFLAGS}'"'" >> configInfo
	@echo SHLIB_LD="'"'${SHLIB_LD}'"'" >> configInfo
	@echo SHLIB_SUFFIX="'"'${SHLIB_SUFFIX}'"'" >> configInfo
	@echo DL_LIBS="'"'${DL_LIBS}'"'" >> configInfo
	@echo LD_FLAGS="'"'${LD_FLAGS}'"'" >> configInfo

.PHONY: install-binaries install-libraries install-man
install: install-binaries install-libraries install-man

install-binaries: libtcl.a tclsh
	@for i in $(LIB_INSTALL_DIR) $(BIN_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing libtcl.a"
	@$(INSTALL_DATA) libtcl.a $(LIB_INSTALL_DIR)/libtcl$(VERSION).a
	@$(RANLIB) $(LIB_INSTALL_DIR)/libtcl$(VERSION).a
	@echo "Installing tclsh"
	@$(INSTALL_PROGRAM) tclsh $(BIN_INSTALL_DIR)/tclsh

install-libraries: configInfo
	@for i in $(INSTALL_ROOT)$(prefix)/lib $(INCLUDE_INSTALL_DIR) \
		$(SCRIPT_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing tcl.h"
	@$(INSTALL_DATA) $(GENERIC_DIR)/tcl.h $(INCLUDE_INSTALL_DIR)
	@echo "Installing configInfo"
	@$(INSTALL_DATA) configInfo $(SCRIPT_INSTALL_DIR)
	@for i in $(TOP_DIR)/library/*.tcl $(TOP_DIR)/library/tclIndex $(UNIX_DIR)/tclAppInit.c; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR); \
	    done;

install-man:
	@for i in $(MAN_INSTALL_DIR) $(MAN1_INSTALL_DIR) $(MAN3_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@cd $(TOP_DIR)/doc; for i in *.1; \
	    do \
	    echo "Installing doc/$$i"; \
	    rm -f $(MAN1_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		    $$i > $(MAN1_INSTALL_DIR)/$$i; \
	    chmod 444 $(MAN1_INSTALL_DIR)/$$i; \
	    done;
	$(UNIX_DIR)/mkLinks $(MAN1_INSTALL_DIR)
	@cd $(TOP_DIR)/doc; for i in *.3; \
	    do \
	    echo "Installing doc/$$i"; \
	    rm -f $(MAN3_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		    $$i > $(MAN3_INSTALL_DIR)/$$i; \
	    chmod 444 $(MAN3_INSTALL_DIR)/$$i; \
	    done;
	@cd $(TOP_DIR)/doc; for i in *.n; \
	    do \
	    echo "Installing doc/$$i"; \
	    name=`echo $$i | sed -e 's/n$$/3/'`; \
	    rm -f $(MAN3_INSTALL_DIR)/$$name; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		    $$i > $(MAN3_INSTALL_DIR)/$$name; \
	    chmod 444 $(MAN3_INSTALL_DIR)/$$name; \
	    done;
	$(UNIX_DIR)/mkLinks $(MAN3_INSTALL_DIR)

Makefile: $(UNIX_DIR)/Makefile.in
	$(SHELL) ./config.status

.PHONY: info install-info
info:
install-info:

.PHONY: mostlyclean clean distclean maintainer-clean depend

# FIXME
mostlyclean: clean

clean:
	rm -f *.a *.o core errs *~ \#* TAGS *.E a.out errors tclsh tcltest
	cd dltest && $(MAKE) clean

distclean: clean
	rm -f Makefile config.status config.cache configInfo config.log
	cd dltest && $(MAKE) distclean

maintainer-clean: distclean

depend:
	makedepend -- $(CC_SWITCHES) -- $(SRCS)

.PHONY: etags tags all
etags tags: TAGS

TAGS: $(SRCS) $(DL_SRCS)
	etags $(SRCS) $(DL_SRCS)

# Test binaries.  The rule for tclTestInit.o is complicated because
# it is is compiled from tclAppInit.c.  Can't use the "-o" option
# because this doesn't work on some strange compilers (e.g. UnixWare).
# So, make a link insted.

tclTestInit.o: tclAppInit.c
	rm -f tclTestInit.c
	ln $(SRC_DIR)/tclAppInit.c tclTestInit.c \
	  || cp $(SRC_DIR)/tclAppInit.c tclTestInit.c
	$(CC) -c $(CC_SWITCHES) -DTCL_TEST tclTestInit.c
	rm -f tclTestInit.c

# Dependencies for Sun's VPATH.
panic.o: panic.c
tclAppInit.o: tclAppInit.c
tclEnv.o: tclEnv.c
tclGlob.o: tclGlob.c
tclMain.o: tclMain.c
tclMtherr.o: tclMtherr.c
tclUnixAZ.o: tclUnixAZ.c
tclUnixFile.o: tclUnixFile.c
tclUnixPipe.o: tclUnixPipe.c
tclUnixStr.o: tclUnixStr.c
tclUnixUtil.o: tclUnixUtil.c
tclUnixInit.o: tclUnixInit.c
tclLoadDl.o: tclLoadDl.c
findself.o: findself.c

# Generic binaries:

regexp.o: $(GENERIC_DIR)/regexp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regexp.c

tclAlloc.o: $(GENERIC_DIR)/tclAlloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclAlloc.c

tclAsync.o: $(GENERIC_DIR)/tclAsync.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclAsync.c

tclBasic.o: $(GENERIC_DIR)/tclBasic.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclBasic.c

tclCkalloc.o: $(GENERIC_DIR)/tclCkalloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCkalloc.c

tclCmdAH.o: $(GENERIC_DIR)/tclCmdAH.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdAH.c

tclCmdIL.o: $(GENERIC_DIR)/tclCmdIL.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdIL.c

tclCmdMZ.o: $(GENERIC_DIR)/tclCmdMZ.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdMZ.c

tclExpr.o: $(GENERIC_DIR)/tclExpr.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclExpr.c

tclGet.o: $(GENERIC_DIR)/tclGet.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclGet.c

tclHash.o: $(GENERIC_DIR)/tclHash.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclHash.c

tclHistory.o: $(GENERIC_DIR)/tclHistory.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclHistory.c

tclInterp.o: $(GENERIC_DIR)/tclInterp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclInterp.c

tclLink.o: $(GENERIC_DIR)/tclLink.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLink.c

tclLoad.o: $(GENERIC_DIR)/tclLoad.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLoad.c

tclLoadNone.o: $(GENERIC_DIR)/tclLoadNone.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLoadNone.c

tclParse.o: $(GENERIC_DIR)/tclParse.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclParse.c

tclProc.o: $(GENERIC_DIR)/tclProc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclProc.c

tclUtil.o: $(GENERIC_DIR)/tclUtil.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclUtil.c

tclVar.o: $(GENERIC_DIR)/tclVar.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclVar.c

tclTest.o: $(GENERIC_DIR)/tclTest.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTest.c

# compat binaries

fixstrtod.o: $(COMPAT_DIR)/fixstrtod.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/fixstrtod.c

getcwd.o: $(COMPAT_DIR)/getcwd.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/getcwd.c

opendir.o: $(COMPAT_DIR)/opendir.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/opendir.c

strncasecmp.o: $(COMPAT_DIR)/strncasecmp.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strncasecmp.c

strstr.o: $(COMPAT_DIR)/strstr.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strstr.c

strtod.o: $(COMPAT_DIR)/strtod.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtod.c

strtol.o: $(COMPAT_DIR)/strtol.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtol.c

strtoul.o: $(COMPAT_DIR)/strtoul.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtoul.c

tmpnam.o: $(COMPAT_DIR)/tmpnam.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/tmpnam.c

waitpid.o: $(COMPAT_DIR)/waitpid.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/waitpid.c

.c.o:
	$(CC) -c $(CC_SWITCHES) $<

#
# Target to check for proper usage of UCHAR macro.
#

checkuchar:
	-egrep isalnum\|isalpha\|iscntrl\|isdigit\|islower\|isprint\|ispunct\|isspace\|isupper\|isxdigit\|toupper\|tolower $(SRCS) | grep -v UCHAR

#
# Target to make sure that only symbols with "Tcl" prefixes are
# exported.
#

checkexports: libtcl.a
	-nm -p libtcl.a | awk '$$2 ~ /[TDB]/ { print $$3 }' | sort -n | grep -v '^[Tt]cl'

#
# Target to create a proper Tcl distribution from information in the
# master source directory.  DISTDIR must be defined to indicate where
# to put the distribution.
#

configure: configure.in
	autoconf

.PHONY: dist
dist: configure
	rm -rf $(DISTDIR)
	mkdir $(DISTDIR)
	mkdir $(DISTDIR)/unix
	cp -p $(UNIX_DIR)/*.c $(UNIX_DIR)/*.h $(DISTDIR)/unix
	cp Makefile.in $(DISTDIR)/unix
	chmod 664 $(DISTDIR)/unix/Makefile.in
	cp configure configure.in install-sh porting.notes \
		porting.old README $(DISTDIR)/unix
	chmod 775 $(DISTDIR)/unix/configure $(DISTDIR)/unix/configure.in
	chmod +x $(DISTDIR)/unix/install-sh
	tclsh mkLinks.tcl ../doc/*.[13n] > $(DISTDIR)/unix/mkLinks
	chmod +x $(DISTDIR)/unix/mkLinks
	mkdir $(DISTDIR)/generic
	cp -p $(GENERIC_DIR)/*.c $(GENERIC_DIR)/*.h $(DISTDIR)/generic
	cp -p $(GENERIC_DIR)/README $(DISTDIR)/generic
	cp -p ../changes ../README ../license.terms $(DISTDIR)
	mkdir $(DISTDIR)/library
	cp -p ../license.terms ../library/*.tcl ../library/tclIndex \
		 $(DISTDIR)/library
	mkdir $(DISTDIR)/doc
	cp -p ../license.terms ../doc/*.[13n] ../doc/man.macros $(DISTDIR)/doc
	mkdir $(DISTDIR)/compat
	cp -p ../license.terms ../compat/*.c ../compat/*.h ../compat/README \
		$(DISTDIR)/compat
	mkdir $(DISTDIR)/tests
	cp -p ../license.terms $(DISTDIR)/tests
	cp -p ../tests/*.test ../tests/README ../tests/all \
		../tests/defs $(DISTDIR)/tests
	mkdir $(DISTDIR)/win
	cp -p ../win/*.c ../win/*.h ../win/*.rc $(DISTDIR)/win
	cp -p ../win/makefile.* $(DISTDIR)/win
	cp -p ../win/README $(DISTDIR)/win
	cp -p ../license.terms $(DISTDIR)/win
	mkdir $(DISTDIR)/mac
	cp -p ../mac/*.c ../mac/*.h ../mac/*.r ../mac/*.hqx $(DISTDIR)/mac
	cp -p ../mac/porting.notes ../mac/README $(DISTDIR)/mac
	cp -p ../license.terms $(DISTDIR)/mac
	mkdir $(DISTDIR)/unix/dltest
	cp -p dltest/*.c dltest/Makefile.in $(DISTDIR)/unix/dltest
	cp -p dltest/configure.in dltest/configure $(DISTDIR)/unix/dltest
	cp -p dltest/README $(DISTDIR)/unix/dltest


# DO NOT DELETE THIS LINE -- make depend depends on it.
