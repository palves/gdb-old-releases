#
# This file is a Makefile for Tcl.  If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile.

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

#
# both these values get replaced by running configure
#
prefix =	@prefix@
exec_prefix =	@exec_prefix@

# Directory in which to install the library of Tcl scripts (note:
# you can set the TCL_LIBRARY environment variable at run-time to
# override the compiled-in location):
TCL_LIBRARY =	$(prefix)/lib/tcl

# Directory in which to install the archive libtcl.a:
LIB_DIR =	$(exec_prefix)/lib

# Directory in which to install the program tclsh:
BIN_DIR =	$(exec_prefix)/bin

# Directory in which to install the include file tcl.h:
INCLUDE_DIR =	$(prefix)/include

# Top-level directory for manual entries:
MAN_DIR =	$(prefix)/man

# Directory in which to install manual entry for tclsh:
MAN1_DIR =	$(MAN_DIR)/man1

# Directory in which to install manual entries for Tcl's C library
# procedures:
MAN3_DIR =	$(MAN_DIR)/man3

# Directory in which to install manual entries for the built-in
# Tcl commands:
MANN_DIR =	$(MAN_DIR)/mann

# To change how objects are made into a library archive, change the
# following line:
AR_FLAGS = cr

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = -g

# To disable ANSI-C procedure prototypes reverse the comment characters
# on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# Mathematical functions like sin and atan2 are enabled for expressions
# by default.  To disable them, reverse the comment characters on the
# following pairs of lines:
MATH_FLAGS =
#MATH_FLAGS = -DTCL_NO_MATH
MATH_LIBS = @MATH_LIBS@
#MATH_LIBS =

# To compile for non-UNIX systems (so that only the non-UNIX-specific
# commands are available), reverse the comment characters on the
# following pairs of lines.  In addition, you'll have to provide your
# own replacement for the "panic" procedure (see panic.c for what
# the current one does).
GENERIC_FLAGS =
#GENERIC_FLAGS = -DTCL_GENERIC_ONLY
UNIX_OBJS = panic.o tclEnv.o tclGlob.o tclMain.o tclMtherr.o \
	tclUnixAZ.o tclUnixStr.o tclUnixUtil.o
#UNIX_OBJS =

# To enable memory debugging reverse the comment characters on the following
# lines.  Warning:  if you enable memory debugging, you must do it
# *everywhere*, including all the code that calls Tcl, and you must use
# ckalloc and ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS =
#MEM_DEBUG_FLAGS = -DTCL_MEM_DEBUG

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

COMPAT_OBJS =		@LIBOBJS@
AC_FLAGS =		@DEFS@
INSTALL =		@INSTALL@
INSTALL_PROGRAM =	@INSTALL_PROGRAM@
INSTALL_DATA =		@INSTALL_DATA@
RANLIB =		@RANLIB@
SRC_DIR =		@srcdir@
VPATH =			@srcdir@
#----------------------------------------------------------------
# These let the DejaGnu test suite run when DejaGnu isn't 
# installed yet, so run it from the srcdir and objdir.
#----------------------------------------------------------------
EXPECT = ` \
  if [ -f $${rootme}/../expect/expect ] ; then \
    echo $${rootme}/../expect/expect ; \
  else echo expect ; fi`

RUNTESTFLAGS =
RUNTEST = ` \
  if [ -f $(SRC_DIR)/../dejagnu/runtest ] ; then \
    echo $(SRC_DIR)/../dejagnu/runtest ; \
  else echo runtest ;  fi`

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------

CC = @CC@
CC_SWITCHES = ${CFLAGS} -I. -I${SRC_DIR} ${AC_FLAGS} ${MATH_FLAGS} \
	${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
	-DTCL_LIBRARY=\"${TCL_LIBRARY}\"

GENERIC_OBJS =	regexp.o tclAlloc.o tclAsync.o tclBasic.o tclCkalloc.o \
	tclCmdAH.o tclCmdIL.o tclCmdMZ.o tclExpr.o tclGet.o \
	tclHash.o tclHistory.o tclLink.o tclParse.o tclProc.o \
	tclUtil.o tclVar.o

OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS}

SRCS= regexp.c tclAlloc.c tclAsync.c tclBasic.c tclCkalloc.c \
	tclCmdAH.c tclCmdIL.c tclCmdMZ.c tclExpr.c tclGet.c \
	tclHash.c tclHistory.c tclLink.c tclParse.c tclProc.c \
	tclUtil.c tclVar.c panic.c tclEnv.c tclGlob.c tclMain.c \
	tclMtherr.c tclUnixAZ.c tclUnixStr.c tclUnixUtil.c

all: libtcl.a tclsh

libtcl.a: ${OBJS}
	rm -f libtcl.a
	${AR} ${AR_FLAGS} libtcl.a ${OBJS}
	$(RANLIB) libtcl.a

tclsh: tclAppInit.o libtcl.a
	${CC} ${CC_SWITCHES} tclAppInit.o libtcl.a ${MATH_LIBS} -o tclsh

tcltest: tclTest.o ${SRC_DIR}/tclTest.c
	@tcllib=`if [ -f libtcl.a ] ; then \
	  echo libtcl.a ; \
	else echo "-ltcl" ; fi` ; \
	${CC} ${CC_SWITCHES} tclTest.o $${tcllib} ${MATH_LIBS} -o tcltest

check:	tcltest
	rootme=`pwd`; export rootme; \
	srcdir=${SRC_DIR} ; export srcdir ; \
	EXPECT=${EXPECT} ; export EXPECT ; \
	if [ -f $${rootme}/../expect/expect ] ; then  \
	   TCL_LIBRARY=$${srcdir}/library ; \
	   export TCL_LIBRARY ; fi ; \
	$(RUNTEST) $(RUNTESTFLAGS) --tool tcl --srcdir $(SRC_DIR)/testsuite

test: tcltest
	@cwd=`pwd`; \
	cd $(SRC_DIR); TCL_LIBRARY=`pwd`/library; export TCL_LIBRARY; \
	cd $$cwd; ( echo cd $(SRC_DIR)/tests\; source all ) | ./tcltest

configInfo: Makefile
	@rm -f configInfo
	@echo "# Definitions and libraries needed to build Tcl applications" >> configInfo
	@echo "# (generated by the configure script):" >> configInfo
	@echo "TCL_CC_SWITCHES = ${AC_FLAGS} ${MEM_DEBUG_FLAGS}" >> configInfo
	@echo "TCL_LIBS = ${MATH_LIBS} @LIBS@" >> configInfo

.PHONY: install install-binaries install-libraries install-man
install: install-binaries install-libraries install-man

install-binaries: libtcl.a tclsh
	@for i in $(LIB_DIR) $(BIN_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing libtcl.a"
	@$(INSTALL_DATA) libtcl.a $(LIB_DIR)
	@$(RANLIB) $(LIB_DIR)/libtcl.a
	@echo "Installing tclsh"
	@$(INSTALL_PROGRAM) tclsh $(BIN_DIR)

install-libraries:
	@for i in $(prefix)/lib $(INCLUDE_DIR) $(TCL_LIBRARY) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing tcl.h"
	@$(INSTALL_DATA) $(SRC_DIR)/tcl.h $(INCLUDE_DIR)
	@for i in $(SRC_DIR)/library/*.tcl $(SRC_DIR)/library/tclIndex; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(TCL_LIBRARY); \
	    done;

install-man:
#	@cd $(SRC_DIR)/doc; for i in *.1; \
#	    do \
#	    echo "Installing doc/$$i"; \
#	    rm -f $(MAN1_DIR)/$$i; \
#	    rm -f ./.mantmp; \
#	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
#		    $$i > ./.mantmp; \
#	    $(INSTALL) ./.mantmp $(MAN1_DIR)/$$i; \
#	    done;
#	@cd $(SRC_DIR)/doc; for i in *.3; \
#	    do \
#	    echo "Installing doc/$$i"; \
#	    rm -f $(MAN3_DIR)/$$i; \
#	    rm -f ./.mantmp; \
#	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
#		    $$i > ./.mantmp; \
#	    $(INSTALL) ./.mantmp $(MAN3_DIR)/$$i; \
#	    done;
#	cd $(SRC_DIR)/doc; for i in *.n; \
#	    do \
#	    echo "Installing doc/$$i"; \
#	    rm -f $(MANN_DIR)/$$i; \
#	    rm -f ./.mantmp; \
#	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
#		    $$i > ./.mantmp; \
#	    $(INSTALL) ./.mantmp $(MANN_DIR)/$$i; \
#	    done;

Makefile: $(SRC_DIR)/Makefile.in
	$(SHELL) ./config.status

installcheck:
info:
install-info:

.PHONY: all etags tags ls clean 
etags tags:     TAGS

TAGS: $(CFILES)
	etags $(HFILES) $(CFILES)

ls:
	@echo Makefile $(HFILES) $(CFILES)

configured:
	@echo "The configuration script \"./config\" hasn't been run"
	@echo "successfully yet.  Please run it as described in the "
	@echo "README file, then run make again."
	exit 1

# targets to clean up
clean:
	rm -f *.a *.o core errs *~ \#* TAGS *.E a.out errors tclsh tcltest

realclean: distclean

mostlyclean: distclean
force:

distclean: clean
	rm -f Makefile config.status config.cache config.log
	for i in compat/*.[ch] ; do rm -f `basename $$i` ; done

depend:
	makedepend -- $(CC_SWITCHES) -- $(SRCS)

getcwd.o: $(SRC_DIR)/compat/getcwd.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/getcwd.c

opendir.o: $(SRC_DIR)/compat/opendir.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/opendir.c

strerror.o: $(SRC_DIR)/compat/strerror.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/strerror.c

strncasecmp.o: $(SRC_DIR)/compat/strncasecmp.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/strncasecmp.c

strstr.o: $(SRC_DIR)/compat/strstr.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/strstr.c

strtod.o: $(SRC_DIR)/compat/strtod.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/strtod.c

strtol.o: $(SRC_DIR)/compat/strtol.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/strtol.c

strtoul.o: $(SRC_DIR)/compat/strtoul.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/strtoul.c

tmpnam.o: $(SRC_DIR)/compat/tmpnam.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/tmpnam.c

waitpid.o: $(SRC_DIR)/compat/waitpid.c
	$(CC) -c $(CC_SWITCHES) $(SRC_DIR)/compat/waitpid.c

.c.o:
	$(CC) -c $(CC_SWITCHES) $<

#
# Target to check for proper usage of UCHAR macro.
#

checkuchar:
	-egrep isalnum\|isalpha\|iscntrl\|isdigit\|islower\|isprint\|ispunct\|isspace\|isupper\|isxdigit $(SRCS) | grep -v UCHAR

#
# Target to create a proper Tcl distribution from information in the
# master source directory.  DISTDIR must be defined to indicate where
# to put the distribution.
#

configure: configure.in
	autoconf
dist: configure
	rm -rf $(DISTDIR)
	mkdir $(DISTDIR)
	cp Makefile.in $(DISTDIR)
	chmod 664 $(DISTDIR)/Makefile.in
	cp -p $(SRCS) tclTest.c tclAppInit.c $(DISTDIR)
	cp -p tclRegexp.h tcl.h tclInt.h tclPort.h patchlevel.h $(DISTDIR)
	cp configure configure.in $(DISTDIR)
	chmod 775 $(DISTDIR)/configure $(DISTDIR)/configure.in
	cp -p changes README porting.notes porting.old license.terms \
		install.sh $(DISTDIR)
	chmod +x $(DISTDIR)/install.sh
	mkdir $(DISTDIR)/library
	cp -p license.terms library/*.tcl library/tclIndex $(DISTDIR)/library
	mkdir $(DISTDIR)/doc
	cp -p license.terms doc/*.[13n] doc/man.macros $(DISTDIR)/doc
	mkdir $(DISTDIR)/compat
	cp -p license.terms compat/*.c compat/*.h compat/README \
		$(DISTDIR)/compat
	mkdir $(DISTDIR)/tests
	cp -p license.terms $(DISTDIR)/tests
	cp -p tests/*.test tests/README tests/all tests/defs $(DISTDIR)/tests

# DO NOT DELETE THIS LINE -- make depend depends on it.
